{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\src\\store.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\store.js","mtime":1580420301778},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _toConsumableArray from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _Object$keys from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { bus, Layer, ShapeGroup, Action } from '@/main.js';\nimport { project } from 'paper';\nimport Utils from '@/Utils.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    ACTIVE_TOOL: 'select',\n    LAYER_WINDOW_ACTIVE: false,\n    SCREEN_BORDER: null,\n    TOOLSELECT: null,\n    TOOLPOINTER: null,\n    TOOLPEN: null,\n    TOOLCIRCLE: null,\n    TOOLRECTANGLE: null,\n    TOOLSHAPEBUILDER: null,\n    TOOLLINE: null,\n    OBJECTS: [],\n    SELECTED: [],\n    // Undo and redo\n    ACTIONS: [],\n    REDO_ACTIONS: [],\n    // Window toggles\n    COLORPICKER_ACTIVE: false,\n    FILEDROPDOWN_ACTIVE: false,\n    // Tools settings\n    PEN_WIDTH: 1,\n    PEN_OPACITY: 1,\n    PEN_STROKECOLOR: 'black',\n    PEN_FILLCOLOR: 'transparent',\n    CIRCLE_WIDTH: 1,\n    CIRCLE_OPACITY: 1,\n    CIRCLE_STROKECOLOR: 'black',\n    CIRCLE_FILLCOLOR: 'transparent',\n    RECTANGLE_WIDTH: 1,\n    RECTANGLE_OPACITY: 1,\n    RECTANGLE_STROKECOLOR: 'black',\n    RECTANGLE_FILLCOLOR: 'transparent',\n    LINE_WIDTH: 1,\n    LINE_OPACITY: 1,\n    LINE_STROKECOLOR: 'black',\n    // Layers\n    LAYERS: [],\n    SELECTED_LAYER_INDEX: 1,\n    UI_LAYER: null,\n    // Guide Shapes\n    GUIDE_X_VALUES: [],\n    GUIDE_Y_VALUES: [],\n    GUIDE_LINES_Y: [],\n    GUIDE_LINES_X: []\n  },\n  mutations: {\n    // File settings\n    SET_SCREEN_BORDER: function SET_SCREEN_BORDER(state, path) {\n      state.SCREEN_BORDER = path;\n    },\n    EXPORT_SVG: function EXPORT_SVG(state) {\n      var data = [];\n      var objects = Utils.getUngrouped(state.OBJECTS);\n\n      for (var i = 0; i < objects.length; i++) {\n        var item = objects[i];\n        var itemData = {\n          svg: item.exportSVG({\n            asString: true\n          }),\n          selectable: item.selectable,\n          type: item.type\n        };\n        data.push(itemData);\n      }\n\n      Utils.download('project', data);\n    },\n    IMPORT_SVG: function IMPORT_SVG(state) {\n      var _file_input = document.createElement('input');\n\n      _file_input.type = 'file';\n\n      _file_input.addEventListener('change', function (e) {\n        var _file = e.target.files[0];\n        project.clear();\n        state.OBJECTS = [];\n        state.SELECTED = [];\n        var fs = new FileReader();\n\n        fs.onload = function () {\n          var data = JSON.parse(fs.result); // Add every shape from the file\n\n          _Object$keys(data).forEach(function (key, index) {\n            if (data[key].type != \"group\") {\n              project.importSVG(data[key].svg, {\n                onLoad: function onLoad(item) {\n                  item.selectable = data[key].selectable;\n                  item.type = data[key].type;\n                  state.OBJECTS.push(item);\n                }\n              });\n            }\n          });\n        };\n\n        fs.readAsText(_file);\n        _file_input = null;\n      });\n\n      _file_input.click();\n    },\n    // --- Tools ---\n    SET_ACTIVE: function SET_ACTIVE(state, type) {\n      var old = state.ACTIVE_TOOL;\n      state.ACTIVE_TOOL = type;\n\n      if (old == \"select\" && type != \"select\") {\n        bus.$emit(\"deactivate-select\");\n      }\n\n      if (old == \"pointer\" && type != \"pointer\") {\n        bus.$emit(\"deactivate-pointer\");\n      }\n    },\n    SET_LAYER_WINDOW_ACTIVE: function SET_LAYER_WINDOW_ACTIVE(state, value) {\n      state.LAYER_WINDOW_ACTIVE = value;\n    },\n    SET_TOOLSELECT: function SET_TOOLSELECT(state, tool) {\n      state.TOOLSELECT = tool;\n    },\n    SET_TOOLPOINTER: function SET_TOOLPOINTER(state, tool) {\n      state.TOOLPOINTER = tool;\n    },\n    SET_TOOLPEN: function SET_TOOLPEN(state, tool) {\n      state.TOOLPEN = tool;\n    },\n    SET_TOOLCIRCLE: function SET_TOOLCIRCLE(state, tool) {\n      state.TOOLCIRCLE = tool;\n    },\n    SET_TOOLRECTANGLE: function SET_TOOLRECTANGLE(state, tool) {\n      state.TOOLRECTANGLE = tool;\n    },\n    SET_TOOLSHAPEBUILDER: function SET_TOOLSHAPEBUILDER(state, tool) {\n      state.TOOLSHAPEBUILDER = tool;\n    },\n    SET_TOOLLINE: function SET_TOOLLINE(state, tool) {\n      state.TOOLLINE = tool;\n    },\n    // --- Shapes ---\n    ADD_SHAPE: function ADD_SHAPE(state, shape) {\n      state.OBJECTS.push(shape);\n    },\n    // --- Selection ---\n    ADD_SELECT: function ADD_SELECT(state, shape) {\n      if (!state.SELECTED.includes(shape)) state.SELECTED.push(shape);\n    },\n    DESELECT: function DESELECT(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (shapes == null) shapes = _toConsumableArray(state.SELECTED);\n\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        shapes[i].selected = false; // Find the shape in the selected array\n\n        var index_sel = state.SELECTED.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it from selection array\n\n        if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n      }\n    },\n    DELETE_SHAPES: function DELETE_SHAPES(state) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shapes: shapes,\n        undo: false\n      };\n      return function () {\n        var shapes = options.shapes;\n        if (shapes == null) shapes = _toConsumableArray(state.SELECTED);\n        var action = null;\n\n        if (options.undo) {\n          action = new Action(\"delete\", {\n            shapes: shapes,\n            layers: []\n          });\n        }\n\n        var _loop = function _loop(i) {\n          if (options.undo) {\n            action.data.layers.push(shapes[i].layer);\n            shapes[i].visible = false;\n            shapes[i].selectable = false;\n            shapes[i].selected = false;\n          } else {\n            // Destroy the shape (it's still in the objects and the selection array)\n            shapes[i].remove();\n          } // Find the shape in the objects array\n\n\n          var index_obj = state.OBJECTS.findIndex(function (x) {\n            return x === shapes[i];\n          }); // Find the shape in the selected array\n\n          var index_sel = state.SELECTED.findIndex(function (x) {\n            return x === shapes[i];\n          }); // Remove it from the objects array\n\n          state.OBJECTS.splice(index_obj, 1); // Remove it from selection array\n\n          if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n        };\n\n        for (var i = 0; i < shapes.length; i++) {\n          _loop(i);\n        }\n\n        if (options.undo) {\n          state.ACTIONS.push(action);\n          state.REDO_ACTIONS = [];\n        }\n      }();\n    },\n    // Remove shapes from the objects and selection array WITHOUT DESTROYING THEM\n    DISCARD_SHAPES: function DISCARD_SHAPES(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (shapes == null) shapes = _toConsumableArray(state.SELECTED);\n\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        // Find the shape in the objects array\n        var index_obj = state.OBJECTS.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Find the shape in the selected array\n\n        var index_sel = state.SELECTED.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it from objects array\n\n        state.OBJECTS.splice(index_obj, 1); // Remove it from selection array\n\n        if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n      }\n    },\n    SELECTION_SET_STROKECOLOR: function SELECTION_SET_STROKECOLOR(state, value) {\n      bus.$emit('set_color_stroke', value);\n    },\n    SELECTION_SET_STROKEWIDTH: function SELECTION_SET_STROKEWIDTH(state, value) {\n      bus.$emit('set_width_stroke', value);\n    },\n    SELECTION_SET_STROKECAP: function SELECTION_SET_STROKECAP(state, value) {\n      bus.$emit('set_cap_stroke', value);\n    },\n    SELECTION_SET_FILLCOLOR: function SELECTION_SET_FILLCOLOR(state, value) {\n      bus.$emit('set_color_fill', value);\n    },\n    SELECTION_SET_OPACITY: function SELECTION_SET_OPACITY(state, value) {\n      bus.$emit('set_opacity', value);\n    },\n    PEN_SET_WIDTH: function PEN_SET_WIDTH(state, value) {\n      state.PEN_WIDTH = value;\n    },\n    PEN_SET_OPACITY: function PEN_SET_OPACITY(state, value) {\n      state.PEN_OPACITY = value;\n    },\n    PEN_SET_STROKECOLOR: function PEN_SET_STROKECOLOR(state, value) {\n      state.PEN_STROKECOLOR = value;\n    },\n    PEN_SET_FILLCOLOR: function PEN_SET_FILLCOLOR(state, value) {\n      state.PEN_FILLCOLOR = value;\n    },\n    CIRCLE_SET_WIDTH: function CIRCLE_SET_WIDTH(state, value) {\n      state.CIRCLE_WIDTH = value;\n    },\n    CIRCLE_SET_OPACITY: function CIRCLE_SET_OPACITY(state, value) {\n      state.CIRCLE_OPACITY = value;\n    },\n    CIRCLE_SET_STROKECOLOR: function CIRCLE_SET_STROKECOLOR(state, value) {\n      state.CIRCLE_STROKECOLOR = value;\n    },\n    CIRCLE_SET_FILLCOLOR: function CIRCLE_SET_FILLCOLOR(state, value) {\n      state.CIRCLE_FILLCOLOR = value;\n    },\n    RECTANGLE_SET_WIDTH: function RECTANGLE_SET_WIDTH(state, value) {\n      state.RECTANGLE_WIDTH = value;\n    },\n    RECTANGLE_SET_OPACITY: function RECTANGLE_SET_OPACITY(state, value) {\n      state.RECTANGLE_OPACITY = value;\n    },\n    RECTANGLE_SET_STROKECOLOR: function RECTANGLE_SET_STROKECOLOR(state, value) {\n      state.RECTANGLE_STROKECOLOR = value;\n    },\n    RECTANGLE_SET_FILLCOLOR: function RECTANGLE_SET_FILLCOLOR(state, value) {\n      state.RECTANGLE_FILLCOLOR = value;\n    },\n    LINE_SET_WIDTH: function LINE_SET_WIDTH(state, value) {\n      state.LINE_WIDTH = value;\n    },\n    LINE_SET_OPACITY: function LINE_SET_OPACITY(state, value) {\n      state.LINE_OPACITY = value;\n    },\n    LINE_SET_STROKECOLOR: function LINE_SET_STROKECOLOR(state, value) {\n      state.LINE_STROKECOLOR = value;\n    },\n    // Add an action to the undo list\n    ADD_ACTION: function ADD_ACTION(state, action) {\n      var clear_redo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      state.ACTIONS.push(action);\n      if (clear_redo) state.REDO_ACTIONS = [];\n    },\n    CLEAR_REDO: function CLEAR_REDO(state) {\n      state.REDO_ACTIONS = [];\n    },\n    REDO: function REDO(state) {\n      if (state.REDO_ACTIONS.length <= 0) {\n        return;\n      }\n\n      var action = state.REDO_ACTIONS.pop();\n\n      switch (action.type) {\n        case \"move\":\n          var delta = action.data.endPos.subtract(action.data.startPos);\n\n          for (var i = 0; i < action.data.paths.length; i++) {\n            action.data.paths[i].translate(delta);\n          }\n\n          state.SELECTED = _toConsumableArray(action.data.paths);\n          break;\n\n        case 'scale':\n          var pivot = action.data.pivot;\n          var end = action.data.handle_init;\n          var init = action.data.handle_end;\n          var relH = 1;\n          var relW = 1;\n\n          if (!action.data.lockY) {\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\n          }\n\n          if (!action.data.lockX) {\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\n          }\n\n          if (action.data.shift) {\n            if (action.data.lockY) {\n              relH = relW;\n            } else if (action.data.lockX) {\n              relW = relH;\n            }\n          }\n\n          for (var i = 0; i < action.data.paths.length; i++) {\n            action.data.paths[i].scale(relW, relH, pivot);\n          }\n\n          state.SELECTED = _toConsumableArray(action.data.paths);\n          break;\n\n        case 'delete':\n          var _shapes = action.data.shapes;\n          bus.$emit(\"redo-delete\", _shapes);\n          break;\n      }\n\n      state.ACTIONS.push(action);\n    },\n    UNDO: function UNDO(state) {\n      if (state.ACTIONS.length <= 0) {\n        return;\n      }\n\n      var action = state.ACTIONS.pop();\n      var i;\n      var delta;\n      var i;\n      var pivot;\n      var init;\n      var end;\n      var relH;\n      var relW;\n      var i;\n\n      (function () {\n        switch (action.type) {\n          case 'delete':\n            var shapes = _toConsumableArray(state.SELECTED);\n\n            for (i = shapes.length - 1; i >= 0; i--) {\n              shapes[i].selected = false; // Find the shape in the selected array\n\n              var index_sel = state.SELECTED.findIndex(function (x) {\n                return x === shapes[i];\n              }); // Remove it from selection array\n\n              if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n            }\n\n            for (var _i = 0; _i < action.data.shapes.length; _i++) {\n              var shape = action.data.shapes[_i];\n\n              action.data.layers[_i].addChild(shape); // Add the shape\n\n\n              state.OBJECTS.push(shape);\n              state.SELECTED.push(shape);\n              shape.selected = true;\n              shape.selectable = true;\n              shape.visible = true;\n            }\n\n            break;\n\n          case 'move':\n            delta = action.data.startPos.subtract(action.data.endPos);\n\n            for (i = 0; i < action.data.paths.length; i++) {\n              action.data.paths[i].translate(delta);\n            }\n\n            state.SELECTED = _toConsumableArray(action.data.paths);\n            break;\n\n          case 'scale':\n            pivot = action.data.pivot;\n            init = action.data.handle_init;\n            end = action.data.handle_end;\n            relH = 1;\n            relW = 1;\n\n            if (!action.data.lockY) {\n              relH = init.subtract(pivot).y / end.subtract(pivot).y;\n            }\n\n            if (!action.data.lockX) {\n              relW = init.subtract(pivot).x / end.subtract(pivot).x;\n            }\n\n            if (action.data.shift) {\n              if (action.data.lockY) {\n                relH = relW;\n              } else if (action.data.lockX) {\n                relW = relH;\n              }\n            }\n\n            for (i = 0; i < action.data.paths.length; i++) {\n              action.data.paths[i].scale(relW, relH, pivot);\n            }\n\n            state.SELECTED = _toConsumableArray(action.data.paths);\n            break;\n        }\n      })();\n\n      state.REDO_ACTIONS.push(action);\n    },\n    // Toggle windows\n    HIDE_COLORPICKER: function HIDE_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = false;\n    },\n    SHOW_COLORPICKER: function SHOW_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = true;\n    },\n    TRIGGER_FILEDROPDOWN: function TRIGGER_FILEDROPDOWN(state) {\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\n    },\n    //Layers\n    ADD_LAYER: function ADD_LAYER(state) {\n      bus.$emit('add-layer');\n    },\n    INSERT_LAYER: function INSERT_LAYER(state, layer) {\n      state.LAYERS.push(layer);\n      state.SELECTED_LAYER_INDEX = layer.number;\n    },\n    SELECT_LAYER: function SELECT_LAYER(state, number) {\n      bus.$emit('update-active-layer', number);\n    },\n    LAYER_SELECT_ALL: function LAYER_SELECT_ALL(state, number) {\n      bus.$emit('layer-select-all', number);\n    },\n    REMOVE_LAYER: function REMOVE_LAYER(state) {\n      if (state.SELECTED_LAYER_INDEX != 0) {\n        bus.$emit('hide-transformbox');\n        bus.$emit('remove-layer');\n      }\n    },\n    MERGE_LAYERS: function MERGE_LAYERS(state) {\n      bus.$emit('merge-layers');\n    },\n    MOVE_LAYER_UP: function MOVE_LAYER_UP(state) {\n      bus.$emit('move-layer-up', state.SELECTED_LAYER_INDEX);\n    },\n    MOVE_LAYER_DOWN: function MOVE_LAYER_DOWN(state, number) {\n      bus.$emit('move-layer-down', state.SELECTED_LAYER_INDEX);\n    },\n    SET_UI_LAYER: function SET_UI_LAYER(state, layer) {\n      state.UI_LAYER = layer;\n    },\n    REFRESH_LAYER_ARRAY: function REFRESH_LAYER_ARRAY(state) {\n      state.LAYERS = _toConsumableArray(state.LAYERS);\n    },\n    SWAP_LAYERS: function SWAP_LAYERS(state, indexes) {\n      var temp = state.LAYERS[indexes.first_index];\n      state.LAYERS[indexes.first_index] = state.LAYERS[indexes.second_index];\n      state.LAYERS[indexes.second_index] = temp; // Changing key for change detection\n\n      state.LAYERS = _toConsumableArray(state.LAYERS);\n    },\n    SET_SELECTED_LAYER_INDEX: function SET_SELECTED_LAYER_INDEX(state, value) {\n      state.SELECTED_LAYER_INDEX = value;\n    },\n    // -- Guidelines --\n    SET_GUIDE_X_VALUES: function SET_GUIDE_X_VALUES(state, values) {\n      state.GUIDE_X_VALUES = values;\n    },\n    SET_GUIDE_Y_VALUES: function SET_GUIDE_Y_VALUES(state, values) {\n      state.GUIDE_Y_VALUES = values;\n    },\n    ADD_GUIDE_LINES_X: function ADD_GUIDE_LINES_X(state, lines_x) {\n      var _state$GUIDE_LINES_X;\n\n      (_state$GUIDE_LINES_X = state.GUIDE_LINES_X).push.apply(_state$GUIDE_LINES_X, _toConsumableArray(lines_x));\n    },\n    ADD_GUIDE_LINES_Y: function ADD_GUIDE_LINES_Y(state, lines_y) {\n      var _state$GUIDE_LINES_Y;\n\n      (_state$GUIDE_LINES_Y = state.GUIDE_LINES_Y).push.apply(_state$GUIDE_LINES_Y, _toConsumableArray(lines_y));\n    },\n    CLEAR_GUIDE_LINES_Y: function CLEAR_GUIDE_LINES_Y(state) {\n      for (var i = 0; i < state.GUIDE_LINES_Y.length; i++) {\n        state.GUIDE_LINES_Y[i].remove();\n      }\n\n      state.GUIDE_LINES_Y = [];\n    },\n    CLEAR_GUIDE_LINES_X: function CLEAR_GUIDE_LINES_X(state) {\n      for (var i = 0; i < state.GUIDE_LINES_X.length; i++) {\n        state.GUIDE_LINES_X[i].remove();\n      }\n\n      state.GUIDE_LINES_X = [];\n    }\n  },\n  getters: {\n    clamp: function clamp() {\n      return function (value, min, max) {\n        if (value < min) {\n          return min;\n        } else if (value > max) {\n          return max;\n        }\n\n        return value;\n      };\n    }\n  }\n});",{"version":3,"sources":["D:\\GitHub\\Vectory\\src\\store.js"],"names":["Vue","Vuex","bus","Layer","ShapeGroup","Action","project","Utils","use","Store","state","ACTIVE_TOOL","LAYER_WINDOW_ACTIVE","SCREEN_BORDER","TOOLSELECT","TOOLPOINTER","TOOLPEN","TOOLCIRCLE","TOOLRECTANGLE","TOOLSHAPEBUILDER","TOOLLINE","OBJECTS","SELECTED","ACTIONS","REDO_ACTIONS","COLORPICKER_ACTIVE","FILEDROPDOWN_ACTIVE","PEN_WIDTH","PEN_OPACITY","PEN_STROKECOLOR","PEN_FILLCOLOR","CIRCLE_WIDTH","CIRCLE_OPACITY","CIRCLE_STROKECOLOR","CIRCLE_FILLCOLOR","RECTANGLE_WIDTH","RECTANGLE_OPACITY","RECTANGLE_STROKECOLOR","RECTANGLE_FILLCOLOR","LINE_WIDTH","LINE_OPACITY","LINE_STROKECOLOR","LAYERS","SELECTED_LAYER_INDEX","UI_LAYER","GUIDE_X_VALUES","GUIDE_Y_VALUES","GUIDE_LINES_Y","GUIDE_LINES_X","mutations","SET_SCREEN_BORDER","path","EXPORT_SVG","data","objects","getUngrouped","i","length","item","itemData","svg","exportSVG","asString","selectable","type","push","download","IMPORT_SVG","_file_input","document","createElement","addEventListener","e","_file","target","files","clear","fs","FileReader","onload","JSON","parse","result","forEach","key","index","importSVG","onLoad","readAsText","click","SET_ACTIVE","old","$emit","SET_LAYER_WINDOW_ACTIVE","value","SET_TOOLSELECT","tool","SET_TOOLPOINTER","SET_TOOLPEN","SET_TOOLCIRCLE","SET_TOOLRECTANGLE","SET_TOOLSHAPEBUILDER","SET_TOOLLINE","ADD_SHAPE","shape","ADD_SELECT","includes","DESELECT","shapes","selected","index_sel","findIndex","x","splice","DELETE_SHAPES","options","undo","action","layers","layer","visible","remove","index_obj","DISCARD_SHAPES","SELECTION_SET_STROKECOLOR","SELECTION_SET_STROKEWIDTH","SELECTION_SET_STROKECAP","SELECTION_SET_FILLCOLOR","SELECTION_SET_OPACITY","PEN_SET_WIDTH","PEN_SET_OPACITY","PEN_SET_STROKECOLOR","PEN_SET_FILLCOLOR","CIRCLE_SET_WIDTH","CIRCLE_SET_OPACITY","CIRCLE_SET_STROKECOLOR","CIRCLE_SET_FILLCOLOR","RECTANGLE_SET_WIDTH","RECTANGLE_SET_OPACITY","RECTANGLE_SET_STROKECOLOR","RECTANGLE_SET_FILLCOLOR","LINE_SET_WIDTH","LINE_SET_OPACITY","LINE_SET_STROKECOLOR","ADD_ACTION","clear_redo","CLEAR_REDO","REDO","pop","delta","endPos","subtract","startPos","paths","translate","pivot","end","handle_init","init","handle_end","relH","relW","lockY","y","lockX","shift","scale","UNDO","addChild","HIDE_COLORPICKER","SHOW_COLORPICKER","TRIGGER_FILEDROPDOWN","ADD_LAYER","INSERT_LAYER","number","SELECT_LAYER","LAYER_SELECT_ALL","REMOVE_LAYER","MERGE_LAYERS","MOVE_LAYER_UP","MOVE_LAYER_DOWN","SET_UI_LAYER","REFRESH_LAYER_ARRAY","SWAP_LAYERS","indexes","temp","first_index","second_index","SET_SELECTED_LAYER_INDEX","SET_GUIDE_X_VALUES","values","SET_GUIDE_Y_VALUES","ADD_GUIDE_LINES_X","lines_x","ADD_GUIDE_LINES_Y","lines_y","CLEAR_GUIDE_LINES_Y","CLEAR_GUIDE_LINES_X","getters","clamp","min","max"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport { bus, Layer, ShapeGroup, Action } from '@/main.js';\r\nimport { project } from 'paper';\r\nimport Utils from '@/Utils.js';\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ACTIVE_TOOL: 'select',\r\n\r\n    LAYER_WINDOW_ACTIVE: false,\r\n    SCREEN_BORDER: null,\r\n\r\n    TOOLSELECT: null,\r\n    TOOLPOINTER: null,\r\n    TOOLPEN: null,\r\n    TOOLCIRCLE: null,\r\n    TOOLRECTANGLE: null,\r\n    TOOLSHAPEBUILDER: null,\r\n    TOOLLINE: null,\r\n\r\n    OBJECTS: [],\r\n    SELECTED: [],\r\n\r\n    // Undo and redo\r\n    ACTIONS: [],\r\n    REDO_ACTIONS: [],\r\n\r\n    // Window toggles\r\n    COLORPICKER_ACTIVE: false,\r\n    FILEDROPDOWN_ACTIVE: false,\r\n\r\n\r\n    // Tools settings\r\n    PEN_WIDTH: 1,\r\n    PEN_OPACITY: 1,\r\n    PEN_STROKECOLOR: 'black',\r\n    PEN_FILLCOLOR: 'transparent',\r\n\r\n    CIRCLE_WIDTH: 1,\r\n    CIRCLE_OPACITY: 1,\r\n    CIRCLE_STROKECOLOR: 'black',\r\n    CIRCLE_FILLCOLOR: 'transparent',\r\n\r\n    RECTANGLE_WIDTH: 1,\r\n    RECTANGLE_OPACITY: 1,\r\n    RECTANGLE_STROKECOLOR: 'black',\r\n    RECTANGLE_FILLCOLOR: 'transparent',\r\n\r\n    LINE_WIDTH: 1,\r\n    LINE_OPACITY: 1,\r\n    LINE_STROKECOLOR: 'black',\r\n\r\n    // Layers\r\n    LAYERS: [],\r\n    SELECTED_LAYER_INDEX: 1,\r\n    UI_LAYER: null,\r\n\r\n    // Guide Shapes\r\n    GUIDE_X_VALUES: [],\r\n    GUIDE_Y_VALUES: [],\r\n    GUIDE_LINES_Y: [],\r\n    GUIDE_LINES_X: []\r\n  },\r\n  mutations: {\r\n    // File settings\r\n    SET_SCREEN_BORDER: function(state, path) {\r\n      state.SCREEN_BORDER = path;\r\n    },\r\n    EXPORT_SVG: function(state) {\r\n      let data = [];\r\n      let objects = Utils.getUngrouped(state.OBJECTS);\r\n      for(let i=0; i<objects.length; i++) {\r\n        let item = objects[i];\r\n\r\n        let itemData = {\r\n          svg: item.exportSVG({asString: true}),\r\n          selectable: item.selectable,\r\n          type: item.type\r\n        };\r\n\r\n        data.push(itemData);\r\n      }\r\n\r\n      Utils.download('project', data);\r\n    },\r\n    IMPORT_SVG: function(state) {\r\n      let _file_input = document.createElement('input');\r\n      _file_input.type = 'file';\r\n\r\n      _file_input.addEventListener('change', (e) => {\r\n          let _file = e.target.files[0];\r\n\r\n          project.clear();\r\n          state.OBJECTS = [];\r\n          state.SELECTED = [];\r\n\r\n          let fs = new FileReader();\r\n          fs.onload = () => {\r\n            let data = JSON.parse(fs.result);\r\n\r\n            // Add every shape from the file\r\n            Object.keys(data).forEach(function(key, index) {\r\n              if(data[key].type != \"group\") {\r\n                project.importSVG(data[key].svg, {onLoad: (item) => {\r\n                  item.selectable = data[key].selectable;\r\n                  item.type = data[key].type;\r\n\r\n                  state.OBJECTS.push(item);\r\n                }})\r\n              }\r\n            });\r\n          }\r\n          fs.readAsText(_file);\r\n\r\n          _file_input = null;\r\n      });\r\n\r\n      _file_input.click();\r\n    },\r\n\r\n    // --- Tools ---\r\n    SET_ACTIVE: function(state, type) {\r\n      let old = state.ACTIVE_TOOL\r\n      state.ACTIVE_TOOL = type;\r\n\r\n      if(old == \"select\" && type != \"select\") {\r\n        bus.$emit(\"deactivate-select\");\r\n      }\r\n      if(old == \"pointer\" && type != \"pointer\") {\r\n        bus.$emit(\"deactivate-pointer\")\r\n      }\r\n    },\r\n\r\n    SET_LAYER_WINDOW_ACTIVE: function(state, value) {\r\n      state.LAYER_WINDOW_ACTIVE = value;\r\n    },\r\n\r\n    SET_TOOLSELECT: (state, tool) => {\r\n      state.TOOLSELECT = tool;\r\n    },\r\n    SET_TOOLPOINTER: (state, tool) => {\r\n      state.TOOLPOINTER = tool;\r\n    },\r\n    SET_TOOLPEN: (state, tool) => {\r\n      state.TOOLPEN = tool;\r\n    },\r\n    SET_TOOLCIRCLE: (state, tool) => {\r\n      state.TOOLCIRCLE = tool;\r\n    },\r\n    SET_TOOLRECTANGLE: (state, tool) => {\r\n      state.TOOLRECTANGLE = tool;\r\n    },\r\n    SET_TOOLSHAPEBUILDER: (state, tool) => {\r\n      state.TOOLSHAPEBUILDER = tool\r\n    },\r\n    SET_TOOLLINE: (state, tool) => {\r\n      state.TOOLLINE = tool\r\n    },\r\n\r\n    // --- Shapes ---\r\n    ADD_SHAPE: (state, shape) => {\r\n      state.OBJECTS.push(shape);\r\n    },\r\n\r\n    // --- Selection ---\r\n    ADD_SELECT: (state, shape) => {\r\n      if(!state.SELECTED.includes(shape))\r\n        state.SELECTED.push(shape);\r\n    },\r\n    DESELECT: (state, shapes=null) => {\r\n      if(shapes == null)\r\n        shapes = [...state.SELECTED]\r\n\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        shapes[i].selected = false;\r\n\r\n        // Find the shape in the selected array\r\n        let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n\r\n        // Remove it from selection array\r\n        if(index_sel >= 0)\r\n          state.SELECTED.splice(index_sel, 1);\r\n      }\r\n    },\r\n    DELETE_SHAPES: (state, options={shapes, undo:false}) => {\r\n      let shapes = options.shapes;\r\n      if(shapes == null)\r\n        shapes = [...state.SELECTED];\r\n\r\n      let action = null;\r\n      if(options.undo) {\r\n        action = new Action(\"delete\", {\r\n          shapes: shapes,\r\n          layers: []\r\n        })\r\n      }\r\n\r\n      for(let i=0; i<shapes.length; i++) {\r\n        if(options.undo) {\r\n          action.data.layers.push(shapes[i].layer);\r\n          shapes[i].visible = false;\r\n          shapes[i].selectable = false;\r\n          shapes[i].selected = false;\r\n        }\r\n        else {\r\n          // Destroy the shape (it's still in the objects and the selection array)\r\n          shapes[i].remove();\r\n        }\r\n\r\n        // Find the shape in the objects array\r\n        let index_obj = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Find the shape in the selected array\r\n        let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n\r\n        // Remove it from the objects array\r\n        state.OBJECTS.splice(index_obj, 1);\r\n        // Remove it from selection array\r\n        if(index_sel >= 0)\r\n          state.SELECTED.splice(index_sel, 1);\r\n      }\r\n\r\n      if(options.undo) {\r\n        state.ACTIONS.push(action);\r\n        state.REDO_ACTIONS = []\r\n      }\r\n    },\r\n    // Remove shapes from the objects and selection array WITHOUT DESTROYING THEM\r\n    DISCARD_SHAPES(state, shapes=null) {\r\n      if(shapes == null)\r\n        shapes = [...state.SELECTED];\r\n\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        // Find the shape in the objects array\r\n        let index_obj = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Find the shape in the selected array\r\n        let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n        \r\n        // Remove it from objects array\r\n        state.OBJECTS.splice(index_obj, 1);\r\n        // Remove it from selection array\r\n        if(index_sel >= 0)\r\n          state.SELECTED.splice(index_sel, 1);\r\n      }\r\n    },\r\n\r\n    SELECTION_SET_STROKECOLOR(state, value) {\r\n      bus.$emit('set_color_stroke', value);\r\n    },\r\n    SELECTION_SET_STROKEWIDTH(state, value) {\r\n      bus.$emit('set_width_stroke', value);\r\n    },\r\n    SELECTION_SET_STROKECAP(state, value) {\r\n      bus.$emit('set_cap_stroke', value);\r\n    },\r\n    SELECTION_SET_FILLCOLOR(state, value) {\r\n      bus.$emit('set_color_fill', value);\r\n    },\r\n    SELECTION_SET_OPACITY(state, value) {\r\n      bus.$emit('set_opacity', value);\r\n    },\r\n\r\n    PEN_SET_WIDTH(state, value) {\r\n      state.PEN_WIDTH = value\r\n    },\r\n    PEN_SET_OPACITY(state, value) {\r\n      state.PEN_OPACITY = value\r\n    },\r\n    PEN_SET_STROKECOLOR(state, value) {\r\n      state.PEN_STROKECOLOR = value\r\n    },\r\n    PEN_SET_FILLCOLOR(state, value) {\r\n      state.PEN_FILLCOLOR = value\r\n    },\r\n\r\n    CIRCLE_SET_WIDTH(state, value) {\r\n      state.CIRCLE_WIDTH = value\r\n    },\r\n    CIRCLE_SET_OPACITY(state, value) {\r\n      state.CIRCLE_OPACITY = value\r\n    },\r\n    CIRCLE_SET_STROKECOLOR(state, value) {\r\n      state.CIRCLE_STROKECOLOR = value\r\n    },\r\n    CIRCLE_SET_FILLCOLOR(state, value) {\r\n      state.CIRCLE_FILLCOLOR = value\r\n    },\r\n\r\n    RECTANGLE_SET_WIDTH(state, value) {\r\n      state.RECTANGLE_WIDTH = value\r\n    },\r\n    RECTANGLE_SET_OPACITY(state, value) {\r\n      state.RECTANGLE_OPACITY = value\r\n    },\r\n    RECTANGLE_SET_STROKECOLOR(state, value) {\r\n      state.RECTANGLE_STROKECOLOR = value\r\n    },\r\n    RECTANGLE_SET_FILLCOLOR(state, value) {\r\n      state.RECTANGLE_FILLCOLOR = value\r\n    },\r\n\r\n    LINE_SET_WIDTH(state, value) {\r\n      state.LINE_WIDTH = value\r\n    },\r\n    LINE_SET_OPACITY(state, value) {\r\n      state.LINE_OPACITY = value\r\n    },\r\n    LINE_SET_STROKECOLOR(state, value) {\r\n      state.LINE_STROKECOLOR = value\r\n    },\r\n\r\n    // Add an action to the undo list\r\n    ADD_ACTION(state, action, clear_redo=true) {\r\n      state.ACTIONS.push(action);\r\n      if(clear_redo)\r\n        state.REDO_ACTIONS = []\r\n    },\r\n    CLEAR_REDO(state) {\r\n      state.REDO_ACTIONS = [];\r\n    },\r\n    REDO(state) {\r\n      if(state.REDO_ACTIONS.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      let action = state.REDO_ACTIONS.pop();\r\n\r\n      switch(action.type) {\r\n        case \"move\":\r\n          var delta = action.data.endPos.subtract(action.data.startPos);\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].translate(delta);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n\r\n        case 'scale':\r\n          var pivot = action.data.pivot;\r\n          var end = action.data.handle_init;\r\n          var init = action.data.handle_end;\r\n\r\n          var relH = 1;\r\n          var relW = 1;\r\n\r\n          if(!action.data.lockY) {\r\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\r\n          }\r\n          if (!action.data.lockX) {\r\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\r\n          }\r\n\r\n          if(action.data.shift) {\r\n            if(action.data.lockY) {\r\n              relH = relW;\r\n            }\r\n            else if(action.data.lockX) {\r\n              relW = relH;\r\n            }\r\n          }\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].scale(relW, relH, pivot);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n\r\n        case 'delete':\r\n          let shapes = action.data.shapes;\r\n          bus.$emit(\"redo-delete\", (shapes));\r\n          break;\r\n      }\r\n\r\n      state.ACTIONS.push(action);\r\n    },\r\n    UNDO(state) {\r\n      if(state.ACTIONS.length <= 0) {\r\n        return;\r\n      }\r\n      let action = state.ACTIONS.pop();\r\n      \r\n      switch(action.type) {\r\n        case 'delete':\r\n          let shapes = [...state.SELECTED];\r\n          for(var i=shapes.length-1; i>=0; i--) {\r\n            shapes[i].selected = false;\r\n    \r\n            // Find the shape in the selected array\r\n            let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n    \r\n            // Remove it from selection array\r\n            if(index_sel >= 0)\r\n              state.SELECTED.splice(index_sel, 1);\r\n          }\r\n\r\n          for(let i=0; i<action.data.shapes.length; i++) {\r\n            let shape = action.data.shapes[i];\r\n            action.data.layers[i].addChild(shape);\r\n\r\n            // Add the shape\r\n            state.OBJECTS.push(shape);\r\n            state.SELECTED.push(shape);\r\n            shape.selected = true;\r\n            shape.selectable = true;\r\n            shape.visible = true;\r\n          }\r\n\r\n          break;\r\n        case 'move':\r\n          var delta = action.data.startPos.subtract(action.data.endPos);\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].translate(delta);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n\r\n        case 'scale':\r\n          var pivot = action.data.pivot;\r\n          var init = action.data.handle_init;\r\n          var end = action.data.handle_end;\r\n\r\n          var relH = 1;\r\n          var relW = 1;\r\n\r\n          if(!action.data.lockY) {\r\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\r\n          }\r\n          if (!action.data.lockX) {\r\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\r\n          }\r\n\r\n          if(action.data.shift) {\r\n            if(action.data.lockY) {\r\n              relH = relW;\r\n            }\r\n            else if(action.data.lockX) {\r\n              relW = relH;\r\n            }\r\n          }\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].scale(relW, relH, pivot);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n      }\r\n\r\n      state.REDO_ACTIONS.push(action);\r\n    },\r\n\r\n\r\n    // Toggle windows\r\n    HIDE_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = false\r\n    },\r\n    SHOW_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = true\r\n    },\r\n    TRIGGER_FILEDROPDOWN(state) {\r\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\r\n    },\r\n\r\n    //Layers\r\n    ADD_LAYER(state) {\r\n      bus.$emit('add-layer');\r\n    },\r\n    INSERT_LAYER(state, layer) {\r\n      state.LAYERS.push(layer);\r\n      state.SELECTED_LAYER_INDEX = layer.number;\r\n    },\r\n    SELECT_LAYER(state, number) {\r\n      bus.$emit('update-active-layer', number);\r\n    },\r\n    LAYER_SELECT_ALL(state, number) {\r\n      bus.$emit('layer-select-all', number);\r\n    },\r\n    REMOVE_LAYER(state) {\r\n      if(state.SELECTED_LAYER_INDEX != 0) {\r\n        bus.$emit('hide-transformbox');\r\n        bus.$emit('remove-layer');\r\n      }\r\n    },\r\n    MERGE_LAYERS(state) {\r\n      bus.$emit('merge-layers');\r\n    },\r\n    MOVE_LAYER_UP(state) {\r\n      bus.$emit('move-layer-up', state.SELECTED_LAYER_INDEX);\r\n    },\r\n    MOVE_LAYER_DOWN(state, number) {\r\n      bus.$emit('move-layer-down', state.SELECTED_LAYER_INDEX);\r\n    },\r\n    SET_UI_LAYER(state, layer) {\r\n      state.UI_LAYER = layer;\r\n    },\r\n    REFRESH_LAYER_ARRAY(state) {\r\n      state.LAYERS = [...state.LAYERS];\r\n    },\r\n    SWAP_LAYERS(state, indexes) {\r\n      let temp = state.LAYERS[indexes.first_index];\r\n      state.LAYERS[indexes.first_index] = state.LAYERS[indexes.second_index];\r\n      state.LAYERS[indexes.second_index] = temp;\r\n\r\n      // Changing key for change detection\r\n      state.LAYERS = [...state.LAYERS];\r\n    },\r\n    SET_SELECTED_LAYER_INDEX(state, value) {\r\n      state.SELECTED_LAYER_INDEX = value;\r\n    },\r\n\r\n    // -- Guidelines --\r\n    SET_GUIDE_X_VALUES(state, values) {\r\n      state.GUIDE_X_VALUES = values;\r\n    },\r\n    SET_GUIDE_Y_VALUES(state, values) {\r\n      state.GUIDE_Y_VALUES = values;\r\n    },\r\n    ADD_GUIDE_LINES_X(state, lines_x) {\r\n      state.GUIDE_LINES_X.push(...lines_x);\r\n    },\r\n    ADD_GUIDE_LINES_Y(state, lines_y) {\r\n      state.GUIDE_LINES_Y.push(...lines_y);\r\n    },\r\n    CLEAR_GUIDE_LINES_Y(state) {\r\n      for(let i=0; i<state.GUIDE_LINES_Y.length; i++) {\r\n        state.GUIDE_LINES_Y[i].remove();\r\n      }\r\n\r\n      state.GUIDE_LINES_Y = [];\r\n    },\r\n    CLEAR_GUIDE_LINES_X(state) {\r\n      for(let i=0; i<state.GUIDE_LINES_X.length; i++) {\r\n        state.GUIDE_LINES_X[i].remove();\r\n      }\r\n\r\n      state.GUIDE_LINES_X = [];\r\n    }\r\n  },\r\n  getters: {\r\n    clamp: () => (value, min, max) => {\r\n      if(value < min){\r\n        return min;\r\n      } else if(value > max) {\r\n        return max;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n})\r\n"]}]}