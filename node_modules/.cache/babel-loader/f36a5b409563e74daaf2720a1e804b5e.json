{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\src\\store.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\store.js","mtime":1580428688827},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _toConsumableArray from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _Object$keys from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { bus, Layer, ShapeGroup, Action } from '@/main.js';\nimport { project } from 'paper';\nimport Utils from '@/Utils.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    ACTIVE_TOOL: 'select',\n    LAYER_WINDOW_ACTIVE: false,\n    SCREEN_BORDER: null,\n    TOOLSELECT: null,\n    TOOLPOINTER: null,\n    TOOLPEN: null,\n    TOOLCIRCLE: null,\n    TOOLRECTANGLE: null,\n    TOOLSHAPEBUILDER: null,\n    TOOLLINE: null,\n    OBJECTS: [],\n    SELECTED: [],\n    // Undo and redo\n    ACTIONS: [],\n    REDO_ACTIONS: [],\n    // Window toggles\n    COLORPICKER_ACTIVE: false,\n    FILEDROPDOWN_ACTIVE: false,\n    // Tools settings\n    PEN_WIDTH: 1,\n    PEN_OPACITY: 1,\n    PEN_STROKECOLOR: 'black',\n    PEN_FILLCOLOR: 'transparent',\n    CIRCLE_WIDTH: 1,\n    CIRCLE_OPACITY: 1,\n    CIRCLE_STROKECOLOR: 'black',\n    CIRCLE_FILLCOLOR: 'transparent',\n    RECTANGLE_WIDTH: 1,\n    RECTANGLE_OPACITY: 1,\n    RECTANGLE_STROKECOLOR: 'black',\n    RECTANGLE_FILLCOLOR: 'transparent',\n    LINE_WIDTH: 1,\n    LINE_OPACITY: 1,\n    LINE_STROKECOLOR: 'black',\n    // Layers\n    LAYERS: [],\n    SELECTED_LAYER_INDEX: 1,\n    UI_LAYER: null,\n    // Guide Shapes\n    GUIDE_X_VALUES: [],\n    GUIDE_Y_VALUES: [],\n    GUIDE_LINES_Y: [],\n    GUIDE_LINES_X: []\n  },\n  mutations: {\n    // File settings\n    SET_SCREEN_BORDER: function SET_SCREEN_BORDER(state, path) {\n      state.SCREEN_BORDER = path;\n    },\n    EXPORT_SVG: function EXPORT_SVG(state) {\n      var data = [];\n      var objects = Utils.getUngrouped(state.OBJECTS);\n\n      for (var i = 0; i < objects.length; i++) {\n        var item = objects[i];\n        var itemData = {\n          svg: item.exportSVG({\n            asString: true\n          }),\n          selectable: item.selectable,\n          type: item.type\n        };\n        data.push(itemData);\n      }\n\n      Utils.download('project', data);\n    },\n    IMPORT_SVG: function IMPORT_SVG(state) {\n      var _file_input = document.createElement('input');\n\n      _file_input.type = 'file';\n\n      _file_input.addEventListener('change', function (e) {\n        var _file = e.target.files[0];\n        project.clear();\n        state.ACTIONS = [];\n        state.REDO_ACTIONS = [];\n        state.OBJECTS = [];\n        state.SELECTED = [];\n        state.LAYERS = [];\n        state.SELECTED_LAYER_INDEX = 1;\n        bus.$emit(\"setup-canvas-border\");\n        var fs = new FileReader();\n\n        fs.onload = function () {\n          var data = JSON.parse(fs.result); // Add every shape from the file\n\n          _Object$keys(data).forEach(function (key, index) {\n            if (data[key].type != \"group\") {\n              project.importSVG(data[key].svg, {\n                onLoad: function onLoad(item) {\n                  project.activeLayer.addChild(item);\n                  item.selectable = data[key].selectable;\n                  item.type = data[key].type;\n                  state.OBJECTS.push(item);\n                }\n              });\n            }\n          });\n        };\n\n        fs.readAsText(_file);\n        _file_input = null;\n      });\n\n      _file_input.click();\n    },\n    // --- Tools ---\n    SET_ACTIVE: function SET_ACTIVE(state, type) {\n      var old = state.ACTIVE_TOOL;\n      state.ACTIVE_TOOL = type;\n\n      if (old == \"select\" && type != \"select\") {\n        bus.$emit(\"deactivate-select\");\n      }\n\n      if (old == \"pointer\" && type != \"pointer\") {\n        bus.$emit(\"deactivate-pointer\");\n      }\n    },\n    SET_LAYER_WINDOW_ACTIVE: function SET_LAYER_WINDOW_ACTIVE(state, value) {\n      state.LAYER_WINDOW_ACTIVE = value;\n    },\n    SET_TOOLSELECT: function SET_TOOLSELECT(state, tool) {\n      state.TOOLSELECT = tool;\n    },\n    SET_TOOLPOINTER: function SET_TOOLPOINTER(state, tool) {\n      state.TOOLPOINTER = tool;\n    },\n    SET_TOOLPEN: function SET_TOOLPEN(state, tool) {\n      state.TOOLPEN = tool;\n    },\n    SET_TOOLCIRCLE: function SET_TOOLCIRCLE(state, tool) {\n      state.TOOLCIRCLE = tool;\n    },\n    SET_TOOLRECTANGLE: function SET_TOOLRECTANGLE(state, tool) {\n      state.TOOLRECTANGLE = tool;\n    },\n    SET_TOOLSHAPEBUILDER: function SET_TOOLSHAPEBUILDER(state, tool) {\n      state.TOOLSHAPEBUILDER = tool;\n    },\n    SET_TOOLLINE: function SET_TOOLLINE(state, tool) {\n      state.TOOLLINE = tool;\n    },\n    // --- Shapes ---\n    ADD_SHAPE: function ADD_SHAPE(state, shape) {\n      state.OBJECTS.push(shape);\n    },\n    // --- Selection ---\n    ADD_SELECT: function ADD_SELECT(state, shape) {\n      if (!state.SELECTED.includes(shape)) state.SELECTED.push(shape);\n    },\n    DESELECT: function DESELECT(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (shapes == null) shapes = _toConsumableArray(state.SELECTED);\n\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        shapes[i].selected = false; // Find the shape in the selected array\n\n        var index_sel = state.SELECTED.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it from selection array\n\n        if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n      }\n    },\n    DELETE_SHAPES: function DELETE_SHAPES(state) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shapes: shapes,\n        undo: false\n      };\n      return function () {\n        var shapes = options.shapes;\n        if (shapes == null) shapes = _toConsumableArray(state.SELECTED);\n        var action = null;\n\n        if (options.undo) {\n          action = new Action(\"delete\", {\n            shapes: shapes,\n            layers: []\n          });\n        }\n\n        var _loop = function _loop(i) {\n          if (options.undo) {\n            action.data.layers.push(shapes[i].layer);\n            shapes[i].visible = false;\n            shapes[i].selectable = false;\n            shapes[i].selected = false;\n          } else {\n            // Destroy the shape (it's still in the objects and the selection array)\n            shapes[i].remove();\n          } // Find the shape in the objects array\n\n\n          var index_obj = state.OBJECTS.findIndex(function (x) {\n            return x === shapes[i];\n          }); // Find the shape in the selected array\n\n          var index_sel = state.SELECTED.findIndex(function (x) {\n            return x === shapes[i];\n          }); // Remove it from the objects array\n\n          state.OBJECTS.splice(index_obj, 1); // Remove it from selection array\n\n          if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n        };\n\n        for (var i = 0; i < shapes.length; i++) {\n          _loop(i);\n        }\n\n        if (options.undo) {\n          state.ACTIONS.push(action);\n          state.REDO_ACTIONS = [];\n        }\n      }();\n    },\n    // Remove shapes from the objects and selection array WITHOUT DESTROYING THEM\n    DISCARD_SHAPES: function DISCARD_SHAPES(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      if (shapes == null) shapes = _toConsumableArray(state.SELECTED);\n\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        // Find the shape in the objects array\n        var index_obj = state.OBJECTS.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Find the shape in the selected array\n\n        var index_sel = state.SELECTED.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it from objects array\n\n        state.OBJECTS.splice(index_obj, 1); // Remove it from selection array\n\n        if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n      }\n    },\n    SELECTION_SET_STROKECOLOR: function SELECTION_SET_STROKECOLOR(state, value) {\n      bus.$emit('set_color_stroke', value);\n    },\n    SELECTION_SET_STROKEWIDTH: function SELECTION_SET_STROKEWIDTH(state, value) {\n      bus.$emit('set_width_stroke', value);\n    },\n    SELECTION_SET_STROKECAP: function SELECTION_SET_STROKECAP(state, value) {\n      bus.$emit('set_cap_stroke', value);\n    },\n    SELECTION_SET_FILLCOLOR: function SELECTION_SET_FILLCOLOR(state, value) {\n      bus.$emit('set_color_fill', value);\n    },\n    SELECTION_SET_OPACITY: function SELECTION_SET_OPACITY(state, value) {\n      bus.$emit('set_opacity', value);\n    },\n    PEN_SET_WIDTH: function PEN_SET_WIDTH(state, value) {\n      state.PEN_WIDTH = value;\n    },\n    PEN_SET_OPACITY: function PEN_SET_OPACITY(state, value) {\n      state.PEN_OPACITY = value;\n    },\n    PEN_SET_STROKECOLOR: function PEN_SET_STROKECOLOR(state, value) {\n      state.PEN_STROKECOLOR = value;\n    },\n    PEN_SET_FILLCOLOR: function PEN_SET_FILLCOLOR(state, value) {\n      state.PEN_FILLCOLOR = value;\n    },\n    CIRCLE_SET_WIDTH: function CIRCLE_SET_WIDTH(state, value) {\n      state.CIRCLE_WIDTH = value;\n    },\n    CIRCLE_SET_OPACITY: function CIRCLE_SET_OPACITY(state, value) {\n      state.CIRCLE_OPACITY = value;\n    },\n    CIRCLE_SET_STROKECOLOR: function CIRCLE_SET_STROKECOLOR(state, value) {\n      state.CIRCLE_STROKECOLOR = value;\n    },\n    CIRCLE_SET_FILLCOLOR: function CIRCLE_SET_FILLCOLOR(state, value) {\n      state.CIRCLE_FILLCOLOR = value;\n    },\n    RECTANGLE_SET_WIDTH: function RECTANGLE_SET_WIDTH(state, value) {\n      state.RECTANGLE_WIDTH = value;\n    },\n    RECTANGLE_SET_OPACITY: function RECTANGLE_SET_OPACITY(state, value) {\n      state.RECTANGLE_OPACITY = value;\n    },\n    RECTANGLE_SET_STROKECOLOR: function RECTANGLE_SET_STROKECOLOR(state, value) {\n      state.RECTANGLE_STROKECOLOR = value;\n    },\n    RECTANGLE_SET_FILLCOLOR: function RECTANGLE_SET_FILLCOLOR(state, value) {\n      state.RECTANGLE_FILLCOLOR = value;\n    },\n    LINE_SET_WIDTH: function LINE_SET_WIDTH(state, value) {\n      state.LINE_WIDTH = value;\n    },\n    LINE_SET_OPACITY: function LINE_SET_OPACITY(state, value) {\n      state.LINE_OPACITY = value;\n    },\n    LINE_SET_STROKECOLOR: function LINE_SET_STROKECOLOR(state, value) {\n      state.LINE_STROKECOLOR = value;\n    },\n    // Add an action to the undo list\n    ADD_ACTION: function ADD_ACTION(state, action) {\n      var clear_redo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      state.ACTIONS.push(action);\n      if (clear_redo) state.REDO_ACTIONS = [];\n    },\n    CLEAR_REDO: function CLEAR_REDO(state) {\n      state.REDO_ACTIONS = [];\n    },\n    REDO: function REDO(state) {\n      if (state.REDO_ACTIONS.length <= 0) {\n        return;\n      }\n\n      var action = state.REDO_ACTIONS.pop();\n      var delta;\n      var i;\n      var pivot;\n      var end;\n      var init;\n      var relH;\n      var relW;\n      var i;\n\n      (function () {\n        switch (action.type) {\n          case \"move\":\n            delta = action.data.endPos.subtract(action.data.startPos);\n\n            for (i = 0; i < action.data.paths.length; i++) {\n              action.data.paths[i].translate(delta);\n            }\n\n            state.SELECTED = _toConsumableArray(action.data.paths);\n            break;\n\n          case 'scale':\n            pivot = action.data.pivot;\n            end = action.data.handle_init;\n            init = action.data.handle_end;\n            relH = 1;\n            relW = 1;\n\n            if (!action.data.lockY) {\n              relH = init.subtract(pivot).y / end.subtract(pivot).y;\n            }\n\n            if (!action.data.lockX) {\n              relW = init.subtract(pivot).x / end.subtract(pivot).x;\n            }\n\n            if (action.data.shift) {\n              if (action.data.lockY) {\n                relH = relW;\n              } else if (action.data.lockX) {\n                relW = relH;\n              }\n            }\n\n            for (i = 0; i < action.data.paths.length; i++) {\n              action.data.paths[i].scale(relW, relH, pivot);\n            }\n\n            state.SELECTED = _toConsumableArray(action.data.paths);\n            break;\n\n          case 'delete':\n            var shapes = action.data.shapes;\n            bus.$emit(\"redo-delete\", shapes);\n\n            var _loop2 = function _loop2(_i) {\n              action.data.layers.push(shapes[_i].layer);\n              shapes[_i].visible = false;\n              shapes[_i].selectable = false;\n              shapes[_i].selected = false; // Find the shape in the objects array\n\n              var index_obj = state.OBJECTS.findIndex(function (x) {\n                return x === shapes[_i];\n              }); // Find the shape in the selected array\n\n              var index_sel = state.SELECTED.findIndex(function (x) {\n                return x === shapes[_i];\n              }); // Remove it from the objects array\n\n              state.OBJECTS.splice(index_obj, 1); // Remove it from selection array\n\n              if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n            };\n\n            for (var _i = 0; _i < shapes.length; _i++) {\n              _loop2(_i);\n            } // Let other components know (ToolSelect -> transform box must disappear)\n\n\n            bus.$emit(\"delete_selection\");\n            break;\n        }\n      })();\n\n      state.ACTIONS.push(action);\n    },\n    UNDO: function UNDO(state) {\n      if (state.ACTIONS.length <= 0) {\n        return;\n      }\n\n      var action = state.ACTIONS.pop();\n      var i;\n      var delta;\n      var i;\n      var pivot;\n      var init;\n      var end;\n      var relH;\n      var relW;\n      var i;\n\n      (function () {\n        switch (action.type) {\n          case 'delete':\n            var shapes = _toConsumableArray(state.SELECTED);\n\n            for (i = shapes.length - 1; i >= 0; i--) {\n              shapes[i].selected = false; // Find the shape in the selected array\n\n              var index_sel = state.SELECTED.findIndex(function (x) {\n                return x === shapes[i];\n              }); // Remove it from selection array\n\n              if (index_sel >= 0) state.SELECTED.splice(index_sel, 1);\n            }\n\n            for (var _i2 = 0; _i2 < action.data.shapes.length; _i2++) {\n              var shape = action.data.shapes[_i2];\n\n              action.data.layers[_i2].addChild(shape); // Add the shape\n\n\n              state.OBJECTS.push(shape);\n              state.SELECTED.push(shape);\n              shape.selected = true;\n              shape.selectable = true;\n              shape.visible = true;\n            }\n\n            break;\n\n          case 'move':\n            delta = action.data.startPos.subtract(action.data.endPos);\n\n            for (i = 0; i < action.data.paths.length; i++) {\n              action.data.paths[i].translate(delta);\n            }\n\n            state.SELECTED = _toConsumableArray(action.data.paths);\n            break;\n\n          case 'scale':\n            pivot = action.data.pivot;\n            init = action.data.handle_init;\n            end = action.data.handle_end;\n            relH = 1;\n            relW = 1;\n\n            if (!action.data.lockY) {\n              relH = init.subtract(pivot).y / end.subtract(pivot).y;\n            }\n\n            if (!action.data.lockX) {\n              relW = init.subtract(pivot).x / end.subtract(pivot).x;\n            }\n\n            if (action.data.shift) {\n              if (action.data.lockY) {\n                relH = relW;\n              } else if (action.data.lockX) {\n                relW = relH;\n              }\n            }\n\n            for (i = 0; i < action.data.paths.length; i++) {\n              action.data.paths[i].scale(relW, relH, pivot);\n            }\n\n            state.SELECTED = _toConsumableArray(action.data.paths);\n            break;\n        }\n      })();\n\n      state.REDO_ACTIONS.push(action);\n    },\n    // Toggle windows\n    HIDE_COLORPICKER: function HIDE_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = false;\n    },\n    SHOW_COLORPICKER: function SHOW_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = true;\n    },\n    TRIGGER_FILEDROPDOWN: function TRIGGER_FILEDROPDOWN(state) {\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\n    },\n    //Layers\n    ADD_LAYER: function ADD_LAYER(state) {\n      bus.$emit('add-layer');\n      state.UI_LAYER.bringToFront();\n    },\n    INSERT_LAYER: function INSERT_LAYER(state, layer) {\n      state.LAYERS.push(layer);\n      state.SELECTED_LAYER_INDEX = layer.number;\n      state.UI_LAYER.bringToFront();\n    },\n    SELECT_LAYER: function SELECT_LAYER(state, number) {\n      bus.$emit('update-active-layer', number);\n      state.UI_LAYER.bringToFront();\n    },\n    LAYER_SELECT_ALL: function LAYER_SELECT_ALL(state, number) {\n      bus.$emit('layer-select-all', number);\n      state.UI_LAYER.bringToFront();\n    },\n    LAYER_HIDE_SHAPES: function LAYER_HIDE_SHAPES(state, number) {\n      bus.$emit('layer-hide-shapes', number);\n    },\n    LAYER_UNHIDE_SHAPES: function LAYER_UNHIDE_SHAPES(state, number) {\n      bus.$emit('layer-unhide-shapes', number);\n    },\n    REMOVE_LAYER: function REMOVE_LAYER(state) {\n      if (state.SELECTED_LAYER_INDEX != 0) {\n        bus.$emit('hide-transformbox');\n        bus.$emit('remove-layer');\n        state.UI_LAYER.bringToFront();\n      }\n    },\n    MERGE_LAYERS: function MERGE_LAYERS(state) {\n      bus.$emit('merge-layers');\n      state.UI_LAYER.bringToFront();\n    },\n    MOVE_LAYER_UP: function MOVE_LAYER_UP(state) {\n      bus.$emit('move-layer-up', state.SELECTED_LAYER_INDEX);\n      state.UI_LAYER.bringToFront();\n    },\n    MOVE_LAYER_DOWN: function MOVE_LAYER_DOWN(state, number) {\n      bus.$emit('move-layer-down', state.SELECTED_LAYER_INDEX);\n      state.UI_LAYER.bringToFront();\n    },\n    SET_UI_LAYER: function SET_UI_LAYER(state, layer) {\n      state.UI_LAYER = layer;\n    },\n    REFRESH_LAYER_ARRAY: function REFRESH_LAYER_ARRAY(state) {\n      state.LAYERS = _toConsumableArray(state.LAYERS);\n      state.UI_LAYER.bringToFront();\n    },\n    SWAP_LAYERS: function SWAP_LAYERS(state, indexes) {\n      var temp = state.LAYERS[indexes.first_index];\n      state.LAYERS[indexes.first_index] = state.LAYERS[indexes.second_index];\n      state.LAYERS[indexes.second_index] = temp; // Changing key for change detection\n\n      state.LAYERS = _toConsumableArray(state.LAYERS);\n      state.UI_LAYER.bringToFront();\n    },\n    SET_SELECTED_LAYER_INDEX: function SET_SELECTED_LAYER_INDEX(state, value) {\n      state.SELECTED_LAYER_INDEX = value;\n      state.UI_LAYER.bringToFront();\n    },\n    // -- Guidelines --\n    SET_GUIDE_X_VALUES: function SET_GUIDE_X_VALUES(state, values) {\n      state.GUIDE_X_VALUES = values;\n    },\n    SET_GUIDE_Y_VALUES: function SET_GUIDE_Y_VALUES(state, values) {\n      state.GUIDE_Y_VALUES = values;\n    },\n    ADD_GUIDE_LINES_X: function ADD_GUIDE_LINES_X(state, lines_x) {\n      var _state$GUIDE_LINES_X;\n\n      (_state$GUIDE_LINES_X = state.GUIDE_LINES_X).push.apply(_state$GUIDE_LINES_X, _toConsumableArray(lines_x));\n    },\n    ADD_GUIDE_LINES_Y: function ADD_GUIDE_LINES_Y(state, lines_y) {\n      var _state$GUIDE_LINES_Y;\n\n      (_state$GUIDE_LINES_Y = state.GUIDE_LINES_Y).push.apply(_state$GUIDE_LINES_Y, _toConsumableArray(lines_y));\n    },\n    CLEAR_GUIDE_LINES_Y: function CLEAR_GUIDE_LINES_Y(state) {\n      for (var i = 0; i < state.GUIDE_LINES_Y.length; i++) {\n        state.GUIDE_LINES_Y[i].remove();\n      }\n\n      state.GUIDE_LINES_Y = [];\n    },\n    CLEAR_GUIDE_LINES_X: function CLEAR_GUIDE_LINES_X(state) {\n      for (var i = 0; i < state.GUIDE_LINES_X.length; i++) {\n        state.GUIDE_LINES_X[i].remove();\n      }\n\n      state.GUIDE_LINES_X = [];\n    }\n  },\n  getters: {\n    clamp: function clamp() {\n      return function (value, min, max) {\n        if (value < min) {\n          return min;\n        } else if (value > max) {\n          return max;\n        }\n\n        return value;\n      };\n    }\n  }\n});",{"version":3,"sources":["D:\\GitHub\\Vectory\\src\\store.js"],"names":["Vue","Vuex","bus","Layer","ShapeGroup","Action","project","Utils","use","Store","state","ACTIVE_TOOL","LAYER_WINDOW_ACTIVE","SCREEN_BORDER","TOOLSELECT","TOOLPOINTER","TOOLPEN","TOOLCIRCLE","TOOLRECTANGLE","TOOLSHAPEBUILDER","TOOLLINE","OBJECTS","SELECTED","ACTIONS","REDO_ACTIONS","COLORPICKER_ACTIVE","FILEDROPDOWN_ACTIVE","PEN_WIDTH","PEN_OPACITY","PEN_STROKECOLOR","PEN_FILLCOLOR","CIRCLE_WIDTH","CIRCLE_OPACITY","CIRCLE_STROKECOLOR","CIRCLE_FILLCOLOR","RECTANGLE_WIDTH","RECTANGLE_OPACITY","RECTANGLE_STROKECOLOR","RECTANGLE_FILLCOLOR","LINE_WIDTH","LINE_OPACITY","LINE_STROKECOLOR","LAYERS","SELECTED_LAYER_INDEX","UI_LAYER","GUIDE_X_VALUES","GUIDE_Y_VALUES","GUIDE_LINES_Y","GUIDE_LINES_X","mutations","SET_SCREEN_BORDER","path","EXPORT_SVG","data","objects","getUngrouped","i","length","item","itemData","svg","exportSVG","asString","selectable","type","push","download","IMPORT_SVG","_file_input","document","createElement","addEventListener","e","_file","target","files","clear","$emit","fs","FileReader","onload","JSON","parse","result","forEach","key","index","importSVG","onLoad","activeLayer","addChild","readAsText","click","SET_ACTIVE","old","SET_LAYER_WINDOW_ACTIVE","value","SET_TOOLSELECT","tool","SET_TOOLPOINTER","SET_TOOLPEN","SET_TOOLCIRCLE","SET_TOOLRECTANGLE","SET_TOOLSHAPEBUILDER","SET_TOOLLINE","ADD_SHAPE","shape","ADD_SELECT","includes","DESELECT","shapes","selected","index_sel","findIndex","x","splice","DELETE_SHAPES","options","undo","action","layers","layer","visible","remove","index_obj","DISCARD_SHAPES","SELECTION_SET_STROKECOLOR","SELECTION_SET_STROKEWIDTH","SELECTION_SET_STROKECAP","SELECTION_SET_FILLCOLOR","SELECTION_SET_OPACITY","PEN_SET_WIDTH","PEN_SET_OPACITY","PEN_SET_STROKECOLOR","PEN_SET_FILLCOLOR","CIRCLE_SET_WIDTH","CIRCLE_SET_OPACITY","CIRCLE_SET_STROKECOLOR","CIRCLE_SET_FILLCOLOR","RECTANGLE_SET_WIDTH","RECTANGLE_SET_OPACITY","RECTANGLE_SET_STROKECOLOR","RECTANGLE_SET_FILLCOLOR","LINE_SET_WIDTH","LINE_SET_OPACITY","LINE_SET_STROKECOLOR","ADD_ACTION","clear_redo","CLEAR_REDO","REDO","pop","delta","pivot","end","init","relH","relW","endPos","subtract","startPos","paths","translate","handle_init","handle_end","lockY","y","lockX","shift","scale","UNDO","HIDE_COLORPICKER","SHOW_COLORPICKER","TRIGGER_FILEDROPDOWN","ADD_LAYER","bringToFront","INSERT_LAYER","number","SELECT_LAYER","LAYER_SELECT_ALL","LAYER_HIDE_SHAPES","LAYER_UNHIDE_SHAPES","REMOVE_LAYER","MERGE_LAYERS","MOVE_LAYER_UP","MOVE_LAYER_DOWN","SET_UI_LAYER","REFRESH_LAYER_ARRAY","SWAP_LAYERS","indexes","temp","first_index","second_index","SET_SELECTED_LAYER_INDEX","SET_GUIDE_X_VALUES","values","SET_GUIDE_Y_VALUES","ADD_GUIDE_LINES_X","lines_x","ADD_GUIDE_LINES_Y","lines_y","CLEAR_GUIDE_LINES_Y","CLEAR_GUIDE_LINES_X","getters","clamp","min","max"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport { bus, Layer, ShapeGroup, Action } from '@/main.js';\r\nimport { project } from 'paper';\r\nimport Utils from '@/Utils.js';\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ACTIVE_TOOL: 'select',\r\n\r\n    LAYER_WINDOW_ACTIVE: false,\r\n    SCREEN_BORDER: null,\r\n\r\n    TOOLSELECT: null,\r\n    TOOLPOINTER: null,\r\n    TOOLPEN: null,\r\n    TOOLCIRCLE: null,\r\n    TOOLRECTANGLE: null,\r\n    TOOLSHAPEBUILDER: null,\r\n    TOOLLINE: null,\r\n\r\n    OBJECTS: [],\r\n    SELECTED: [],\r\n\r\n    // Undo and redo\r\n    ACTIONS: [],\r\n    REDO_ACTIONS: [],\r\n\r\n    // Window toggles\r\n    COLORPICKER_ACTIVE: false,\r\n    FILEDROPDOWN_ACTIVE: false,\r\n\r\n\r\n    // Tools settings\r\n    PEN_WIDTH: 1,\r\n    PEN_OPACITY: 1,\r\n    PEN_STROKECOLOR: 'black',\r\n    PEN_FILLCOLOR: 'transparent',\r\n\r\n    CIRCLE_WIDTH: 1,\r\n    CIRCLE_OPACITY: 1,\r\n    CIRCLE_STROKECOLOR: 'black',\r\n    CIRCLE_FILLCOLOR: 'transparent',\r\n\r\n    RECTANGLE_WIDTH: 1,\r\n    RECTANGLE_OPACITY: 1,\r\n    RECTANGLE_STROKECOLOR: 'black',\r\n    RECTANGLE_FILLCOLOR: 'transparent',\r\n\r\n    LINE_WIDTH: 1,\r\n    LINE_OPACITY: 1,\r\n    LINE_STROKECOLOR: 'black',\r\n\r\n    // Layers\r\n    LAYERS: [],\r\n    SELECTED_LAYER_INDEX: 1,\r\n    UI_LAYER: null,\r\n\r\n    // Guide Shapes\r\n    GUIDE_X_VALUES: [],\r\n    GUIDE_Y_VALUES: [],\r\n    GUIDE_LINES_Y: [],\r\n    GUIDE_LINES_X: []\r\n  },\r\n  mutations: {\r\n    // File settings\r\n    SET_SCREEN_BORDER: function(state, path) {\r\n      state.SCREEN_BORDER = path;\r\n    },\r\n    EXPORT_SVG: function(state) {\r\n      let data = [];\r\n      let objects = Utils.getUngrouped(state.OBJECTS);\r\n      for(let i=0; i<objects.length; i++) {\r\n        let item = objects[i];\r\n\r\n        let itemData = {\r\n          svg: item.exportSVG({asString: true}),\r\n          selectable: item.selectable,\r\n          type: item.type\r\n        };\r\n\r\n        data.push(itemData);\r\n      }\r\n\r\n      Utils.download('project', data);\r\n    },\r\n    IMPORT_SVG: function(state) {\r\n      let _file_input = document.createElement('input');\r\n      _file_input.type = 'file';\r\n\r\n      _file_input.addEventListener('change', (e) => {\r\n          let _file = e.target.files[0];\r\n\r\n          project.clear();\r\n          state.ACTIONS = [];\r\n          state.REDO_ACTIONS = [];\r\n          state.OBJECTS = [];\r\n          state.SELECTED = [];\r\n          state.LAYERS = [];\r\n          state.SELECTED_LAYER_INDEX = 1;\r\n          bus.$emit(\"setup-canvas-border\");\r\n\r\n          let fs = new FileReader();\r\n          fs.onload = () => {\r\n            let data = JSON.parse(fs.result);\r\n\r\n            // Add every shape from the file\r\n            Object.keys(data).forEach(function(key, index) {\r\n              if(data[key].type != \"group\") {\r\n                project.importSVG(data[key].svg, {onLoad: (item) => {\r\n                  project.activeLayer.addChild(item);\r\n                  item.selectable = data[key].selectable;\r\n                  item.type = data[key].type;\r\n\r\n                  state.OBJECTS.push(item);\r\n                }})\r\n              }\r\n            });\r\n          }\r\n          fs.readAsText(_file);\r\n\r\n          _file_input = null;\r\n      });\r\n\r\n      _file_input.click();\r\n    },\r\n\r\n    // --- Tools ---\r\n    SET_ACTIVE: function(state, type) {\r\n      let old = state.ACTIVE_TOOL\r\n      state.ACTIVE_TOOL = type;\r\n\r\n      if(old == \"select\" && type != \"select\") {\r\n        bus.$emit(\"deactivate-select\");\r\n      }\r\n      if(old == \"pointer\" && type != \"pointer\") {\r\n        bus.$emit(\"deactivate-pointer\")\r\n      }\r\n    },\r\n\r\n    SET_LAYER_WINDOW_ACTIVE: function(state, value) {\r\n      state.LAYER_WINDOW_ACTIVE = value;\r\n    },\r\n\r\n    SET_TOOLSELECT: (state, tool) => {\r\n      state.TOOLSELECT = tool;\r\n    },\r\n    SET_TOOLPOINTER: (state, tool) => {\r\n      state.TOOLPOINTER = tool;\r\n    },\r\n    SET_TOOLPEN: (state, tool) => {\r\n      state.TOOLPEN = tool;\r\n    },\r\n    SET_TOOLCIRCLE: (state, tool) => {\r\n      state.TOOLCIRCLE = tool;\r\n    },\r\n    SET_TOOLRECTANGLE: (state, tool) => {\r\n      state.TOOLRECTANGLE = tool;\r\n    },\r\n    SET_TOOLSHAPEBUILDER: (state, tool) => {\r\n      state.TOOLSHAPEBUILDER = tool\r\n    },\r\n    SET_TOOLLINE: (state, tool) => {\r\n      state.TOOLLINE = tool\r\n    },\r\n\r\n    // --- Shapes ---\r\n    ADD_SHAPE: (state, shape) => {\r\n      state.OBJECTS.push(shape);\r\n    },\r\n\r\n    // --- Selection ---\r\n    ADD_SELECT: (state, shape) => {\r\n      if(!state.SELECTED.includes(shape))\r\n        state.SELECTED.push(shape);\r\n    },\r\n    DESELECT: (state, shapes=null) => {\r\n      if(shapes == null)\r\n        shapes = [...state.SELECTED]\r\n\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        shapes[i].selected = false;\r\n\r\n        // Find the shape in the selected array\r\n        let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n\r\n        // Remove it from selection array\r\n        if(index_sel >= 0)\r\n          state.SELECTED.splice(index_sel, 1);\r\n      }\r\n    },\r\n    DELETE_SHAPES: (state, options={shapes, undo:false}) => {\r\n      let shapes = options.shapes;\r\n      if(shapes == null)\r\n        shapes = [...state.SELECTED];\r\n\r\n      let action = null;\r\n      if(options.undo) {\r\n        action = new Action(\"delete\", {\r\n          shapes: shapes,\r\n          layers: []\r\n        })\r\n      }\r\n\r\n      for(let i=0; i<shapes.length; i++) {\r\n        if(options.undo) {\r\n          action.data.layers.push(shapes[i].layer);\r\n          shapes[i].visible = false;\r\n          shapes[i].selectable = false;\r\n          shapes[i].selected = false;\r\n        }\r\n        else {\r\n          // Destroy the shape (it's still in the objects and the selection array)\r\n          shapes[i].remove();\r\n        }\r\n\r\n        // Find the shape in the objects array\r\n        let index_obj = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Find the shape in the selected array\r\n        let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n\r\n        // Remove it from the objects array\r\n        state.OBJECTS.splice(index_obj, 1);\r\n        // Remove it from selection array\r\n        if(index_sel >= 0)\r\n          state.SELECTED.splice(index_sel, 1);\r\n      }\r\n\r\n      if(options.undo) {\r\n        state.ACTIONS.push(action);\r\n        state.REDO_ACTIONS = []\r\n      }\r\n    },\r\n    // Remove shapes from the objects and selection array WITHOUT DESTROYING THEM\r\n    DISCARD_SHAPES(state, shapes=null) {\r\n      if(shapes == null)\r\n        shapes = [...state.SELECTED];\r\n\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        // Find the shape in the objects array\r\n        let index_obj = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Find the shape in the selected array\r\n        let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n        \r\n        // Remove it from objects array\r\n        state.OBJECTS.splice(index_obj, 1);\r\n        // Remove it from selection array\r\n        if(index_sel >= 0)\r\n          state.SELECTED.splice(index_sel, 1);\r\n      }\r\n    },\r\n\r\n    SELECTION_SET_STROKECOLOR(state, value) {\r\n      bus.$emit('set_color_stroke', value);\r\n    },\r\n    SELECTION_SET_STROKEWIDTH(state, value) {\r\n      bus.$emit('set_width_stroke', value);\r\n    },\r\n    SELECTION_SET_STROKECAP(state, value) {\r\n      bus.$emit('set_cap_stroke', value);\r\n    },\r\n    SELECTION_SET_FILLCOLOR(state, value) {\r\n      bus.$emit('set_color_fill', value);\r\n    },\r\n    SELECTION_SET_OPACITY(state, value) {\r\n      bus.$emit('set_opacity', value);\r\n    },\r\n\r\n    PEN_SET_WIDTH(state, value) {\r\n      state.PEN_WIDTH = value\r\n    },\r\n    PEN_SET_OPACITY(state, value) {\r\n      state.PEN_OPACITY = value\r\n    },\r\n    PEN_SET_STROKECOLOR(state, value) {\r\n      state.PEN_STROKECOLOR = value\r\n    },\r\n    PEN_SET_FILLCOLOR(state, value) {\r\n      state.PEN_FILLCOLOR = value\r\n    },\r\n\r\n    CIRCLE_SET_WIDTH(state, value) {\r\n      state.CIRCLE_WIDTH = value\r\n    },\r\n    CIRCLE_SET_OPACITY(state, value) {\r\n      state.CIRCLE_OPACITY = value\r\n    },\r\n    CIRCLE_SET_STROKECOLOR(state, value) {\r\n      state.CIRCLE_STROKECOLOR = value\r\n    },\r\n    CIRCLE_SET_FILLCOLOR(state, value) {\r\n      state.CIRCLE_FILLCOLOR = value\r\n    },\r\n\r\n    RECTANGLE_SET_WIDTH(state, value) {\r\n      state.RECTANGLE_WIDTH = value\r\n    },\r\n    RECTANGLE_SET_OPACITY(state, value) {\r\n      state.RECTANGLE_OPACITY = value\r\n    },\r\n    RECTANGLE_SET_STROKECOLOR(state, value) {\r\n      state.RECTANGLE_STROKECOLOR = value\r\n    },\r\n    RECTANGLE_SET_FILLCOLOR(state, value) {\r\n      state.RECTANGLE_FILLCOLOR = value\r\n    },\r\n\r\n    LINE_SET_WIDTH(state, value) {\r\n      state.LINE_WIDTH = value\r\n    },\r\n    LINE_SET_OPACITY(state, value) {\r\n      state.LINE_OPACITY = value\r\n    },\r\n    LINE_SET_STROKECOLOR(state, value) {\r\n      state.LINE_STROKECOLOR = value\r\n    },\r\n\r\n    // Add an action to the undo list\r\n    ADD_ACTION(state, action, clear_redo=true) {\r\n      state.ACTIONS.push(action);\r\n      if(clear_redo)\r\n        state.REDO_ACTIONS = []\r\n    },\r\n    CLEAR_REDO(state) {\r\n      state.REDO_ACTIONS = [];\r\n    },\r\n    REDO(state) {\r\n      if(state.REDO_ACTIONS.length <= 0) {\r\n        return;\r\n      }\r\n\r\n      let action = state.REDO_ACTIONS.pop();\r\n\r\n      switch(action.type) {\r\n        case \"move\":\r\n          var delta = action.data.endPos.subtract(action.data.startPos);\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].translate(delta);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n\r\n        case 'scale':\r\n          var pivot = action.data.pivot;\r\n          var end = action.data.handle_init;\r\n          var init = action.data.handle_end;\r\n\r\n          var relH = 1;\r\n          var relW = 1;\r\n\r\n          if(!action.data.lockY) {\r\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\r\n          }\r\n          if (!action.data.lockX) {\r\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\r\n          }\r\n\r\n          if(action.data.shift) {\r\n            if(action.data.lockY) {\r\n              relH = relW;\r\n            }\r\n            else if(action.data.lockX) {\r\n              relW = relH;\r\n            }\r\n          }\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].scale(relW, relH, pivot);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n\r\n        case 'delete':\r\n          let shapes = action.data.shapes;\r\n          bus.$emit(\"redo-delete\", (shapes));\r\n\r\n          for(let i=0; i<shapes.length; i++) {\r\n            action.data.layers.push(shapes[i].layer);\r\n            shapes[i].visible = false;\r\n            shapes[i].selectable = false;\r\n            shapes[i].selected = false;\r\n\r\n            // Find the shape in the objects array\r\n            let index_obj = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n            // Find the shape in the selected array\r\n            let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n\r\n            // Remove it from the objects array\r\n            state.OBJECTS.splice(index_obj, 1);\r\n            // Remove it from selection array\r\n            if(index_sel >= 0)\r\n              state.SELECTED.splice(index_sel, 1);\r\n          }\r\n\r\n          // Let other components know (ToolSelect -> transform box must disappear)\r\n          bus.$emit(\"delete_selection\");\r\n\r\n          break;\r\n      }\r\n\r\n      state.ACTIONS.push(action);\r\n    },\r\n    UNDO(state) {\r\n      if(state.ACTIONS.length <= 0) {\r\n        return;\r\n      }\r\n      let action = state.ACTIONS.pop();\r\n      \r\n      switch(action.type) {\r\n        case 'delete':\r\n          let shapes = [...state.SELECTED];\r\n          for(var i=shapes.length-1; i>=0; i--) {\r\n            shapes[i].selected = false;\r\n    \r\n            // Find the shape in the selected array\r\n            let index_sel = state.SELECTED.findIndex(x => x === shapes[i]);\r\n    \r\n            // Remove it from selection array\r\n            if(index_sel >= 0)\r\n              state.SELECTED.splice(index_sel, 1);\r\n          }\r\n\r\n          for(let i=0; i<action.data.shapes.length; i++) {\r\n            let shape = action.data.shapes[i];\r\n            action.data.layers[i].addChild(shape);\r\n\r\n            // Add the shape\r\n            state.OBJECTS.push(shape);\r\n            state.SELECTED.push(shape);\r\n            shape.selected = true;\r\n            shape.selectable = true;\r\n            shape.visible = true;\r\n          }\r\n\r\n          break;\r\n        case 'move':\r\n          var delta = action.data.startPos.subtract(action.data.endPos);\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].translate(delta);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n\r\n        case 'scale':\r\n          var pivot = action.data.pivot;\r\n          var init = action.data.handle_init;\r\n          var end = action.data.handle_end;\r\n\r\n          var relH = 1;\r\n          var relW = 1;\r\n\r\n          if(!action.data.lockY) {\r\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\r\n          }\r\n          if (!action.data.lockX) {\r\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\r\n          }\r\n\r\n          if(action.data.shift) {\r\n            if(action.data.lockY) {\r\n              relH = relW;\r\n            }\r\n            else if(action.data.lockX) {\r\n              relW = relH;\r\n            }\r\n          }\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].scale(relW, relH, pivot);\r\n          }\r\n\r\n          state.SELECTED = [...action.data.paths];\r\n          break;\r\n      }\r\n\r\n      state.REDO_ACTIONS.push(action);\r\n    },\r\n\r\n\r\n    // Toggle windows\r\n    HIDE_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = false\r\n    },\r\n    SHOW_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = true\r\n    },\r\n    TRIGGER_FILEDROPDOWN(state) {\r\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\r\n    },\r\n\r\n    //Layers\r\n    ADD_LAYER(state) {\r\n      bus.$emit('add-layer');\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    INSERT_LAYER(state, layer) {\r\n      state.LAYERS.push(layer);\r\n      state.SELECTED_LAYER_INDEX = layer.number;\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    SELECT_LAYER(state, number) {\r\n      bus.$emit('update-active-layer', number);\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    LAYER_SELECT_ALL(state, number) {\r\n      bus.$emit('layer-select-all', number);\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    LAYER_HIDE_SHAPES(state, number) {\r\n      bus.$emit('layer-hide-shapes', number);\r\n    },\r\n    LAYER_UNHIDE_SHAPES(state, number) {\r\n      bus.$emit('layer-unhide-shapes', number);\r\n    },\r\n    REMOVE_LAYER(state) {\r\n      if(state.SELECTED_LAYER_INDEX != 0) {\r\n        bus.$emit('hide-transformbox');\r\n        bus.$emit('remove-layer');\r\n        state.UI_LAYER.bringToFront();\r\n      }\r\n    },\r\n    MERGE_LAYERS(state) {\r\n      bus.$emit('merge-layers');\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    MOVE_LAYER_UP(state) {\r\n      bus.$emit('move-layer-up', state.SELECTED_LAYER_INDEX);\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    MOVE_LAYER_DOWN(state, number) {\r\n      bus.$emit('move-layer-down', state.SELECTED_LAYER_INDEX);\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    SET_UI_LAYER(state, layer) {\r\n      state.UI_LAYER = layer;\r\n    },\r\n    REFRESH_LAYER_ARRAY(state) {\r\n      state.LAYERS = [...state.LAYERS];\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    SWAP_LAYERS(state, indexes) {\r\n      let temp = state.LAYERS[indexes.first_index];\r\n      state.LAYERS[indexes.first_index] = state.LAYERS[indexes.second_index];\r\n      state.LAYERS[indexes.second_index] = temp;\r\n\r\n      // Changing key for change detection\r\n      state.LAYERS = [...state.LAYERS];\r\n\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n    SET_SELECTED_LAYER_INDEX(state, value) {\r\n      state.SELECTED_LAYER_INDEX = value;\r\n      state.UI_LAYER.bringToFront();\r\n    },\r\n\r\n    // -- Guidelines --\r\n    SET_GUIDE_X_VALUES(state, values) {\r\n      state.GUIDE_X_VALUES = values;\r\n    },\r\n    SET_GUIDE_Y_VALUES(state, values) {\r\n      state.GUIDE_Y_VALUES = values;\r\n    },\r\n    ADD_GUIDE_LINES_X(state, lines_x) {\r\n      state.GUIDE_LINES_X.push(...lines_x);\r\n    },\r\n    ADD_GUIDE_LINES_Y(state, lines_y) {\r\n      state.GUIDE_LINES_Y.push(...lines_y);\r\n    },\r\n    CLEAR_GUIDE_LINES_Y(state) {\r\n      for(let i=0; i<state.GUIDE_LINES_Y.length; i++) {\r\n        state.GUIDE_LINES_Y[i].remove();\r\n      }\r\n\r\n      state.GUIDE_LINES_Y = [];\r\n    },\r\n    CLEAR_GUIDE_LINES_X(state) {\r\n      for(let i=0; i<state.GUIDE_LINES_X.length; i++) {\r\n        state.GUIDE_LINES_X[i].remove();\r\n      }\r\n\r\n      state.GUIDE_LINES_X = [];\r\n    }\r\n  },\r\n  getters: {\r\n    clamp: () => (value, min, max) => {\r\n      if(value < min){\r\n        return min;\r\n      } else if(value > max) {\r\n        return max;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n})\r\n"]}]}