{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\src\\store.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\store.js","mtime":1579277120792},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _Object$keys from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { bus, Layer, ShapeGroup } from '@/main.js';\nimport { project } from 'paper';\nimport Utils from '@/Utils.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    ACTIVE_TOOL: 'select',\n    LAYER_WINDOW_ACTIVE: false,\n    SCREEN_BORDER: null,\n    TOOLSELECT: null,\n    TOOLPOINTER: null,\n    TOOLPEN: null,\n    TOOLCIRCLE: null,\n    TOOLRECTANGLE: null,\n    TOOLSHAPEBUILDER: null,\n    TOOLLINE: null,\n    OBJECTS: [],\n    SELECTED: [],\n    ACTIONS: [],\n    // Window toggles\n    COLORPICKER_ACTIVE: false,\n    FILEDROPDOWN_ACTIVE: false,\n    // Tools settings\n    PEN_WIDTH: 1,\n    PEN_OPACITY: 1,\n    PEN_STROKECOLOR: 'black',\n    PEN_FILLCOLOR: 'transparent',\n    CIRCLE_WIDTH: 1,\n    CIRCLE_OPACITY: 1,\n    CIRCLE_STROKECOLOR: 'black',\n    CIRCLE_FILLCOLOR: 'transparent',\n    RECTANGLE_WIDTH: 1,\n    RECTANGLE_OPACITY: 1,\n    RECTANGLE_STROKECOLOR: 'black',\n    RECTANGLE_FILLCOLOR: 'transparent',\n    LINE_WIDTH: 1,\n    LINE_OPACITY: 1,\n    LINE_STROKECOLOR: 'black',\n    // General\n    LAYERS: [],\n    SELECTED_LAYER_INDEX: 1,\n    // Guide Shapes\n    GUIDE_X_VALUES: [],\n    GUIDE_Y_VALUES: [],\n    GUIDE_LINES_Y: [],\n    GUIDE_LINES_X: []\n  },\n  mutations: {\n    // File settings\n    SET_SCREEN_BORDER: function SET_SCREEN_BORDER(state, path) {\n      state.SCREEN_BORDER = path;\n    },\n    EXPORT_SVG: function EXPORT_SVG(state) {\n      var data = [];\n      var objects = Utils.getUngrouped(state.OBJECTS);\n\n      for (var i = 0; i < objects.length; i++) {\n        var item = objects[i];\n        var itemData = {\n          svg: item.exportSVG({\n            asString: true\n          }),\n          selectable: item.selectable,\n          type: item.type\n        };\n        data.push(itemData);\n      }\n\n      Utils.download('project', data);\n    },\n    IMPORT_SVG: function IMPORT_SVG(state) {\n      var _file_input = document.createElement('input');\n\n      _file_input.type = 'file';\n\n      _file_input.addEventListener('change', function (e) {\n        var _file = e.target.files[0];\n        project.clear();\n        state.OBJECTS = [];\n        state.SELECTED = [];\n        var fs = new FileReader();\n\n        fs.onload = function () {\n          var data = JSON.parse(fs.result); // Add every shape from the file\n\n          _Object$keys(data).forEach(function (key, index) {\n            if (data[key].type != \"group\") {\n              project.importSVG(data[key].svg, {\n                onLoad: function onLoad(item) {\n                  item.selectable = data[key].selectable;\n                  item.type = data[key].type;\n                  state.OBJECTS.push(item);\n                }\n              });\n            }\n          });\n        };\n\n        fs.readAsText(_file);\n        _file_input = null;\n      });\n\n      _file_input.click();\n    },\n    // --- Tools ---\n    SET_ACTIVE: function SET_ACTIVE(state, type) {\n      var old = state.ACTIVE_TOOL;\n      state.ACTIVE_TOOL = type;\n\n      if (old == \"select\" && type != \"select\") {\n        bus.$emit(\"deactivate-select\");\n      }\n\n      if (old == \"pointer\" && type != \"pointer\") {\n        bus.$emit(\"deactivate-pointer\");\n      }\n    },\n    SET_LAYER_WINDOW_ACTIVE: function SET_LAYER_WINDOW_ACTIVE(state, value) {\n      state.LAYER_WINDOW_ACTIVE = value;\n    },\n    SET_TOOLSELECT: function SET_TOOLSELECT(state, tool) {\n      state.TOOLSELECT = tool;\n    },\n    SET_TOOLPOINTER: function SET_TOOLPOINTER(state, tool) {\n      state.TOOLPOINTER = tool;\n    },\n    SET_TOOLPEN: function SET_TOOLPEN(state, tool) {\n      state.TOOLPEN = tool;\n    },\n    SET_TOOLCIRCLE: function SET_TOOLCIRCLE(state, tool) {\n      state.TOOLCIRCLE = tool;\n    },\n    SET_TOOLRECTANGLE: function SET_TOOLRECTANGLE(state, tool) {\n      state.TOOLRECTANGLE = tool;\n    },\n    SET_TOOLSHAPEBUILDER: function SET_TOOLSHAPEBUILDER(state, tool) {\n      state.TOOLSHAPEBUILDER = tool;\n    },\n    SET_TOOLLINE: function SET_TOOLLINE(state, tool) {\n      state.TOOLLINE = tool;\n    },\n    // --- Shapes ---\n    ADD_SHAPE: function ADD_SHAPE(state, shape) {\n      state.OBJECTS.push(shape);\n    },\n    // --- Selection ---\n    ADD_SELECT: function ADD_SELECT(state, shape) {\n      state.SELECTED.push(shape);\n    },\n    CLEAR_SELECT: function CLEAR_SELECT(state) {\n      state.SELECTED = [];\n    },\n    DELETE_SHAPES: function DELETE_SHAPES(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : state.SELECTED;\n\n      // Count from end to begin to allow pop()\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        // Destroy the shape (it's still in the objects and the selection array)\n        shapes[i].remove(); // Find the shape in the objects array\n\n        var index = state.OBJECTS.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it\n\n        state.OBJECTS.splice(index, 1); // Remove the shape from the selection array\n\n        shapes.pop();\n      }\n    },\n    DISCARD_SHAPES: function DISCARD_SHAPES(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _toConsumableArray(state.SELECTED);\n\n      // Count from end to begin to allow pop()\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        // Find the shape in the objects array\n        var index = state.OBJECTS.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it\n\n        state.OBJECTS.splice(index, 1); // Remove the shape from the selection array\n\n        shapes.pop();\n      }\n    },\n    SELECTION_SET_STROKECOLOR: function SELECTION_SET_STROKECOLOR(state, value) {\n      bus.$emit('set_color_stroke', value);\n    },\n    SELECTION_SET_STROKEWIDTH: function SELECTION_SET_STROKEWIDTH(state, value) {\n      bus.$emit('set_width_stroke', value);\n    },\n    SELECTION_SET_STROKECAP: function SELECTION_SET_STROKECAP(state, value) {\n      bus.$emit('set_cap_stroke', value);\n    },\n    SELECTION_SET_FILLCOLOR: function SELECTION_SET_FILLCOLOR(state, value) {\n      bus.$emit('set_color_fill', value);\n    },\n    SELECTION_SET_OPACITY: function SELECTION_SET_OPACITY(state, value) {\n      bus.$emit('set_opacity', value);\n    },\n    PEN_SET_WIDTH: function PEN_SET_WIDTH(state, value) {\n      state.PEN_WIDTH = value;\n    },\n    PEN_SET_OPACITY: function PEN_SET_OPACITY(state, value) {\n      state.PEN_OPACITY = value;\n    },\n    PEN_SET_STROKECOLOR: function PEN_SET_STROKECOLOR(state, value) {\n      state.PEN_STROKECOLOR = value;\n    },\n    PEN_SET_FILLCOLOR: function PEN_SET_FILLCOLOR(state, value) {\n      state.PEN_FILLCOLOR = value;\n    },\n    CIRCLE_SET_WIDTH: function CIRCLE_SET_WIDTH(state, value) {\n      state.CIRCLE_WIDTH = value;\n    },\n    CIRCLE_SET_OPACITY: function CIRCLE_SET_OPACITY(state, value) {\n      state.CIRCLE_OPACITY = value;\n    },\n    CIRCLE_SET_STROKECOLOR: function CIRCLE_SET_STROKECOLOR(state, value) {\n      state.CIRCLE_STROKECOLOR = value;\n    },\n    CIRCLE_SET_FILLCOLOR: function CIRCLE_SET_FILLCOLOR(state, value) {\n      state.CIRCLE_FILLCOLOR = value;\n    },\n    RECTANGLE_SET_WIDTH: function RECTANGLE_SET_WIDTH(state, value) {\n      state.RECTANGLE_WIDTH = value;\n    },\n    RECTANGLE_SET_OPACITY: function RECTANGLE_SET_OPACITY(state, value) {\n      state.RECTANGLE_OPACITY = value;\n    },\n    RECTANGLE_SET_STROKECOLOR: function RECTANGLE_SET_STROKECOLOR(state, value) {\n      state.RECTANGLE_STROKECOLOR = value;\n    },\n    RECTANGLE_SET_FILLCOLOR: function RECTANGLE_SET_FILLCOLOR(state, value) {\n      state.RECTANGLE_FILLCOLOR = value;\n    },\n    LINE_SET_WIDTH: function LINE_SET_WIDTH(state, value) {\n      state.LINE_WIDTH = value;\n    },\n    LINE_SET_OPACITY: function LINE_SET_OPACITY(state, value) {\n      state.LINE_OPACITY = value;\n    },\n    LINE_SET_STROKECOLOR: function LINE_SET_STROKECOLOR(state, value) {\n      state.LINE_STROKECOLOR = value;\n    },\n    // Add an action to the undo list\n    ADD_ACTION: function ADD_ACTION(state, action) {\n      state.ACTIONS.push(action);\n    },\n    UNDO: function UNDO(state) {\n      if (state.ACTIONS.length <= 0) {\n        return;\n      }\n\n      var action = state.ACTIONS.pop();\n\n      switch (action.type) {\n        case 'move':\n          var delta = action.data.startPos.subtract(action.data.endPos);\n\n          for (var i = 0; i < action.data.paths.length; i++) {\n            action.data.paths[i].translate(delta);\n          }\n\n          state.SELECTED = action.data.paths;\n          break;\n\n        case 'scale':\n          var pivot = action.data.pivot;\n          var init = action.data.handle_init;\n          var end = action.data.handle_end;\n          var relH = 1;\n          var relW = 1;\n\n          if (!action.data.lockY) {\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\n          }\n\n          if (!action.data.lockX) {\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\n          }\n\n          if (action.data.shift) {\n            if (action.data.lockY) {\n              relH = relW;\n            } else if (action.data.lockX) {\n              relW = relH;\n            }\n          }\n\n          for (var i = 0; i < action.data.paths.length; i++) {\n            action.data.paths[i].scale(relW, relH, pivot);\n          }\n\n          state.SELECTED = action.data.paths;\n          break;\n      }\n    },\n    // Toggle windows\n    HIDE_COLORPICKER: function HIDE_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = false;\n    },\n    SHOW_COLORPICKER: function SHOW_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = true;\n    },\n    TRIGGER_FILEDROPDOWN: function TRIGGER_FILEDROPDOWN(state) {\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\n    },\n    //Layers\n    ADD_LAYER: function ADD_LAYER(state) {\n      bus.$emit('add-layer');\n    },\n    INSERT_LAYER: function INSERT_LAYER(state, layer) {\n      state.LAYERS.push(layer);\n      state.SELECTED_LAYER_INDEX = layer.number;\n    },\n    SELECT_LAYER: function SELECT_LAYER(state, number) {\n      bus.$emit('update-active-layer', number);\n    },\n    REMOVE_LAYER: function REMOVE_LAYER(state) {\n      if (state.SELECTED_LAYER_INDEX != 0) {\n        bus.$emit('hide-transformbox');\n        bus.$emit('remove-layer');\n      }\n    },\n    MERGE_LAYERS: function MERGE_LAYERS(state) {\n      bus.$emit('merge-layers');\n    },\n    MOVE_LAYER_UP: function MOVE_LAYER_UP(state) {\n      bus.$emit('move-layer-up', state.SELECTED_LAYER_INDEX);\n    },\n    MOVE_LAYER_DOWN: function MOVE_LAYER_DOWN(state, number) {\n      bus.$emit('move-layer-down', state.SELECTED_LAYER_INDEX);\n    },\n    REFRESH_LAYER_ARRAY: function REFRESH_LAYER_ARRAY(state) {\n      state.LAYERS = _toConsumableArray(state.LAYERS);\n    },\n    SWAP_LAYERS: function SWAP_LAYERS(state, indexes) {\n      var temp = state.LAYERS[indexes.first_index];\n      state.LAYERS[indexes.first_index] = state.LAYERS[indexes.second_index];\n      state.LAYERS[indexes.second_index] = temp; // Changing key for change detection\n\n      state.LAYERS = _toConsumableArray(state.LAYERS);\n    },\n    SET_SELECTED_LAYER_INDEX: function SET_SELECTED_LAYER_INDEX(state, value) {\n      state.SELECTED_LAYER_INDEX = value;\n    },\n    // -- Guidelines --\n    SET_GUIDE_X_VALUES: function SET_GUIDE_X_VALUES(state, values) {\n      state.GUIDE_X_VALUES = values;\n    },\n    SET_GUIDE_Y_VALUES: function SET_GUIDE_Y_VALUES(state, values) {\n      state.GUIDE_Y_VALUES = values;\n    },\n    ADD_GUIDE_LINES_X: function ADD_GUIDE_LINES_X(state, lines_x) {\n      var _state$GUIDE_LINES_X;\n\n      (_state$GUIDE_LINES_X = state.GUIDE_LINES_X).push.apply(_state$GUIDE_LINES_X, _toConsumableArray(lines_x));\n    },\n    ADD_GUIDE_LINES_Y: function ADD_GUIDE_LINES_Y(state, lines_y) {\n      var _state$GUIDE_LINES_Y;\n\n      (_state$GUIDE_LINES_Y = state.GUIDE_LINES_Y).push.apply(_state$GUIDE_LINES_Y, _toConsumableArray(lines_y));\n    },\n    CLEAR_GUIDE_LINES_Y: function CLEAR_GUIDE_LINES_Y(state) {\n      for (var i = 0; i < state.GUIDE_LINES_Y.length; i++) {\n        state.GUIDE_LINES_Y[i].remove();\n      }\n\n      state.GUIDE_LINES_Y = [];\n    },\n    CLEAR_GUIDE_LINES_X: function CLEAR_GUIDE_LINES_X(state) {\n      for (var i = 0; i < state.GUIDE_LINES_X.length; i++) {\n        state.GUIDE_LINES_X[i].remove();\n      }\n\n      state.GUIDE_LINES_X = [];\n    }\n  },\n  getters: {\n    clamp: function clamp() {\n      return function (value, min, max) {\n        if (value < min) {\n          return min;\n        } else if (value > max) {\n          return max;\n        }\n\n        return value;\n      };\n    }\n  }\n});",{"version":3,"sources":["D:\\GitHub\\Vectory\\src\\store.js"],"names":["Vue","Vuex","bus","Layer","ShapeGroup","project","Utils","use","Store","state","ACTIVE_TOOL","LAYER_WINDOW_ACTIVE","SCREEN_BORDER","TOOLSELECT","TOOLPOINTER","TOOLPEN","TOOLCIRCLE","TOOLRECTANGLE","TOOLSHAPEBUILDER","TOOLLINE","OBJECTS","SELECTED","ACTIONS","COLORPICKER_ACTIVE","FILEDROPDOWN_ACTIVE","PEN_WIDTH","PEN_OPACITY","PEN_STROKECOLOR","PEN_FILLCOLOR","CIRCLE_WIDTH","CIRCLE_OPACITY","CIRCLE_STROKECOLOR","CIRCLE_FILLCOLOR","RECTANGLE_WIDTH","RECTANGLE_OPACITY","RECTANGLE_STROKECOLOR","RECTANGLE_FILLCOLOR","LINE_WIDTH","LINE_OPACITY","LINE_STROKECOLOR","LAYERS","SELECTED_LAYER_INDEX","GUIDE_X_VALUES","GUIDE_Y_VALUES","GUIDE_LINES_Y","GUIDE_LINES_X","mutations","SET_SCREEN_BORDER","path","EXPORT_SVG","data","objects","getUngrouped","i","length","item","itemData","svg","exportSVG","asString","selectable","type","push","download","IMPORT_SVG","_file_input","document","createElement","addEventListener","e","_file","target","files","clear","fs","FileReader","onload","JSON","parse","result","forEach","key","index","importSVG","onLoad","readAsText","click","SET_ACTIVE","old","$emit","SET_LAYER_WINDOW_ACTIVE","value","SET_TOOLSELECT","tool","SET_TOOLPOINTER","SET_TOOLPEN","SET_TOOLCIRCLE","SET_TOOLRECTANGLE","SET_TOOLSHAPEBUILDER","SET_TOOLLINE","ADD_SHAPE","shape","ADD_SELECT","CLEAR_SELECT","DELETE_SHAPES","shapes","remove","findIndex","x","splice","pop","DISCARD_SHAPES","SELECTION_SET_STROKECOLOR","SELECTION_SET_STROKEWIDTH","SELECTION_SET_STROKECAP","SELECTION_SET_FILLCOLOR","SELECTION_SET_OPACITY","PEN_SET_WIDTH","PEN_SET_OPACITY","PEN_SET_STROKECOLOR","PEN_SET_FILLCOLOR","CIRCLE_SET_WIDTH","CIRCLE_SET_OPACITY","CIRCLE_SET_STROKECOLOR","CIRCLE_SET_FILLCOLOR","RECTANGLE_SET_WIDTH","RECTANGLE_SET_OPACITY","RECTANGLE_SET_STROKECOLOR","RECTANGLE_SET_FILLCOLOR","LINE_SET_WIDTH","LINE_SET_OPACITY","LINE_SET_STROKECOLOR","ADD_ACTION","action","UNDO","delta","startPos","subtract","endPos","paths","translate","pivot","init","handle_init","end","handle_end","relH","relW","lockY","y","lockX","shift","scale","HIDE_COLORPICKER","SHOW_COLORPICKER","TRIGGER_FILEDROPDOWN","ADD_LAYER","INSERT_LAYER","layer","number","SELECT_LAYER","REMOVE_LAYER","MERGE_LAYERS","MOVE_LAYER_UP","MOVE_LAYER_DOWN","REFRESH_LAYER_ARRAY","SWAP_LAYERS","indexes","temp","first_index","second_index","SET_SELECTED_LAYER_INDEX","SET_GUIDE_X_VALUES","values","SET_GUIDE_Y_VALUES","ADD_GUIDE_LINES_X","lines_x","ADD_GUIDE_LINES_Y","lines_y","CLEAR_GUIDE_LINES_Y","CLEAR_GUIDE_LINES_X","getters","clamp","min","max"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport { bus, Layer, ShapeGroup } from '@/main.js';\r\nimport { project } from 'paper';\r\nimport Utils from '@/Utils.js';\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ACTIVE_TOOL: 'select',\r\n\r\n    LAYER_WINDOW_ACTIVE: false,\r\n    SCREEN_BORDER: null,\r\n\r\n    TOOLSELECT: null,\r\n    TOOLPOINTER: null,\r\n    TOOLPEN: null,\r\n    TOOLCIRCLE: null,\r\n    TOOLRECTANGLE: null,\r\n    TOOLSHAPEBUILDER: null,\r\n    TOOLLINE: null,\r\n\r\n    OBJECTS: [],\r\n    SELECTED: [],\r\n\r\n    ACTIONS: [],\r\n\r\n    // Window toggles\r\n    COLORPICKER_ACTIVE: false,\r\n    FILEDROPDOWN_ACTIVE: false,\r\n\r\n\r\n    // Tools settings\r\n    PEN_WIDTH: 1,\r\n    PEN_OPACITY: 1,\r\n    PEN_STROKECOLOR: 'black',\r\n    PEN_FILLCOLOR: 'transparent',\r\n\r\n    CIRCLE_WIDTH: 1,\r\n    CIRCLE_OPACITY: 1,\r\n    CIRCLE_STROKECOLOR: 'black',\r\n    CIRCLE_FILLCOLOR: 'transparent',\r\n\r\n    RECTANGLE_WIDTH: 1,\r\n    RECTANGLE_OPACITY: 1,\r\n    RECTANGLE_STROKECOLOR: 'black',\r\n    RECTANGLE_FILLCOLOR: 'transparent',\r\n\r\n    LINE_WIDTH: 1,\r\n    LINE_OPACITY: 1,\r\n    LINE_STROKECOLOR: 'black',\r\n\r\n    // General\r\n    LAYERS: [],\r\n    SELECTED_LAYER_INDEX: 1,\r\n\r\n    // Guide Shapes\r\n    GUIDE_X_VALUES: [],\r\n    GUIDE_Y_VALUES: [],\r\n    GUIDE_LINES_Y: [],\r\n    GUIDE_LINES_X: []\r\n  },\r\n  mutations: {\r\n    // File settings\r\n    SET_SCREEN_BORDER: function(state, path) {\r\n      state.SCREEN_BORDER = path;\r\n    },\r\n    EXPORT_SVG: function(state) {\r\n      let data = [];\r\n      let objects = Utils.getUngrouped(state.OBJECTS);\r\n      for(let i=0; i<objects.length; i++) {\r\n        let item = objects[i];\r\n\r\n        let itemData = {\r\n          svg: item.exportSVG({asString: true}),\r\n          selectable: item.selectable,\r\n          type: item.type\r\n        };\r\n\r\n        data.push(itemData);\r\n      }\r\n\r\n      Utils.download('project', data);\r\n    },\r\n    IMPORT_SVG: function(state) {\r\n      let _file_input = document.createElement('input');\r\n      _file_input.type = 'file';\r\n\r\n      _file_input.addEventListener('change', (e) => {\r\n          let _file = e.target.files[0];\r\n\r\n          project.clear();\r\n          state.OBJECTS = [];\r\n          state.SELECTED = [];\r\n\r\n          let fs = new FileReader();\r\n          fs.onload = () => {\r\n            let data = JSON.parse(fs.result);\r\n\r\n            // Add every shape from the file\r\n            Object.keys(data).forEach(function(key, index) {\r\n              if(data[key].type != \"group\") {\r\n                project.importSVG(data[key].svg, {onLoad: (item) => {\r\n                  item.selectable = data[key].selectable;\r\n                  item.type = data[key].type;\r\n\r\n                  state.OBJECTS.push(item);\r\n                }})\r\n              }\r\n            });\r\n          }\r\n          fs.readAsText(_file);\r\n\r\n          _file_input = null;\r\n      });\r\n\r\n      _file_input.click();\r\n    },\r\n\r\n    // --- Tools ---\r\n    SET_ACTIVE: function(state, type) {\r\n      let old = state.ACTIVE_TOOL\r\n      state.ACTIVE_TOOL = type;\r\n\r\n      if(old == \"select\" && type != \"select\") {\r\n        bus.$emit(\"deactivate-select\");\r\n      }\r\n      if(old == \"pointer\" && type != \"pointer\") {\r\n        bus.$emit(\"deactivate-pointer\")\r\n      }\r\n    },\r\n\r\n    SET_LAYER_WINDOW_ACTIVE: function(state, value) {\r\n      state.LAYER_WINDOW_ACTIVE = value;\r\n    },\r\n\r\n    SET_TOOLSELECT: (state, tool) => {\r\n      state.TOOLSELECT = tool;\r\n    },\r\n    SET_TOOLPOINTER: (state, tool) => {\r\n      state.TOOLPOINTER = tool;\r\n    },\r\n    SET_TOOLPEN: (state, tool) => {\r\n      state.TOOLPEN = tool;\r\n    },\r\n    SET_TOOLCIRCLE: (state, tool) => {\r\n      state.TOOLCIRCLE = tool;\r\n    },\r\n    SET_TOOLRECTANGLE: (state, tool) => {\r\n      state.TOOLRECTANGLE = tool;\r\n    },\r\n    SET_TOOLSHAPEBUILDER: (state, tool) => {\r\n      state.TOOLSHAPEBUILDER = tool\r\n    },\r\n    SET_TOOLLINE: (state, tool) => {\r\n      state.TOOLLINE = tool\r\n    },\r\n\r\n    // --- Shapes ---\r\n    ADD_SHAPE: (state, shape) => {\r\n      state.OBJECTS.push(shape);\r\n    },\r\n\r\n    // --- Selection ---\r\n    ADD_SELECT: (state, shape) => {\r\n      state.SELECTED.push(shape);\r\n    },\r\n    CLEAR_SELECT: (state) => {\r\n        state.SELECTED = [];\r\n    },\r\n    DELETE_SHAPES: (state, shapes=state.SELECTED) => {\r\n      // Count from end to begin to allow pop()\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        // Destroy the shape (it's still in the objects and the selection array)\r\n        shapes[i].remove();\r\n\r\n        // Find the shape in the objects array\r\n        var index = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Remove it\r\n        state.OBJECTS.splice(index, 1);\r\n\r\n        // Remove the shape from the selection array\r\n        shapes.pop();\r\n      }\r\n    },\r\n    DISCARD_SHAPES(state, shapes=[...state.SELECTED]) {\r\n      // Count from end to begin to allow pop()\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        // Find the shape in the objects array\r\n        var index = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Remove it\r\n        state.OBJECTS.splice(index, 1);\r\n\r\n        // Remove the shape from the selection array\r\n        shapes.pop();\r\n      }\r\n    },\r\n\r\n    SELECTION_SET_STROKECOLOR(state, value) {\r\n      bus.$emit('set_color_stroke', value);\r\n    },\r\n    SELECTION_SET_STROKEWIDTH(state, value) {\r\n      bus.$emit('set_width_stroke', value);\r\n    },\r\n    SELECTION_SET_STROKECAP(state, value) {\r\n      bus.$emit('set_cap_stroke', value);\r\n    },\r\n    SELECTION_SET_FILLCOLOR(state, value) {\r\n      bus.$emit('set_color_fill', value);\r\n    },\r\n    SELECTION_SET_OPACITY(state, value) {\r\n      bus.$emit('set_opacity', value);\r\n    },\r\n\r\n    PEN_SET_WIDTH(state, value) {\r\n      state.PEN_WIDTH = value\r\n    },\r\n    PEN_SET_OPACITY(state, value) {\r\n      state.PEN_OPACITY = value\r\n    },\r\n    PEN_SET_STROKECOLOR(state, value) {\r\n      state.PEN_STROKECOLOR = value\r\n    },\r\n    PEN_SET_FILLCOLOR(state, value) {\r\n      state.PEN_FILLCOLOR = value\r\n    },\r\n\r\n    CIRCLE_SET_WIDTH(state, value) {\r\n      state.CIRCLE_WIDTH = value\r\n    },\r\n    CIRCLE_SET_OPACITY(state, value) {\r\n      state.CIRCLE_OPACITY = value\r\n    },\r\n    CIRCLE_SET_STROKECOLOR(state, value) {\r\n      state.CIRCLE_STROKECOLOR = value\r\n    },\r\n    CIRCLE_SET_FILLCOLOR(state, value) {\r\n      state.CIRCLE_FILLCOLOR = value\r\n    },\r\n\r\n    RECTANGLE_SET_WIDTH(state, value) {\r\n      state.RECTANGLE_WIDTH = value\r\n    },\r\n    RECTANGLE_SET_OPACITY(state, value) {\r\n      state.RECTANGLE_OPACITY = value\r\n    },\r\n    RECTANGLE_SET_STROKECOLOR(state, value) {\r\n      state.RECTANGLE_STROKECOLOR = value\r\n    },\r\n    RECTANGLE_SET_FILLCOLOR(state, value) {\r\n      state.RECTANGLE_FILLCOLOR = value\r\n    },\r\n\r\n    LINE_SET_WIDTH(state, value) {\r\n      state.LINE_WIDTH = value\r\n    },\r\n    LINE_SET_OPACITY(state, value) {\r\n      state.LINE_OPACITY = value\r\n    },\r\n    LINE_SET_STROKECOLOR(state, value) {\r\n      state.LINE_STROKECOLOR = value\r\n    },\r\n\r\n    // Add an action to the undo list\r\n    ADD_ACTION(state, action) {\r\n      state.ACTIONS.push(action);\r\n    },\r\n    UNDO(state) {\r\n      if(state.ACTIONS.length <= 0) {\r\n        return;\r\n      }\r\n      var action = state.ACTIONS.pop();\r\n      \r\n      switch(action.type) {\r\n        case 'move':\r\n          var delta = action.data.startPos.subtract(action.data.endPos);\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].translate(delta);\r\n          }\r\n\r\n          state.SELECTED = action.data.paths;\r\n          break;\r\n\r\n        case 'scale':\r\n          var pivot = action.data.pivot;\r\n          var init = action.data.handle_init;\r\n          var end = action.data.handle_end;\r\n\r\n          var relH = 1;\r\n          var relW = 1;\r\n\r\n          if(!action.data.lockY) {\r\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\r\n          }\r\n          if (!action.data.lockX) {\r\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\r\n          }\r\n\r\n          if(action.data.shift) {\r\n            if(action.data.lockY) {\r\n              relH = relW;\r\n            }\r\n            else if(action.data.lockX) {\r\n              relW = relH;\r\n            }\r\n          }\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].scale(relW, relH, pivot);\r\n          }\r\n\r\n          state.SELECTED = action.data.paths;\r\n          break;\r\n      }\r\n    },\r\n\r\n\r\n    // Toggle windows\r\n    HIDE_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = false\r\n    },\r\n    SHOW_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = true\r\n    },\r\n    TRIGGER_FILEDROPDOWN(state) {\r\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\r\n    },\r\n\r\n    //Layers\r\n    ADD_LAYER(state) {\r\n      bus.$emit('add-layer');\r\n    },\r\n    INSERT_LAYER(state, layer) {\r\n      state.LAYERS.push(layer);\r\n      state.SELECTED_LAYER_INDEX = layer.number;\r\n    },\r\n    SELECT_LAYER(state, number) {\r\n      bus.$emit('update-active-layer', number);\r\n    },\r\n    REMOVE_LAYER(state) {\r\n      if(state.SELECTED_LAYER_INDEX != 0) {\r\n        bus.$emit('hide-transformbox');\r\n        bus.$emit('remove-layer');\r\n      }\r\n    },\r\n    MERGE_LAYERS(state) {\r\n      bus.$emit('merge-layers');\r\n    },\r\n    MOVE_LAYER_UP(state) {\r\n      bus.$emit('move-layer-up', state.SELECTED_LAYER_INDEX);\r\n    },\r\n    MOVE_LAYER_DOWN(state, number) {\r\n      bus.$emit('move-layer-down', state.SELECTED_LAYER_INDEX);\r\n    },\r\n    REFRESH_LAYER_ARRAY(state) {\r\n      state.LAYERS = [...state.LAYERS];\r\n    },\r\n    SWAP_LAYERS(state, indexes) {\r\n      let temp = state.LAYERS[indexes.first_index];\r\n      state.LAYERS[indexes.first_index] = state.LAYERS[indexes.second_index];\r\n      state.LAYERS[indexes.second_index] = temp;\r\n\r\n      // Changing key for change detection\r\n      state.LAYERS = [...state.LAYERS];\r\n    },\r\n    SET_SELECTED_LAYER_INDEX(state, value) {\r\n      state.SELECTED_LAYER_INDEX = value;\r\n    },\r\n\r\n    // -- Guidelines --\r\n    SET_GUIDE_X_VALUES(state, values) {\r\n      state.GUIDE_X_VALUES = values;\r\n    },\r\n    SET_GUIDE_Y_VALUES(state, values) {\r\n      state.GUIDE_Y_VALUES = values;\r\n    },\r\n    ADD_GUIDE_LINES_X(state, lines_x) {\r\n      state.GUIDE_LINES_X.push(...lines_x);\r\n    },\r\n    ADD_GUIDE_LINES_Y(state, lines_y) {\r\n      state.GUIDE_LINES_Y.push(...lines_y);\r\n    },\r\n    CLEAR_GUIDE_LINES_Y(state) {\r\n      for(let i=0; i<state.GUIDE_LINES_Y.length; i++) {\r\n        state.GUIDE_LINES_Y[i].remove();\r\n      }\r\n\r\n      state.GUIDE_LINES_Y = [];\r\n    },\r\n    CLEAR_GUIDE_LINES_X(state) {\r\n      for(let i=0; i<state.GUIDE_LINES_X.length; i++) {\r\n        state.GUIDE_LINES_X[i].remove();\r\n      }\r\n\r\n      state.GUIDE_LINES_X = [];\r\n    }\r\n  },\r\n  getters: {\r\n    clamp: () => (value, min, max) => {\r\n      if(value < min){\r\n        return min;\r\n      } else if(value > max) {\r\n        return max;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n})\r\n"]}]}