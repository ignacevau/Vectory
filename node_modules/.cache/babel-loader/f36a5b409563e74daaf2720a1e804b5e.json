{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\src\\store.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\store.js","mtime":1565099318778},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { bus, Layer, ShapeGroup } from '@/main.js';\nimport { project } from 'paper';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    ACTIVE_TOOL: 'select',\n    LAYER_ACTIVE: false,\n    TOOLSELECT: null,\n    TOOLPOINTER: null,\n    TOOLPEN: null,\n    TOOLCIRCLE: null,\n    TOOLSHAPEBUILDER: null,\n    TOOLLINE: null,\n    OBJECTS: [],\n    SELECTED: [],\n    ACTIONS: [],\n    // Window toggles\n    COLORPICKER_ACTIVE: false,\n    FILEDROPDOWN_ACTIVE: false,\n    // Tools settings\n    PEN_WIDTH: 1,\n    PEN_OPACITY: 1,\n    PEN_STROKECOLOR: 'black',\n    PEN_FILLCOLOR: 'transparent',\n    CIRCLE_WIDTH: 1,\n    CIRCLE_OPACITY: 1,\n    CIRCLE_STROKECOLOR: 'black',\n    CIRCLE_FILLCOLOR: 'transparent',\n    LINE_WIDTH: 1,\n    LINE_OPACITY: 1,\n    LINE_STROKECOLOR: 'black',\n    // General\n    LAYERS: [],\n    LAYER_INDEX: 0,\n    SELECTED_LAYER_INDEX: 0\n  },\n  mutations: {\n    // --- Tools ---\n    SET_ACTIVE: function SET_ACTIVE(state, type) {\n      var old = state.ACTIVE_TOOL;\n      state.ACTIVE_TOOL = type;\n\n      if (old == \"select\" && type != \"select\") {\n        bus.$emit(\"deactivate-select\");\n      }\n\n      if (old == \"pointer\" && type != \"pointer\") {\n        bus.$emit(\"deactivate-pointer\");\n      }\n    },\n    SET_LAYER_ACTIVE: function SET_LAYER_ACTIVE(state, value) {\n      state.LAYER_ACTIVE = value;\n    },\n    SET_TOOLSELECT: function SET_TOOLSELECT(state, tool) {\n      state.TOOLSELECT = tool;\n    },\n    SET_TOOLPOINTER: function SET_TOOLPOINTER(state, tool) {\n      state.TOOLPOINTER = tool;\n    },\n    SET_TOOLPEN: function SET_TOOLPEN(state, tool) {\n      state.TOOLPEN = tool;\n    },\n    SET_TOOLCIRCLE: function SET_TOOLCIRCLE(state, tool) {\n      state.TOOLCIRCLE = tool;\n    },\n    SET_TOOLSHAPEBUILDER: function SET_TOOLSHAPEBUILDER(state, tool) {\n      state.TOOLSHAPEBUILDER = tool;\n    },\n    SET_TOOLLINE: function SET_TOOLLINE(state, tool) {\n      state.TOOLLINE = tool;\n    },\n    // --- Shapes ---\n    ADD_SHAPE: function ADD_SHAPE(state, shape) {\n      state.OBJECTS.push(shape);\n    },\n    // --- Selection ---\n    ADD_SELECT: function ADD_SELECT(state, shape) {\n      state.SELECTED.push(shape);\n    },\n    CLEAR_SELECT: function CLEAR_SELECT(state) {\n      state.SELECTED = [];\n    },\n    DELETE_SHAPES: function DELETE_SHAPES(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : state.SELECTED;\n\n      // Count from end to begin to allow pop()\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        // Destroy the shape (it's still in the objects and the selection array)\n        shapes[i].remove(); // Find the shape in the objects array\n\n        var index = state.OBJECTS.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it\n\n        state.OBJECTS.splice(index, 1); // Remove the shape from the selection array\n\n        shapes.pop();\n      }\n    },\n    DISCARD_SHAPES: function DISCARD_SHAPES(state) {\n      var shapes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _toConsumableArray(state.SELECTED);\n\n      // Count from end to begin to allow pop()\n      for (var i = shapes.length - 1; i >= 0; i--) {\n        // Find the shape in the objects array\n        var index = state.OBJECTS.findIndex(function (x) {\n          return x === shapes[i];\n        }); // Remove it\n\n        state.OBJECTS.splice(index, 1); // Remove the shape from the selection array\n\n        shapes.pop();\n      }\n    },\n    SELECTION_SET_STROKECOLOR: function SELECTION_SET_STROKECOLOR(state, value) {\n      bus.$emit('set_color_stroke', value);\n    },\n    SELECTION_SET_FILLCOLOR: function SELECTION_SET_FILLCOLOR(state, value) {\n      bus.$emit('set_color_fill', value);\n    },\n    PEN_SET_WIDTH: function PEN_SET_WIDTH(state, value) {\n      state.PEN_WIDTH = value;\n    },\n    PEN_SET_OPACITY: function PEN_SET_OPACITY(state, value) {\n      state.PEN_OPACITY = value;\n    },\n    PEN_SET_STROKECOLOR: function PEN_SET_STROKECOLOR(state, value) {\n      state.PEN_STROKECOLOR = value;\n    },\n    PEN_SET_FILLCOLOR: function PEN_SET_FILLCOLOR(state, value) {\n      state.PEN_FILLCOLOR = value;\n    },\n    CIRCLE_SET_WIDTH: function CIRCLE_SET_WIDTH(state, value) {\n      state.CIRCLE_WIDTH = value;\n    },\n    CIRCLE_SET_OPACITY: function CIRCLE_SET_OPACITY(state, value) {\n      state.CIRCLE_OPACITY = value;\n    },\n    CIRCLE_SET_STROKECOLOR: function CIRCLE_SET_STROKECOLOR(state, value) {\n      state.CIRCLE_STROKECOLOR = value;\n    },\n    CIRCLE_SET_FILLCOLOR: function CIRCLE_SET_FILLCOLOR(state, value) {\n      state.CIRCLE_FILLCOLOR = value;\n    },\n    LINE_SET_WIDTH: function LINE_SET_WIDTH(state, value) {\n      state.LINE_WIDTH = value;\n    },\n    LINE_SET_OPACITY: function LINE_SET_OPACITY(state, value) {\n      state.LINE_OPACITY = value;\n    },\n    LINE_SET_STROKECOLOR: function LINE_SET_STROKECOLOR(state, value) {\n      state.LINE_STROKECOLOR = value;\n    },\n    // Add an action to the undo list\n    ADD_ACTION: function ADD_ACTION(state, action) {\n      state.ACTIONS.push(action);\n    },\n    UNDO: function UNDO(state) {\n      if (state.ACTIONS.length <= 0) {\n        return;\n      }\n\n      var action = state.ACTIONS.pop();\n\n      switch (action.type) {\n        case 'move':\n          var delta = action.data.startPos.subtract(action.data.endPos);\n\n          for (var i = 0; i < action.data.paths.length; i++) {\n            action.data.paths[i].translate(delta);\n          }\n\n          state.SELECTED = action.data.paths;\n          break;\n\n        case 'scale':\n          var pivot = action.data.pivot;\n          var init = action.data.handle_init;\n          var end = action.data.handle_end;\n          var relH = 1;\n          var relW = 1;\n\n          if (!action.data.lockY) {\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\n          }\n\n          if (!action.data.lockX) {\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\n          }\n\n          if (action.data.shift) {\n            if (action.data.lockY) {\n              relH = relW;\n            } else if (action.data.lockX) {\n              relW = relH;\n            }\n          }\n\n          for (var i = 0; i < action.data.paths.length; i++) {\n            action.data.paths[i].scale(relW, relH, pivot);\n          }\n\n          state.SELECTED = action.data.paths;\n          break;\n      }\n    },\n    // Toggle windows\n    HIDE_COLORPICKER: function HIDE_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = false;\n    },\n    SHOW_COLORPICKER: function SHOW_COLORPICKER(state) {\n      state.COLORPICKER_ACTIVE = true;\n    },\n    TRIGGER_FILEDROPDOWN: function TRIGGER_FILEDROPDOWN(state) {\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\n    },\n    //Layers\n    ADD_LAYER: function ADD_LAYER(state) {\n      state.LAYER_INDEX++;\n\n      var _newLayer = new Layer(state.LAYER_INDEX, \"Layer \" + state.LAYER_INDEX);\n\n      state.LAYERS.push(_newLayer);\n      state.SELECTED_LAYER_INDEX = state.LAYERS.length - 1;\n      bus.$emit('add-layer');\n    },\n    SELECT_LAYER: function SELECT_LAYER(state, index) {\n      state.SELECTED_LAYER_INDEX = index;\n      bus.$emit('update-active-layer', index);\n    },\n    REMOVE_LAYER: function REMOVE_LAYER(state) {\n      state.LAYERS.splice(state.SELECTED_LAYER_INDEX, 1);\n      state.SELECTED_LAYER_INDEX = state.SELECTED_LAYER_INDEX == 0 ? 0 : state.SELECTED_LAYER_INDEX - 1;\n      state.SELECTED = [];\n      bus.$emit('hide-transformbox');\n      bus.$emit('remove-layer');\n    }\n  },\n  getters: {\n    clamp: function clamp() {\n      return function (value, min, max) {\n        if (value < min) {\n          return min;\n        } else if (value > max) {\n          return max;\n        }\n\n        return value;\n      };\n    },\n    SELECTED_UNGROUPED: function SELECTED_UNGROUPED(state) {}\n  }\n});",{"version":3,"sources":["D:\\GitHub\\Vectory\\src\\store.js"],"names":["Vue","Vuex","bus","Layer","ShapeGroup","project","use","Store","state","ACTIVE_TOOL","LAYER_ACTIVE","TOOLSELECT","TOOLPOINTER","TOOLPEN","TOOLCIRCLE","TOOLSHAPEBUILDER","TOOLLINE","OBJECTS","SELECTED","ACTIONS","COLORPICKER_ACTIVE","FILEDROPDOWN_ACTIVE","PEN_WIDTH","PEN_OPACITY","PEN_STROKECOLOR","PEN_FILLCOLOR","CIRCLE_WIDTH","CIRCLE_OPACITY","CIRCLE_STROKECOLOR","CIRCLE_FILLCOLOR","LINE_WIDTH","LINE_OPACITY","LINE_STROKECOLOR","LAYERS","LAYER_INDEX","SELECTED_LAYER_INDEX","mutations","SET_ACTIVE","type","old","$emit","SET_LAYER_ACTIVE","value","SET_TOOLSELECT","tool","SET_TOOLPOINTER","SET_TOOLPEN","SET_TOOLCIRCLE","SET_TOOLSHAPEBUILDER","SET_TOOLLINE","ADD_SHAPE","shape","push","ADD_SELECT","CLEAR_SELECT","DELETE_SHAPES","shapes","i","length","remove","index","findIndex","x","splice","pop","DISCARD_SHAPES","SELECTION_SET_STROKECOLOR","SELECTION_SET_FILLCOLOR","PEN_SET_WIDTH","PEN_SET_OPACITY","PEN_SET_STROKECOLOR","PEN_SET_FILLCOLOR","CIRCLE_SET_WIDTH","CIRCLE_SET_OPACITY","CIRCLE_SET_STROKECOLOR","CIRCLE_SET_FILLCOLOR","LINE_SET_WIDTH","LINE_SET_OPACITY","LINE_SET_STROKECOLOR","ADD_ACTION","action","UNDO","delta","data","startPos","subtract","endPos","paths","translate","pivot","init","handle_init","end","handle_end","relH","relW","lockY","y","lockX","shift","scale","HIDE_COLORPICKER","SHOW_COLORPICKER","TRIGGER_FILEDROPDOWN","ADD_LAYER","_newLayer","SELECT_LAYER","REMOVE_LAYER","getters","clamp","min","max","SELECTED_UNGROUPED"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,WAAvC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEAL,GAAG,CAACM,GAAJ,CAAQL,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACM,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,QADR;AAGLC,IAAAA,YAAY,EAAE,KAHT;AAKLC,IAAAA,UAAU,EAAE,IALP;AAMLC,IAAAA,WAAW,EAAE,IANR;AAOLC,IAAAA,OAAO,EAAE,IAPJ;AAQLC,IAAAA,UAAU,EAAE,IARP;AASLC,IAAAA,gBAAgB,EAAE,IATb;AAULC,IAAAA,QAAQ,EAAE,IAVL;AAYLC,IAAAA,OAAO,EAAE,EAZJ;AAaLC,IAAAA,QAAQ,EAAE,EAbL;AAeLC,IAAAA,OAAO,EAAE,EAfJ;AAiBL;AACAC,IAAAA,kBAAkB,EAAE,KAlBf;AAmBLC,IAAAA,mBAAmB,EAAE,KAnBhB;AAsBL;AACAC,IAAAA,SAAS,EAAE,CAvBN;AAwBLC,IAAAA,WAAW,EAAE,CAxBR;AAyBLC,IAAAA,eAAe,EAAE,OAzBZ;AA0BLC,IAAAA,aAAa,EAAE,aA1BV;AA4BLC,IAAAA,YAAY,EAAE,CA5BT;AA6BLC,IAAAA,cAAc,EAAE,CA7BX;AA8BLC,IAAAA,kBAAkB,EAAE,OA9Bf;AA+BLC,IAAAA,gBAAgB,EAAE,aA/Bb;AAiCLC,IAAAA,UAAU,EAAE,CAjCP;AAkCLC,IAAAA,YAAY,EAAE,CAlCT;AAmCLC,IAAAA,gBAAgB,EAAE,OAnCb;AAqCL;AACAC,IAAAA,MAAM,EAAE,EAtCH;AAuCLC,IAAAA,WAAW,EAAE,CAvCR;AAwCLC,IAAAA,oBAAoB,EAAE;AAxCjB,GADqB;AA2C5BC,EAAAA,SAAS,EAAE;AACT;AACAC,IAAAA,UAAU,EAAE,oBAAS7B,KAAT,EAAgB8B,IAAhB,EAAsB;AAChC,UAAIC,GAAG,GAAG/B,KAAK,CAACC,WAAhB;AACAD,MAAAA,KAAK,CAACC,WAAN,GAAoB6B,IAApB;;AAEA,UAAGC,GAAG,IAAI,QAAP,IAAmBD,IAAI,IAAI,QAA9B,EAAwC;AACtCpC,QAAAA,GAAG,CAACsC,KAAJ,CAAU,mBAAV;AACD;;AACD,UAAGD,GAAG,IAAI,SAAP,IAAoBD,IAAI,IAAI,SAA/B,EAA0C;AACxCpC,QAAAA,GAAG,CAACsC,KAAJ,CAAU,oBAAV;AACD;AACF,KAZQ;AAcTC,IAAAA,gBAAgB,EAAE,0BAASjC,KAAT,EAAgBkC,KAAhB,EAAuB;AACvClC,MAAAA,KAAK,CAACE,YAAN,GAAqBgC,KAArB;AACD,KAhBQ;AAkBTC,IAAAA,cAAc,EAAE,wBAACnC,KAAD,EAAQoC,IAAR,EAAiB;AAC/BpC,MAAAA,KAAK,CAACG,UAAN,GAAmBiC,IAAnB;AACD,KApBQ;AAqBTC,IAAAA,eAAe,EAAE,yBAACrC,KAAD,EAAQoC,IAAR,EAAiB;AAChCpC,MAAAA,KAAK,CAACI,WAAN,GAAoBgC,IAApB;AACD,KAvBQ;AAwBTE,IAAAA,WAAW,EAAE,qBAACtC,KAAD,EAAQoC,IAAR,EAAiB;AAC5BpC,MAAAA,KAAK,CAACK,OAAN,GAAgB+B,IAAhB;AACD,KA1BQ;AA2BTG,IAAAA,cAAc,EAAE,wBAACvC,KAAD,EAAQoC,IAAR,EAAiB;AAC/BpC,MAAAA,KAAK,CAACM,UAAN,GAAmB8B,IAAnB;AACD,KA7BQ;AA8BTI,IAAAA,oBAAoB,EAAE,8BAACxC,KAAD,EAAQoC,IAAR,EAAiB;AACrCpC,MAAAA,KAAK,CAACO,gBAAN,GAAyB6B,IAAzB;AACD,KAhCQ;AAiCTK,IAAAA,YAAY,EAAE,sBAACzC,KAAD,EAAQoC,IAAR,EAAiB;AAC7BpC,MAAAA,KAAK,CAACQ,QAAN,GAAiB4B,IAAjB;AACD,KAnCQ;AAqCT;AACAM,IAAAA,SAAS,EAAE,mBAAC1C,KAAD,EAAQ2C,KAAR,EAAkB;AAC3B3C,MAAAA,KAAK,CAACS,OAAN,CAAcmC,IAAd,CAAmBD,KAAnB;AACD,KAxCQ;AA0CT;AACAE,IAAAA,UAAU,EAAE,oBAAC7C,KAAD,EAAQ2C,KAAR,EAAkB;AAC5B3C,MAAAA,KAAK,CAACU,QAAN,CAAekC,IAAf,CAAoBD,KAApB;AACD,KA7CQ;AA8CTG,IAAAA,YAAY,EAAE,sBAAC9C,KAAD,EAAW;AACrBA,MAAAA,KAAK,CAACU,QAAN,GAAiB,EAAjB;AACH,KAhDQ;AAiDTqC,IAAAA,aAAa,EAAE,uBAAC/C,KAAD,EAAkC;AAAA,UAA1BgD,MAA0B,uEAAnBhD,KAAK,CAACU,QAAa;;AAC/C;AACA,WAAI,IAAIuC,CAAC,GAACD,MAAM,CAACE,MAAP,GAAc,CAAxB,EAA2BD,CAAC,IAAE,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC;AACAD,QAAAA,MAAM,CAACC,CAAD,CAAN,CAAUE,MAAV,GAFoC,CAIpC;;AACA,YAAIC,KAAK,GAAGpD,KAAK,CAACS,OAAN,CAAc4C,SAAd,CAAwB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,KAAKN,MAAM,CAACC,CAAD,CAAhB;AAAA,SAAzB,CAAZ,CALoC,CAMpC;;AACAjD,QAAAA,KAAK,CAACS,OAAN,CAAc8C,MAAd,CAAqBH,KAArB,EAA4B,CAA5B,EAPoC,CASpC;;AACAJ,QAAAA,MAAM,CAACQ,GAAP;AACD;AACF,KA/DQ;AAgETC,IAAAA,cAhES,0BAgEMzD,KAhEN,EAgEyC;AAAA,UAA5BgD,MAA4B,0FAAjBhD,KAAK,CAACU,QAAW;;AAChD;AACA,WAAI,IAAIuC,CAAC,GAACD,MAAM,CAACE,MAAP,GAAc,CAAxB,EAA2BD,CAAC,IAAE,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC;AACA,YAAIG,KAAK,GAAGpD,KAAK,CAACS,OAAN,CAAc4C,SAAd,CAAwB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,KAAKN,MAAM,CAACC,CAAD,CAAhB;AAAA,SAAzB,CAAZ,CAFoC,CAGpC;;AACAjD,QAAAA,KAAK,CAACS,OAAN,CAAc8C,MAAd,CAAqBH,KAArB,EAA4B,CAA5B,EAJoC,CAMpC;;AACAJ,QAAAA,MAAM,CAACQ,GAAP;AACD;AACF,KA3EQ;AA6ETE,IAAAA,yBA7ES,qCA6EiB1D,KA7EjB,EA6EwBkC,KA7ExB,EA6E+B;AACtCxC,MAAAA,GAAG,CAACsC,KAAJ,CAAU,kBAAV,EAA8BE,KAA9B;AACD,KA/EQ;AAgFTyB,IAAAA,uBAhFS,mCAgFe3D,KAhFf,EAgFsBkC,KAhFtB,EAgF6B;AACpCxC,MAAAA,GAAG,CAACsC,KAAJ,CAAU,gBAAV,EAA4BE,KAA5B;AACD,KAlFQ;AAoFT0B,IAAAA,aApFS,yBAoFK5D,KApFL,EAoFYkC,KApFZ,EAoFmB;AAC1BlC,MAAAA,KAAK,CAACc,SAAN,GAAkBoB,KAAlB;AACD,KAtFQ;AAuFT2B,IAAAA,eAvFS,2BAuFO7D,KAvFP,EAuFckC,KAvFd,EAuFqB;AAC5BlC,MAAAA,KAAK,CAACe,WAAN,GAAoBmB,KAApB;AACD,KAzFQ;AA0FT4B,IAAAA,mBA1FS,+BA0FW9D,KA1FX,EA0FkBkC,KA1FlB,EA0FyB;AAChClC,MAAAA,KAAK,CAACgB,eAAN,GAAwBkB,KAAxB;AACD,KA5FQ;AA6FT6B,IAAAA,iBA7FS,6BA6FS/D,KA7FT,EA6FgBkC,KA7FhB,EA6FuB;AAC9BlC,MAAAA,KAAK,CAACiB,aAAN,GAAsBiB,KAAtB;AACD,KA/FQ;AAiGT8B,IAAAA,gBAjGS,4BAiGQhE,KAjGR,EAiGekC,KAjGf,EAiGsB;AAC7BlC,MAAAA,KAAK,CAACkB,YAAN,GAAqBgB,KAArB;AACD,KAnGQ;AAoGT+B,IAAAA,kBApGS,8BAoGUjE,KApGV,EAoGiBkC,KApGjB,EAoGwB;AAC/BlC,MAAAA,KAAK,CAACmB,cAAN,GAAuBe,KAAvB;AACD,KAtGQ;AAuGTgC,IAAAA,sBAvGS,kCAuGclE,KAvGd,EAuGqBkC,KAvGrB,EAuG4B;AACnClC,MAAAA,KAAK,CAACoB,kBAAN,GAA2Bc,KAA3B;AACD,KAzGQ;AA0GTiC,IAAAA,oBA1GS,gCA0GYnE,KA1GZ,EA0GmBkC,KA1GnB,EA0G0B;AACjClC,MAAAA,KAAK,CAACqB,gBAAN,GAAyBa,KAAzB;AACD,KA5GQ;AA8GTkC,IAAAA,cA9GS,0BA8GMpE,KA9GN,EA8GakC,KA9Gb,EA8GoB;AAC3BlC,MAAAA,KAAK,CAACsB,UAAN,GAAmBY,KAAnB;AACD,KAhHQ;AAiHTmC,IAAAA,gBAjHS,4BAiHQrE,KAjHR,EAiHekC,KAjHf,EAiHsB;AAC7BlC,MAAAA,KAAK,CAACuB,YAAN,GAAqBW,KAArB;AACD,KAnHQ;AAoHToC,IAAAA,oBApHS,gCAoHYtE,KApHZ,EAoHmBkC,KApHnB,EAoH0B;AACjClC,MAAAA,KAAK,CAACwB,gBAAN,GAAyBU,KAAzB;AACD,KAtHQ;AAwHT;AACAqC,IAAAA,UAzHS,sBAyHEvE,KAzHF,EAyHSwE,MAzHT,EAyHiB;AACxBxE,MAAAA,KAAK,CAACW,OAAN,CAAciC,IAAd,CAAmB4B,MAAnB;AACD,KA3HQ;AA4HTC,IAAAA,IA5HS,gBA4HJzE,KA5HI,EA4HG;AACV,UAAGA,KAAK,CAACW,OAAN,CAAcuC,MAAd,IAAwB,CAA3B,EAA8B;AAC5B;AACD;;AACD,UAAIsB,MAAM,GAAGxE,KAAK,CAACW,OAAN,CAAc6C,GAAd,EAAb;;AAEA,cAAOgB,MAAM,CAAC1C,IAAd;AACE,aAAK,MAAL;AACE,cAAI4C,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BL,MAAM,CAACG,IAAP,CAAYG,MAA1C,CAAZ;;AAEA,eAAI,IAAI7B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACuB,MAAM,CAACG,IAAP,CAAYI,KAAZ,CAAkB7B,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CuB,YAAAA,MAAM,CAACG,IAAP,CAAYI,KAAZ,CAAkB9B,CAAlB,EAAqB+B,SAArB,CAA+BN,KAA/B;AACD;;AAED1E,UAAAA,KAAK,CAACU,QAAN,GAAiB8D,MAAM,CAACG,IAAP,CAAYI,KAA7B;AACA;;AAEF,aAAK,OAAL;AACE,cAAIE,KAAK,GAAGT,MAAM,CAACG,IAAP,CAAYM,KAAxB;AACA,cAAIC,IAAI,GAAGV,MAAM,CAACG,IAAP,CAAYQ,WAAvB;AACA,cAAIC,GAAG,GAAGZ,MAAM,CAACG,IAAP,CAAYU,UAAtB;AAEA,cAAIC,IAAI,GAAG,CAAX;AACA,cAAIC,IAAI,GAAG,CAAX;;AAEA,cAAG,CAACf,MAAM,CAACG,IAAP,CAAYa,KAAhB,EAAuB;AACrBF,YAAAA,IAAI,GAAGJ,IAAI,CAACL,QAAL,CAAcI,KAAd,EAAqBQ,CAArB,GAAyBL,GAAG,CAACP,QAAJ,CAAaI,KAAb,EAAoBQ,CAApD;AACD;;AACD,cAAI,CAACjB,MAAM,CAACG,IAAP,CAAYe,KAAjB,EAAwB;AACtBH,YAAAA,IAAI,GAAGL,IAAI,CAACL,QAAL,CAAcI,KAAd,EAAqB3B,CAArB,GAAyB8B,GAAG,CAACP,QAAJ,CAAaI,KAAb,EAAoB3B,CAApD;AACD;;AAED,cAAGkB,MAAM,CAACG,IAAP,CAAYgB,KAAf,EAAsB;AACpB,gBAAGnB,MAAM,CAACG,IAAP,CAAYa,KAAf,EAAsB;AACpBF,cAAAA,IAAI,GAAGC,IAAP;AACD,aAFD,MAGK,IAAGf,MAAM,CAACG,IAAP,CAAYe,KAAf,EAAsB;AACzBH,cAAAA,IAAI,GAAGD,IAAP;AACD;AACF;;AAED,eAAI,IAAIrC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACuB,MAAM,CAACG,IAAP,CAAYI,KAAZ,CAAkB7B,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CuB,YAAAA,MAAM,CAACG,IAAP,CAAYI,KAAZ,CAAkB9B,CAAlB,EAAqB2C,KAArB,CAA2BL,IAA3B,EAAiCD,IAAjC,EAAuCL,KAAvC;AACD;;AAEDjF,UAAAA,KAAK,CAACU,QAAN,GAAiB8D,MAAM,CAACG,IAAP,CAAYI,KAA7B;AACA;AAxCJ;AA0CD,KA5KQ;AA+KT;AACAc,IAAAA,gBAhLS,4BAgLQ7F,KAhLR,EAgLe;AACtBA,MAAAA,KAAK,CAACY,kBAAN,GAA2B,KAA3B;AACD,KAlLQ;AAmLTkF,IAAAA,gBAnLS,4BAmLQ9F,KAnLR,EAmLe;AACtBA,MAAAA,KAAK,CAACY,kBAAN,GAA2B,IAA3B;AACD,KArLQ;AAsLTmF,IAAAA,oBAtLS,gCAsLY/F,KAtLZ,EAsLmB;AAC1BA,MAAAA,KAAK,CAACa,mBAAN,GAA4B,CAACb,KAAK,CAACa,mBAAnC;AACD,KAxLQ;AA0LT;AACAmF,IAAAA,SA3LS,qBA2LChG,KA3LD,EA2LQ;AACfA,MAAAA,KAAK,CAAC0B,WAAN;;AACA,UAAIuE,SAAS,GAAG,IAAItG,KAAJ,CAAUK,KAAK,CAAC0B,WAAhB,EAA6B,WAAW1B,KAAK,CAAC0B,WAA9C,CAAhB;;AACA1B,MAAAA,KAAK,CAACyB,MAAN,CAAamB,IAAb,CAAkBqD,SAAlB;AACAjG,MAAAA,KAAK,CAAC2B,oBAAN,GAA6B3B,KAAK,CAACyB,MAAN,CAAayB,MAAb,GAAoB,CAAjD;AAEAxD,MAAAA,GAAG,CAACsC,KAAJ,CAAU,WAAV;AACD,KAlMQ;AAmMTkE,IAAAA,YAnMS,wBAmMIlG,KAnMJ,EAmMWoD,KAnMX,EAmMkB;AACzBpD,MAAAA,KAAK,CAAC2B,oBAAN,GAA6ByB,KAA7B;AAEA1D,MAAAA,GAAG,CAACsC,KAAJ,CAAU,qBAAV,EAAiCoB,KAAjC;AACD,KAvMQ;AAwMT+C,IAAAA,YAxMS,wBAwMInG,KAxMJ,EAwMW;AAClBA,MAAAA,KAAK,CAACyB,MAAN,CAAa8B,MAAb,CAAoBvD,KAAK,CAAC2B,oBAA1B,EAAgD,CAAhD;AACA3B,MAAAA,KAAK,CAAC2B,oBAAN,GAA6B3B,KAAK,CAAC2B,oBAAN,IAA8B,CAA9B,GAAkC,CAAlC,GAAsC3B,KAAK,CAAC2B,oBAAN,GAA2B,CAA9F;AACA3B,MAAAA,KAAK,CAACU,QAAN,GAAiB,EAAjB;AAEAhB,MAAAA,GAAG,CAACsC,KAAJ,CAAU,mBAAV;AACAtC,MAAAA,GAAG,CAACsC,KAAJ,CAAU,cAAV;AACD;AA/MQ,GA3CiB;AA4P5BoE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AAAA,aAAM,UAACnE,KAAD,EAAQoE,GAAR,EAAaC,GAAb,EAAqB;AAChC,YAAGrE,KAAK,GAAGoE,GAAX,EAAe;AACb,iBAAOA,GAAP;AACD,SAFD,MAEO,IAAGpE,KAAK,GAAGqE,GAAX,EAAe;AACpB,iBAAOA,GAAP;AACD;;AACD,eAAOrE,KAAP;AACD,OAPM;AAAA,KADA;AASPsE,IAAAA,kBAAkB,EAAE,4BAACxG,KAAD,EAAW,CAE9B;AAXM;AA5PmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { bus, Layer, ShapeGroup } from '@/main.js'\r\nimport { project } from 'paper';\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    ACTIVE_TOOL: 'select',\r\n\r\n    LAYER_ACTIVE: false,\r\n\r\n    TOOLSELECT: null,\r\n    TOOLPOINTER: null,\r\n    TOOLPEN: null,\r\n    TOOLCIRCLE: null,\r\n    TOOLSHAPEBUILDER: null,\r\n    TOOLLINE: null,\r\n\r\n    OBJECTS: [],\r\n    SELECTED: [],\r\n\r\n    ACTIONS: [],\r\n\r\n    // Window toggles\r\n    COLORPICKER_ACTIVE: false,\r\n    FILEDROPDOWN_ACTIVE: false,\r\n\r\n\r\n    // Tools settings\r\n    PEN_WIDTH: 1,\r\n    PEN_OPACITY: 1,\r\n    PEN_STROKECOLOR: 'black',\r\n    PEN_FILLCOLOR: 'transparent',\r\n\r\n    CIRCLE_WIDTH: 1,\r\n    CIRCLE_OPACITY: 1,\r\n    CIRCLE_STROKECOLOR: 'black',\r\n    CIRCLE_FILLCOLOR: 'transparent',\r\n\r\n    LINE_WIDTH: 1,\r\n    LINE_OPACITY: 1,\r\n    LINE_STROKECOLOR: 'black',\r\n\r\n    // General\r\n    LAYERS: [],\r\n    LAYER_INDEX: 0,\r\n    SELECTED_LAYER_INDEX: 0\r\n  },\r\n  mutations: {\r\n    // --- Tools ---\r\n    SET_ACTIVE: function(state, type) {\r\n      var old = state.ACTIVE_TOOL\r\n      state.ACTIVE_TOOL = type;\r\n\r\n      if(old == \"select\" && type != \"select\") {\r\n        bus.$emit(\"deactivate-select\");\r\n      }\r\n      if(old == \"pointer\" && type != \"pointer\") {\r\n        bus.$emit(\"deactivate-pointer\")\r\n      }\r\n    },\r\n\r\n    SET_LAYER_ACTIVE: function(state, value) {\r\n      state.LAYER_ACTIVE = value;\r\n    },\r\n\r\n    SET_TOOLSELECT: (state, tool) => {\r\n      state.TOOLSELECT = tool;\r\n    },\r\n    SET_TOOLPOINTER: (state, tool) => {\r\n      state.TOOLPOINTER = tool;\r\n    },\r\n    SET_TOOLPEN: (state, tool) => {\r\n      state.TOOLPEN = tool;\r\n    },\r\n    SET_TOOLCIRCLE: (state, tool) => {\r\n      state.TOOLCIRCLE = tool;\r\n    },\r\n    SET_TOOLSHAPEBUILDER: (state, tool) => {\r\n      state.TOOLSHAPEBUILDER = tool\r\n    },\r\n    SET_TOOLLINE: (state, tool) => {\r\n      state.TOOLLINE = tool\r\n    },\r\n\r\n    // --- Shapes ---\r\n    ADD_SHAPE: (state, shape) => {\r\n      state.OBJECTS.push(shape);\r\n    },\r\n\r\n    // --- Selection ---\r\n    ADD_SELECT: (state, shape) => {\r\n      state.SELECTED.push(shape);\r\n    },\r\n    CLEAR_SELECT: (state) => {\r\n        state.SELECTED = [];\r\n    },\r\n    DELETE_SHAPES: (state, shapes=state.SELECTED) => {\r\n      // Count from end to begin to allow pop()\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        // Destroy the shape (it's still in the objects and the selection array)\r\n        shapes[i].remove();\r\n\r\n        // Find the shape in the objects array\r\n        var index = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Remove it\r\n        state.OBJECTS.splice(index, 1);\r\n\r\n        // Remove the shape from the selection array\r\n        shapes.pop();\r\n      }\r\n    },\r\n    DISCARD_SHAPES(state, shapes=[...state.SELECTED]) {\r\n      // Count from end to begin to allow pop()\r\n      for(var i=shapes.length-1; i>=0; i--) {\r\n        // Find the shape in the objects array\r\n        var index = state.OBJECTS.findIndex(x => x === shapes[i]);\r\n        // Remove it\r\n        state.OBJECTS.splice(index, 1);\r\n\r\n        // Remove the shape from the selection array\r\n        shapes.pop();\r\n      }\r\n    },\r\n\r\n    SELECTION_SET_STROKECOLOR(state, value) {\r\n      bus.$emit('set_color_stroke', value)\r\n    },\r\n    SELECTION_SET_FILLCOLOR(state, value) {\r\n      bus.$emit('set_color_fill', value)\r\n    },\r\n\r\n    PEN_SET_WIDTH(state, value) {\r\n      state.PEN_WIDTH = value\r\n    },\r\n    PEN_SET_OPACITY(state, value) {\r\n      state.PEN_OPACITY = value\r\n    },\r\n    PEN_SET_STROKECOLOR(state, value) {\r\n      state.PEN_STROKECOLOR = value\r\n    },\r\n    PEN_SET_FILLCOLOR(state, value) {\r\n      state.PEN_FILLCOLOR = value\r\n    },\r\n\r\n    CIRCLE_SET_WIDTH(state, value) {\r\n      state.CIRCLE_WIDTH = value\r\n    },\r\n    CIRCLE_SET_OPACITY(state, value) {\r\n      state.CIRCLE_OPACITY = value\r\n    },\r\n    CIRCLE_SET_STROKECOLOR(state, value) {\r\n      state.CIRCLE_STROKECOLOR = value\r\n    },\r\n    CIRCLE_SET_FILLCOLOR(state, value) {\r\n      state.CIRCLE_FILLCOLOR = value\r\n    },\r\n\r\n    LINE_SET_WIDTH(state, value) {\r\n      state.LINE_WIDTH = value\r\n    },\r\n    LINE_SET_OPACITY(state, value) {\r\n      state.LINE_OPACITY = value\r\n    },\r\n    LINE_SET_STROKECOLOR(state, value) {\r\n      state.LINE_STROKECOLOR = value\r\n    },\r\n\r\n    // Add an action to the undo list\r\n    ADD_ACTION(state, action) {\r\n      state.ACTIONS.push(action);\r\n    },\r\n    UNDO(state) {\r\n      if(state.ACTIONS.length <= 0) {\r\n        return;\r\n      }\r\n      var action = state.ACTIONS.pop();\r\n      \r\n      switch(action.type) {\r\n        case 'move':\r\n          var delta = action.data.startPos.subtract(action.data.endPos);\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].translate(delta);\r\n          }\r\n\r\n          state.SELECTED = action.data.paths;\r\n          break;\r\n\r\n        case 'scale':\r\n          var pivot = action.data.pivot;\r\n          var init = action.data.handle_init;\r\n          var end = action.data.handle_end;\r\n\r\n          var relH = 1;\r\n          var relW = 1;\r\n\r\n          if(!action.data.lockY) {\r\n            relH = init.subtract(pivot).y / end.subtract(pivot).y;\r\n          }\r\n          if (!action.data.lockX) {\r\n            relW = init.subtract(pivot).x / end.subtract(pivot).x;\r\n          }\r\n\r\n          if(action.data.shift) {\r\n            if(action.data.lockY) {\r\n              relH = relW;\r\n            }\r\n            else if(action.data.lockX) {\r\n              relW = relH;\r\n            }\r\n          }\r\n\r\n          for(var i=0; i<action.data.paths.length; i++) {\r\n            action.data.paths[i].scale(relW, relH, pivot);\r\n          }\r\n\r\n          state.SELECTED = action.data.paths;\r\n          break;\r\n      }\r\n    },\r\n\r\n\r\n    // Toggle windows\r\n    HIDE_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = false\r\n    },\r\n    SHOW_COLORPICKER(state) {\r\n      state.COLORPICKER_ACTIVE = true\r\n    },\r\n    TRIGGER_FILEDROPDOWN(state) {\r\n      state.FILEDROPDOWN_ACTIVE = !state.FILEDROPDOWN_ACTIVE;\r\n    },\r\n\r\n    //Layers\r\n    ADD_LAYER(state) {\r\n      state.LAYER_INDEX++;\r\n      var _newLayer = new Layer(state.LAYER_INDEX, \"Layer \" + state.LAYER_INDEX);\r\n      state.LAYERS.push(_newLayer);\r\n      state.SELECTED_LAYER_INDEX = state.LAYERS.length-1;\r\n\r\n      bus.$emit('add-layer');\r\n    },\r\n    SELECT_LAYER(state, index) {\r\n      state.SELECTED_LAYER_INDEX = index;\r\n\r\n      bus.$emit('update-active-layer', index);\r\n    },\r\n    REMOVE_LAYER(state) {\r\n      state.LAYERS.splice(state.SELECTED_LAYER_INDEX, 1);\r\n      state.SELECTED_LAYER_INDEX = state.SELECTED_LAYER_INDEX == 0 ? 0 : state.SELECTED_LAYER_INDEX-1;\r\n      state.SELECTED = [];\r\n\r\n      bus.$emit('hide-transformbox');\r\n      bus.$emit('remove-layer');\r\n    }\r\n  },\r\n  getters: {\r\n    clamp: () => (value, min, max) => {\r\n      if(value < min){\r\n        return min;\r\n      } else if(value > max){\r\n        return max;\r\n      }\r\n      return value;\r\n    },\r\n    SELECTED_UNGROUPED: (state) => {\r\n\r\n    }\r\n  }\r\n})\r\n"]}]}