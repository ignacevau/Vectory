{"remainingRequest":"D:\\GitHub\\Vectory\\vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\vectory\\src\\libraries\\node\\canvas.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\vectory\\src\\libraries\\node\\canvas.js","mtime":1554538657088},{"path":"D:\\GitHub\\Vectory\\vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$defineProperty from \"D:\\\\GitHub\\\\Vectory\\\\vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/define-property\";\n\n/*\n * Paper.js - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n */\n// Add some useful extensions to HTMLCanvasElement:\n// - HTMLCanvasElement#type, so we can switch to a PDF canvas\n// - Various Node-Canvas methods, routed through from HTMLCanvasElement:\n//   toBuffer, pngStream, createPNGStream, jpegStream, createJPEGStream\nmodule.exports = function (self, requireName) {\n  var Canvas;\n\n  try {\n    Canvas = require('canvas');\n  } catch (error) {\n    // Remove `self.window`, so we still have the global `self` reference,\n    // but no `window` object:\n    // - On the browser, this corresponds to a worker context.\n    // - On Node.js, it basically means the canvas is missing or not working\n    //   which can be treated the same way.\n    delete self.window; // Check the required module's name to see if it contains canvas, and\n    // only complain about its lack if the module requires it.\n\n    if (/\\bcanvas\\b/.test(requireName)) {\n      throw new Error('Unable to load canvas module.');\n    }\n\n    return;\n  }\n\n  var HTMLCanvasElement = self.HTMLCanvasElement,\n      idlUtils = require('jsdom/lib/jsdom/living/generated/utils'); // Add fake HTMLCanvasElement#type property:\n\n\n  _Object$defineProperty(HTMLCanvasElement.prototype, 'type', {\n    get: function get() {\n      var canvas = idlUtils.implForWrapper(this)._canvas;\n\n      return canvas && canvas.type || 'image';\n    },\n    set: function set(type) {\n      // Allow replacement of internal node-canvas, so we can switch to a\n      // PDF canvas.\n      var impl = idlUtils.implForWrapper(this),\n          size = impl._canvas || impl;\n      impl._canvas = new Canvas(size.width, size.height, type);\n      impl._context = null;\n    }\n  }); // Extend HTMLCanvasElement with useful methods from the underlying Canvas:\n\n\n  var methods = ['toBuffer', 'pngStream', 'createPNGStream', 'jpegStream', 'createJPEGStream'];\n  methods.forEach(function (key) {\n    HTMLCanvasElement.prototype[key] = function () {\n      var canvas = idlUtils.implForWrapper(this)._canvas;\n\n      return canvas[key].apply(canvas, arguments);\n    };\n  });\n};",{"version":3,"sources":["D:\\GitHub\\Vectory\\vectory\\src\\libraries\\node\\canvas.js"],"names":["module","exports","self","requireName","Canvas","require","error","window","test","Error","HTMLCanvasElement","idlUtils","prototype","get","canvas","implForWrapper","_canvas","type","set","impl","size","width","height","_context","methods","forEach","key","apply","arguments"],"mappings":";;AAAA;;;;;;;;;;;AAYA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,WAAf,EAA4B;AACzC,MAAIC,MAAJ;;AACA,MAAI;AACAA,IAAAA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAhB;AACH,GAFD,CAEE,OAAMC,KAAN,EAAa;AACX;AACA;AACA;AACA;AACA;AACA,WAAOJ,IAAI,CAACK,MAAZ,CANW,CAOX;AACA;;AACA,QAAI,aAAaC,IAAb,CAAkBL,WAAlB,CAAJ,EAAoC;AAChC,YAAM,IAAIM,KAAJ,CAAU,+BAAV,CAAN;AACH;;AACD;AACH;;AAED,MAAIC,iBAAiB,GAAGR,IAAI,CAACQ,iBAA7B;AAAA,MACIC,QAAQ,GAAGN,OAAO,CAAC,wCAAD,CADtB,CAnByC,CAsBzC;;;AACA,yBAAsBK,iBAAiB,CAACE,SAAxC,EAAmD,MAAnD,EAA2D;AACvDC,IAAAA,GAAG,EAAE,eAAW;AACZ,UAAIC,MAAM,GAAGH,QAAQ,CAACI,cAAT,CAAwB,IAAxB,EAA8BC,OAA3C;;AACA,aAAOF,MAAM,IAAIA,MAAM,CAACG,IAAjB,IAAyB,OAAhC;AACH,KAJsD;AAMvDC,IAAAA,GAAG,EAAE,aAASD,IAAT,EAAe;AAChB;AACA;AACA,UAAIE,IAAI,GAAGR,QAAQ,CAACI,cAAT,CAAwB,IAAxB,CAAX;AAAA,UACIK,IAAI,GAAGD,IAAI,CAACH,OAAL,IAAgBG,IAD3B;AAEAA,MAAAA,IAAI,CAACH,OAAL,GAAe,IAAIZ,MAAJ,CAAWgB,IAAI,CAACC,KAAhB,EAAuBD,IAAI,CAACE,MAA5B,EAAoCL,IAApC,CAAf;AACAE,MAAAA,IAAI,CAACI,QAAL,GAAgB,IAAhB;AACH;AAbsD,GAA3D,EAvByC,CAuCzC;;;AACA,MAAIC,OAAO,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,iBAA1B,EAA6C,YAA7C,EACV,kBADU,CAAd;AAEAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAASC,GAAT,EAAc;AAC1BhB,IAAAA,iBAAiB,CAACE,SAAlB,CAA4Bc,GAA5B,IAAmC,YAAW;AAC1C,UAAIZ,MAAM,GAAGH,QAAQ,CAACI,cAAT,CAAwB,IAAxB,EAA8BC,OAA3C;;AACA,aAAOF,MAAM,CAACY,GAAD,CAAN,CAAYC,KAAZ,CAAkBb,MAAlB,EAA0Bc,SAA1B,CAAP;AACH,KAHD;AAIH,GALD;AAMH,CAhDD","sourcesContent":["/*\n * Paper.js - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n */\n\n// Add some useful extensions to HTMLCanvasElement:\n// - HTMLCanvasElement#type, so we can switch to a PDF canvas\n// - Various Node-Canvas methods, routed through from HTMLCanvasElement:\n//   toBuffer, pngStream, createPNGStream, jpegStream, createJPEGStream\n\nmodule.exports = function(self, requireName) {\n    var Canvas;\n    try {\n        Canvas = require('canvas');\n    } catch(error) {\n        // Remove `self.window`, so we still have the global `self` reference,\n        // but no `window` object:\n        // - On the browser, this corresponds to a worker context.\n        // - On Node.js, it basically means the canvas is missing or not working\n        //   which can be treated the same way.\n        delete self.window;\n        // Check the required module's name to see if it contains canvas, and\n        // only complain about its lack if the module requires it.\n        if (/\\bcanvas\\b/.test(requireName)) {\n            throw new Error('Unable to load canvas module.');\n        }\n        return;\n    }\n\n    var HTMLCanvasElement = self.HTMLCanvasElement,\n        idlUtils = require('jsdom/lib/jsdom/living/generated/utils');\n\n    // Add fake HTMLCanvasElement#type property:\n    Object.defineProperty(HTMLCanvasElement.prototype, 'type', {\n        get: function() {\n            var canvas = idlUtils.implForWrapper(this)._canvas;\n            return canvas && canvas.type || 'image';\n        },\n\n        set: function(type) {\n            // Allow replacement of internal node-canvas, so we can switch to a\n            // PDF canvas.\n            var impl = idlUtils.implForWrapper(this),\n                size = impl._canvas || impl;\n            impl._canvas = new Canvas(size.width, size.height, type);\n            impl._context = null;\n        }\n    });\n\n    // Extend HTMLCanvasElement with useful methods from the underlying Canvas:\n    var methods = ['toBuffer', 'pngStream', 'createPNGStream', 'jpegStream',\n        'createJPEGStream'];\n    methods.forEach(function(key) {\n        HTMLCanvasElement.prototype[key] = function() {\n            var canvas = idlUtils.implForWrapper(this)._canvas;\n            return canvas[key].apply(canvas, arguments);\n        };\n    });\n};\n"]}]}