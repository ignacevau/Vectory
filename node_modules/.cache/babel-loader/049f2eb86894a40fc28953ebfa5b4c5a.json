{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\ArtBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\ArtBoard.vue","mtime":1565012065045},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _objectSpread from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\nimport paper from \"paper\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { bus } from \"@/main.js\";\nimport { get } from \"http\";\nexport default {\n  name: \"ArtBoard\",\n  computed: _objectSpread({}, mapState([\"SELECTED_LAYER_INDEX\"])),\n  methods: _objectSpread({}, mapMutations([\"SET_TOOLSELECT\", \"SET_TOOLPOINTER\", \"SET_TOOLPEN\", \"SET_TOOLCIRCLE\", \"SET_TOOLSHAPEBUILDER\", \"SET_TOOLLINE\", \"DELETE_SHAPES\"])),\n  mounted: function mounted() {\n    var _this = this;\n\n    // Clamp prototype\n    Number.prototype.clamp = function (min, max) {\n      return Math.min(Math.max(this, min), max);\n    };\n\n    var canvas = document.querySelector(\"#canvas\"); //#region PaperJS setup\n\n    paper.install(window);\n    paper.setup(\"canvas\");\n    paper.settings.handleSize = 8;\n    paper.settings.hitTolerance = 7;\n    /*value updated with zoom*/\n\n    var view = paper.view;\n    var toolSelect = new Tool();\n    var toolPointer = new Tool();\n    var toolPen = new Tool();\n    var toolCircle = new Tool();\n    var toolShapebuilder = new Tool();\n    var toolLine = new Tool(); // Set global store references\n\n    this.SET_TOOLSELECT(toolSelect);\n    this.SET_TOOLPOINTER(toolPointer);\n    this.SET_TOOLPEN(toolPen);\n    this.SET_TOOLCIRCLE(toolCircle);\n    this.SET_TOOLSHAPEBUILDER(toolShapebuilder);\n    this.SET_TOOLLINE(toolLine); //\n    //#region Layers\n\n    var AddLayer = function AddLayer() {\n      var _newLayer = project.addLayer(new Layer());\n\n      _newLayer.activate();\n    };\n\n    var RemoveLayer = function RemoveLayer() {\n      for (var i = 0; i < project.activeLayer.children.length; i++) {\n        project.activeLayer.children[i].selectable = false;\n      }\n\n      project.activeLayer.remove();\n    };\n\n    var UpdateActiveLayer = function UpdateActiveLayer() {\n      project.layers[_this.SELECTED_LAYER_INDEX].activate();\n    };\n\n    bus.$on(\"add-layer\", function () {\n      AddLayer();\n    });\n    bus.$on(\"remove-layer\", function () {\n      RemoveLayer();\n    });\n    bus.$on(\"update-active-layer\", function () {\n      UpdateActiveLayer();\n    }); //\n    // Add first layer\n\n    AddLayer(); //#region Zoom\n\n    var zoomOffset = 0;\n\n    canvas.onwheel = function (e) {\n      bus.$emit(\"zoom\");\n      e.preventDefault();\n      var mousePos = new Point(e.clientX, e.clientY);\n      updateZoom(e.deltaY, mousePos);\n    };\n\n    function updateZoom(delta, mousePos) {\n      var mouseViewPos = view.viewToProject(mousePos);\n\n      var _changeZoomStable = changeZoomStable(view.zoom, delta, view.center, mouseViewPos);\n\n      var _changeZoomStable2 = _slicedToArray(_changeZoomStable, 2);\n\n      view.zoom = _changeZoomStable2[0];\n      zoomOffset = _changeZoomStable2[1];\n      view.center = view.center.add(zoomOffset);\n      view.draw(); // Pretty much hardcoded, this is to adjust the hitTolerance in respect to the zoom\n\n      settings.hitTolerance = (7 / view.zoom).clamp(0, 17);\n    }\n\n    function getNewZoom(oldZoom, delta) {\n      var factor = 1.05;\n\n      if (delta > 0) {\n        return oldZoom / factor;\n      } else if (delta < 0) {\n        return oldZoom * factor;\n      }\n    }\n\n    function changeZoomStable(oldZoom, delta, c, p) {\n      var newZoom = getNewZoom(oldZoom, delta).clamp(0.2, 10);\n      var beta = oldZoom / newZoom;\n      var pc = p.subtract(c);\n      var a = p.subtract(pc.multiply(beta)).subtract(c);\n      return [newZoom, a];\n    } //\n    //#region Key-Handling\n\n\n    var keys = {\n      del: false,\n      shift: false,\n      control: false,\n      z: false\n    };\n\n    var keyHandler = function keyHandler(e) {\n      if (!keys.del && e.code == \"Delete\" && !keys.control && !keys.shift) {\n        keys.del = true;\n\n        _this.DELETE_SHAPES(); // Let other components know (ToolSelect -> transform box must disappear)\n\n\n        bus.$emit(\"delete_selection\");\n      } else if (!keys.shift && e.code == \"ShiftLeft\") {\n        keys.shift = true;\n        bus.$emit(\"shift\");\n      } else if (!keys.control && e.code == \"ControlLeft\") {\n        keys.control = true;\n        bus.$emit(\"control\");\n      } else if (!keys.z && e.key == \"z\") {\n        keys.z = true;\n      }\n\n      if (keys.z && keys.control) {\n        bus.$emit(\"undo\");\n      }\n    }; // --- Key checks ---\n\n\n    document.onkeydown = keyHandler;\n\n    document.onkeyup = function (e) {\n      if (e.code == \"ControlLeft\") {\n        bus.$emit(\"control_up\");\n      }\n\n      if (e.key == \"z\") {\n        keys.z = false;\n        return;\n      }\n\n      if (e.code == \"Delete\") {\n        keys.del = false;\n      }\n\n      keys.control = false;\n      keys.shift = false;\n      keys.del = false;\n      keys.z = false;\n    }; //\n\n  }\n};",{"version":3,"sources":["ArtBoard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"art-board\">\r\n    <canvas id=\"canvas\" class=\"canvas\" resize></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport paper from \"paper\";\r\nimport { mapState, mapMutations } from \"vuex\";\r\nimport { bus } from \"@/main.js\";\r\nimport { get } from \"http\";\r\n\r\nexport default {\r\n  name: \"ArtBoard\",\r\n  computed: {\r\n    ...mapState([\"SELECTED_LAYER_INDEX\"])\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      \"SET_TOOLSELECT\",\r\n      \"SET_TOOLPOINTER\",\r\n      \"SET_TOOLPEN\",\r\n      \"SET_TOOLCIRCLE\",\r\n      \"SET_TOOLSHAPEBUILDER\",\r\n      \"SET_TOOLLINE\",\r\n      \"DELETE_SHAPES\"\r\n    ])\r\n  },\r\n  mounted: function() {\r\n    // Clamp prototype\r\n    Number.prototype.clamp = function(min, max) {\r\n      return Math.min(Math.max(this, min), max);\r\n    };\r\n\r\n    const canvas = document.querySelector(\"#canvas\");\r\n\r\n    //#region PaperJS setup\r\n    paper.install(window);\r\n    paper.setup(\"canvas\");\r\n\r\n    paper.settings.handleSize = 8;\r\n    paper.settings.hitTolerance = 7; /*value updated with zoom*/\r\n\r\n    const view = paper.view;\r\n\r\n    const toolSelect = new Tool();\r\n    const toolPointer = new Tool();\r\n    const toolPen = new Tool();\r\n    const toolCircle = new Tool();\r\n    const toolShapebuilder = new Tool();\r\n    const toolLine = new Tool();\r\n\r\n    // Set global store references\r\n    this.SET_TOOLSELECT(toolSelect);\r\n    this.SET_TOOLPOINTER(toolPointer);\r\n    this.SET_TOOLPEN(toolPen);\r\n    this.SET_TOOLCIRCLE(toolCircle);\r\n    this.SET_TOOLSHAPEBUILDER(toolShapebuilder);\r\n    this.SET_TOOLLINE(toolLine);\r\n    //\r\n\r\n\r\n    //#region Layers\r\n    let AddLayer = () => {\r\n      let _newLayer = project.addLayer(new Layer());\r\n      _newLayer.activate();\r\n    };\r\n\r\n    let RemoveLayer = () => {\r\n      for(let i=0; i<project.activeLayer.children.length; i++) {\r\n        project.activeLayer.children[i].selectable=false;\r\n      }\r\n      project.activeLayer.remove();\r\n    };\r\n\r\n    let UpdateActiveLayer = () => {\r\n      project.layers[this.SELECTED_LAYER_INDEX].activate();\r\n    };\r\n\r\n    bus.$on(\"add-layer\", () => {\r\n      AddLayer();\r\n    });\r\n    bus.$on(\"remove-layer\", () => {\r\n      RemoveLayer();\r\n    });\r\n    bus.$on(\"update-active-layer\", () => {\r\n      UpdateActiveLayer();\r\n    });\r\n    //\r\n\r\n    // Add first layer\r\n    AddLayer();\r\n\r\n    //#region Zoom\r\n    let zoomOffset = 0;\r\n\r\n    canvas.onwheel = function(e) {\r\n      bus.$emit(\"zoom\");\r\n      e.preventDefault();\r\n\r\n      const mousePos = new Point(e.clientX, e.clientY);\r\n      updateZoom(e.deltaY, mousePos);\r\n    };\r\n\r\n    function updateZoom(delta, mousePos) {\r\n      const mouseViewPos = view.viewToProject(mousePos);\r\n      [view.zoom, zoomOffset] = changeZoomStable(\r\n        view.zoom,\r\n        delta,\r\n        view.center,\r\n        mouseViewPos\r\n      );\r\n      view.center = view.center.add(zoomOffset);\r\n      view.draw();\r\n\r\n      // Pretty much hardcoded, this is to adjust the hitTolerance in respect to the zoom\r\n      settings.hitTolerance = (7 / view.zoom).clamp(0, 17);\r\n    }\r\n\r\n    function getNewZoom(oldZoom, delta) {\r\n      const factor = 1.05;\r\n\r\n      if (delta > 0) {\r\n        return oldZoom / factor;\r\n      } else if (delta < 0) {\r\n        return oldZoom * factor;\r\n      }\r\n    }\r\n\r\n    function changeZoomStable(oldZoom, delta, c, p) {\r\n      var newZoom = getNewZoom(oldZoom, delta).clamp(0.2, 10);\r\n      var beta = oldZoom / newZoom;\r\n      var pc = p.subtract(c);\r\n      var a = p.subtract(pc.multiply(beta)).subtract(c);\r\n\r\n      return [newZoom, a];\r\n    }\r\n    //\r\n\r\n    //#region Key-Handling\r\n    var keys = {\r\n      del: false,\r\n      shift: false,\r\n      control: false,\r\n      z: false\r\n    };\r\n\r\n    let keyHandler = e => {\r\n      if (!keys.del && e.code == \"Delete\" && !keys.control && !keys.shift) {\r\n        keys.del = true;\r\n        this.DELETE_SHAPES();\r\n\r\n        // Let other components know (ToolSelect -> transform box must disappear)\r\n        bus.$emit(\"delete_selection\");\r\n      } else if (!keys.shift && e.code == \"ShiftLeft\") {\r\n        keys.shift = true;\r\n        bus.$emit(\"shift\");\r\n      } else if (!keys.control && e.code == \"ControlLeft\") {\r\n        keys.control = true;\r\n        bus.$emit(\"control\");\r\n      } else if (!keys.z && e.key == \"z\") {\r\n        keys.z = true;\r\n      }\r\n\r\n      if (keys.z && keys.control) {\r\n        bus.$emit(\"undo\");\r\n      }\r\n    };\r\n\r\n    // --- Key checks ---\r\n    document.onkeydown = keyHandler;\r\n\r\n    document.onkeyup = function(e) {\r\n      if (e.code == \"ControlLeft\") {\r\n        bus.$emit(\"control_up\");\r\n      }\r\n\r\n      if (e.key == \"z\") {\r\n        keys.z = false;\r\n        return;\r\n      }\r\n      if (e.code == \"Delete\") {\r\n        keys.del = false;\r\n      }\r\n\r\n      keys.control = false;\r\n      keys.shift = false;\r\n      keys.del = false;\r\n      keys.z = false;\r\n    };\r\n    //\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.canvas {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 0;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}