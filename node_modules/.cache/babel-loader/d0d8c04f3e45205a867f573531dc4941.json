{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\header-bar\\WidthInput2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\header-bar\\WidthInput2.vue","mtime":1569450479911},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'WidthInput2',\n  props: ['parentWidth'],\n  data: function data() {\n    return {\n      input: ''\n    };\n  },\n  watch: {\n    input: function input(_new, _old) {\n      if (this.checkNumber(_new)) {\n        this.$emit('value-change', _new);\n      }\n    },\n    parentWidth: function parentWidth(_new, _old) {\n      if (_new == 'none') {\n        this.input = '?';\n      } else if (_new == 'empty') {\n        this.input = '';\n      } else {\n        this.input = _new;\n      }\n    }\n  },\n  methods: {\n    checkNumber: function checkNumber(n) {\n      return Number(n);\n    },\n    increment: function increment() {\n      if (this.checkNumber(this.input)) {\n        this.input++;\n      }\n    },\n    decrement: function decrement() {\n      if (this.checkNumber(this.input)) {\n        this.input--;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var input = this.$refs[\"input\"];\n    document.addEventListener('click', function (e) {\n      if (!input.contains(e.target)) {\n        resetFocus();\n      }\n    });\n\n    var resetFocus = function resetFocus() {\n      input.blur();\n    };\n  }\n};",{"version":3,"sources":["WidthInput2.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA,CACA,aADA,CAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAEA,GARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,eAAA,IAAA,EAAA,IAAA,EAAA;AACA,UAAA,KAAA,WAAA,CAAA,IAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,cAAA,EAAA,IAAA;AACA;AACA,KALA;AAMA,IAAA,WAAA,EAAA,qBAAA,IAAA,EAAA,IAAA,EAAA;AACA,UAAA,IAAA,IAAA,MAAA,EAAA;AACA,aAAA,KAAA,GAAA,GAAA;AACA,OAFA,MAGA,IAAA,IAAA,IAAA,OAAA,EAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,OAFA,MAGA;AACA,aAAA,KAAA,GAAA,IAAA;AACA;AACA;AAhBA,GATA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,qBAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,WAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,aAAA,KAAA;AACA;AACA,KARA;AASA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,WAAA,CAAA,KAAA,KAAA,CAAA,EAAA;AACA,aAAA,KAAA;AACA;AACA;AAbA,GA3BA;AA0CA,EAAA,OAAA,EAAA,mBAAA;AACA,QAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA;AAEA,IAAA,QAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA;AACA,QAAA,UAAA;AACA;AACA,KAJA;;AAMA,QAAA,UAAA,GAAA,SAAA,UAAA,GAAA;AACA,MAAA,KAAA,CAAA,IAAA;AACA,KAFA;AAGA;AAtDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"width-input\">\r\n    <input v-model=\"input\" type=\"text\" class=\"input-width-text\" ref=\"input\" />\r\n    <div class=\"value-steps\">\r\n      <div class=\"top\" @click=\"increment\">-</div>\r\n      <div class=\"bottom\" @click=\"decrement\">-</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WidthInput2',\r\n  props: [\r\n    'parentWidth'\r\n  ],\r\n  data: function() {\r\n    return {\r\n      input: ''    }\r\n  },\r\n  watch: {\r\n    input: function(_new, _old) {\r\n      if(this.checkNumber(_new)) {\r\n        this.$emit('value-change', _new);\r\n      }\r\n    },\r\n    parentWidth: function(_new, _old) {\r\n      if(_new == 'none') {\r\n        this.input = '?';\r\n      }\r\n      else if(_new == 'empty') {\r\n        this.input = '';\r\n      }\r\n      else {\r\n        this.input = _new;\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    checkNumber: function(n) {\r\n      return Number(n)\r\n    },\r\n    increment: function() {\r\n      if(this.checkNumber(this.input)) {\r\n        this.input++;\r\n      }\r\n    },\r\n    decrement: function() {\r\n      if(this.checkNumber(this.input)) {\r\n        this.input--;\r\n      }\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var input = this.$refs[\"input\"]\r\n\r\n    document.addEventListener('click', (e) => {\r\n      if(!input.contains(e.target)) {\r\n        resetFocus();\r\n      }\r\n    })\r\n\r\n    let resetFocus = () => {\r\n      input.blur()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"scss\">\r\n@import '@/library.scss';\r\n\r\n.width-input {\r\n  display: flex;\r\n  margin-left: 5px;\r\n  width: 51.8px;\r\n  height: 18px;\r\n\r\n  input {\r\n    width: 70%;\r\n    height: 100%;\r\n    border-width: 0px;\r\n    color: white;\r\n    font-family: Montserrat;\r\n    font-size: 13px;\r\n    background-color: rgb(139, 139, 139);\r\n    text-align: center;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n  }\r\n\r\n  .value-steps {\r\n    width: 30%;\r\n    height: 100%;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    div {\r\n      font-size: 12px;\r\n      line-height: 0.8em;\r\n      height: 50%;\r\n      width: 100%;\r\n      color: white;\r\n      text-align: center;\r\n      background-color: $DarkGray;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: rgb(94, 94, 94);\r\n      }\r\n    }\r\n\r\n    .top {\r\n      border-top-right-radius: 3px;\r\n    }\r\n    .bottom {\r\n      border-bottom-right-radius: 3px;\r\n    }\r\n  }\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components/header-bar"}]}