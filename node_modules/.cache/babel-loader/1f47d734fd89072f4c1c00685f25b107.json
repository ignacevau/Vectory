{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\src\\mixins\\GroupOperations.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\mixins\\GroupOperations.js","mtime":1580471588918},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { mapState, mapMutations } from \"vuex\";\nimport Utils from '@/Utils.js';\nimport Data from '@/Data.js';\nexport var GroupOperations = {\n  methods: {\n    GET_UNGROUPED: function GET_UNGROUPED(items) {\n      console.log(items.length);\n\n      if (items.length == 0) {\n        console.log(\"crap\");\n        return [];\n      }\n\n      var result = [];\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        console.log(\"k\");\n\n        if (item.type == \"shape\") {\n          result.push(item);\n        } else if (item.type == \"group\") {\n          for (var j = 0; j < item.children.length; j++) {\n            result.push.apply(result, _toConsumableArray(this.GET_UNGROUPED([item.children[j]])));\n          }\n        } // Error catching - prevent infinite loop\n        else {\n            console.error(\"Unknown item type! Item was: \" + item);\n            return null;\n          }\n      }\n\n      return result;\n    }\n  }\n};",{"version":3,"sources":["D:\\GitHub\\Vectory\\src\\mixins\\GroupOperations.js"],"names":["mapState","mapMutations","Utils","Data","GroupOperations","methods","GET_UNGROUPED","items","console","log","length","result","i","item","type","push","j","children","error"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,MAAvC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAO,IAAMC,eAAe,GAAG;AAC3BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,yBACSC,KADT,EACgB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;AACA,UAAIH,KAAK,CAACG,MAAN,IAAgB,CAApB,EAAuB;AACnBF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAO,EAAP;AACH;;AAED,UAAIE,MAAM,GAAG,EAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACG,MAA1B,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,YAAIC,IAAI,GAAGN,KAAK,CAACK,CAAD,CAAhB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAEA,YAAII,IAAI,CAACC,IAAL,IAAa,OAAjB,EAA0B;AACtBH,UAAAA,MAAM,CAACI,IAAP,CAAYF,IAAZ;AACH,SAFD,MAGK,IAAIA,IAAI,CAACC,IAAL,IAAa,OAAjB,EAA0B;AAC3B,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,QAAL,CAAcP,MAAlC,EAA0CM,CAAC,EAA3C,EAA+C;AAC3CL,YAAAA,MAAM,CAACI,IAAP,OAAAJ,MAAM,qBAAS,KAAKL,aAAL,CAAmB,CAACO,IAAI,CAACI,QAAL,CAAcD,CAAd,CAAD,CAAnB,CAAT,EAAN;AACH;AACJ,SAJI,CAML;AANK,aAOA;AACDR,YAAAA,OAAO,CAACU,KAAR,CAAc,kCAAkCL,IAAhD;AACA,mBAAO,IAAP;AACH;AACJ;;AAED,aAAOF,MAAP;AACH;AA/BI;AADkB,CAAxB","sourcesContent":["import { mapState, mapMutations } from \"vuex\";\r\nimport Utils from '@/Utils.js';\r\nimport Data from '@/Data.js';\r\n\r\nexport const GroupOperations = {\r\n    methods: {\r\n        GET_UNGROUPED(items) {\r\n            console.log(items.length)\r\n            if (items.length == 0) {\r\n                console.log(\"crap\")\r\n                return [];\r\n            }\r\n\r\n            let result = [];\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                let item = items[i];\r\n                console.log(\"k\")\r\n\r\n                if (item.type == \"shape\") {\r\n                    result.push(item)\r\n                }\r\n                else if (item.type == \"group\") {\r\n                    for (let j = 0; j < item.children.length; j++) {\r\n                        result.push(...this.GET_UNGROUPED([item.children[j]]));\r\n                    }\r\n                }\r\n\r\n                // Error catching - prevent infinite loop\r\n                else {\r\n                    console.error(\"Unknown item type! Item was: \" + item);\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n}"]}]}