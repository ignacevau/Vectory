{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\tools\\ToolLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\tools\\ToolLine.vue","mtime":1580335408921},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport paper from 'paper';\nimport Tool from '../Tool.vue';\nimport { mapMutations, mapState } from 'vuex';\nexport default {\n  name: 'ToolLine',\n  computed: _objectSpread({}, mapState(['TOOLLINE', 'LINE_STROKECOLOR', 'LINE_OPACITY', 'LINE_WIDTH'])),\n  components: {\n    Tool: Tool\n  },\n  methods: _objectSpread({}, mapMutations(['SET_ACTIVE', 'ADD_SHAPE', 'ADD_SELECT', 'DESELECT']), {\n    setActive: function setActive() {\n      this.SET_ACTIVE(\"line\");\n      this.TOOLLINE.activate();\n    }\n  }),\n  mounted: function mounted() {\n    var _this = this;\n\n    var newPath;\n    var startPoint = new Point();\n    var endPoint = new Point(); // Keep track of how long the line is, don't create for click\n\n    var delta;\n\n    this.TOOLLINE.onMouseDown = function (e) {\n      _this.DESELECT();\n\n      newPath = new Path();\n      delta = 0;\n      startPoint = e.point;\n      project.activeLayer.selected = false;\n    };\n\n    this.TOOLLINE.onMouseDrag = function (e) {\n      newPath.remove();\n      delta += e.delta.length;\n      endPoint = e.point;\n      newPath = Path.Line(startPoint, endPoint);\n      newPath.strokeColor = _this.LINE_STROKECOLOR;\n      newPath.strokeWidth = _this.LINE_WIDTH;\n      newPath.fillColor = 'transparent';\n      newPath.opacity = _this.LINE_OPACITY;\n    };\n\n    this.TOOLLINE.onMouseUp = function (e) {\n      // Don't create an object for a click\n      if (delta < 3) {\n        newPath.remove();\n        return;\n      }\n\n      newPath.selected = true;\n      newPath.selectable = true;\n      newPath.type = \"shape\";\n\n      _this.ADD_SELECT(newPath);\n\n      _this.ADD_SHAPE(newPath);\n    };\n  }\n};",{"version":3,"sources":["ToolLine.vue"],"names":[],"mappings":";;;;;;;;;AASA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,aAAA;AACA,SAAA,YAAA,EAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,UADA,EAGA,kBAHA,EAIA,cAJA,EAKA,YALA,CAAA,CADA,CAFA;AAWA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAXA;AAcA,EAAA,OAAA,oBACA,YAAA,CAAA,CACA,YADA,EAEA,WAFA,EAGA,YAHA,EAIA,UAJA,CAAA,CADA;AAOA,IAAA,SAAA,EAAA,qBAAA;AACA,WAAA,UAAA,CAAA,MAAA;AAEA,WAAA,QAAA,CAAA,QAAA;AACA;AAXA,IAdA;AA2BA,EAAA,OAAA,EAAA,mBAAA;AAAA;;AACA,QAAA,OAAA;AACA,QAAA,UAAA,GAAA,IAAA,KAAA,EAAA;AACA,QAAA,QAAA,GAAA,IAAA,KAAA,EAAA,CAHA,CAKA;;AACA,QAAA,KAAA;;AAEA,SAAA,QAAA,CAAA,WAAA,GAAA,UAAA,CAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA;;AAEA,MAAA,OAAA,GAAA,IAAA,IAAA,EAAA;AAEA,MAAA,KAAA,GAAA,CAAA;AACA,MAAA,UAAA,GAAA,CAAA,CAAA,KAAA;AAEA,MAAA,OAAA,CAAA,WAAA,CAAA,QAAA,GAAA,KAAA;AACA,KATA;;AAWA,SAAA,QAAA,CAAA,WAAA,GAAA,UAAA,CAAA,EAAA;AACA,MAAA,OAAA,CAAA,MAAA;AAEA,MAAA,KAAA,IAAA,CAAA,CAAA,KAAA,CAAA,MAAA;AACA,MAAA,QAAA,GAAA,CAAA,CAAA,KAAA;AAEA,MAAA,OAAA,GAAA,IAAA,CAAA,IAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AAEA,MAAA,OAAA,CAAA,WAAA,GAAA,KAAA,CAAA,gBAAA;AACA,MAAA,OAAA,CAAA,WAAA,GAAA,KAAA,CAAA,UAAA;AACA,MAAA,OAAA,CAAA,SAAA,GAAA,aAAA;AACA,MAAA,OAAA,CAAA,OAAA,GAAA,KAAA,CAAA,YAAA;AACA,KAZA;;AAcA,SAAA,QAAA,CAAA,SAAA,GAAA,UAAA,CAAA,EAAA;AACA;AACA,UAAA,KAAA,GAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,MAAA;AACA;AACA;;AAEA,MAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,UAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,IAAA,GAAA,OAAA;;AAEA,MAAA,KAAA,CAAA,UAAA,CAAA,OAAA;;AACA,MAAA,KAAA,CAAA,SAAA,CAAA,OAAA;AACA,KAbA;AAcA;AA1EA,CAAA","sourcesContent":["<template>\r\n  <tool imgSource=\"tool-line.png\" @isActive=\"setActive\" />  \r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport paper from 'paper'\r\nimport Tool from '../Tool.vue'\r\nimport { mapMutations, mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ToolLine',\r\n  computed: {\r\n    ...mapState([\r\n      'TOOLLINE',\r\n\r\n      'LINE_STROKECOLOR',\r\n      'LINE_OPACITY',\r\n      'LINE_WIDTH'\r\n    ])\r\n  },\r\n  components: {\r\n    Tool\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'SET_ACTIVE',\r\n      'ADD_SHAPE',\r\n      'ADD_SELECT',\r\n      'DESELECT'\r\n    ]),\r\n    setActive: function() {\r\n      this.SET_ACTIVE(\"line\")\r\n\r\n      this.TOOLLINE.activate();\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var newPath;\r\n    var startPoint = new Point();\r\n    var endPoint = new Point();\r\n\r\n    // Keep track of how long the line is, don't create for click\r\n    var delta;\r\n\r\n    this.TOOLLINE.onMouseDown = (e) => {\r\n      this.DESELECT();\r\n\r\n      newPath = new Path();\r\n\r\n      delta = 0;\r\n      startPoint = e.point\r\n\r\n      project.activeLayer.selected = false;\r\n    }\r\n\r\n    this.TOOLLINE.onMouseDrag = (e) => {\r\n      newPath.remove()\r\n\r\n      delta += e.delta.length;\r\n      endPoint = e.point\r\n\r\n      newPath = Path.Line(startPoint, endPoint)\r\n\r\n      newPath.strokeColor = this.LINE_STROKECOLOR\r\n      newPath.strokeWidth = this.LINE_WIDTH\r\n      newPath.fillColor = 'transparent';\r\n      newPath.opacity = this.LINE_OPACITY\r\n    }\r\n\r\n    this.TOOLLINE.onMouseUp = (e) => {\r\n      // Don't create an object for a click\r\n      if (delta < 3) {\r\n        newPath.remove();\r\n        return;\r\n      }\r\n\r\n      newPath.selected = true;\r\n      newPath.selectable = true;\r\n      newPath.type = \"shape\";\r\n\r\n      this.ADD_SELECT(newPath);\r\n      this.ADD_SHAPE(newPath);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/components/tools"}]}