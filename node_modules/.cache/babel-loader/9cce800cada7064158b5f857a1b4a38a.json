{"remainingRequest":"D:\\GitHub\\Vectory\\vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\vectory\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\GitHub\\Vectory\\vectory\\src\\libraries\\node\\self.js","dependencies":[{"path":"D:\\GitHub\\Vectory\\vectory\\src\\libraries\\node\\self.js","mtime":1552939656910},{"path":"D:\\GitHub\\Vectory\\vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\vectory\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*\n * Paper.js - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n */\n// Node.js emulation layer of browser environment, based on jsdom with node-\n// canvas integration.\nvar path = require('path'); // Determine the name by which name the module was required (either 'paper',\n// 'paper-jsdom' or 'paper-jsdom-canvas'), and use this to determine if error\n// exceptions should be thrown or if loading should fail silently.\n\n\nvar parent = module.parent && module.parent.parent,\n    requireName = parent && path.basename(path.dirname(parent.filename));\nrequireName = /^paper/.test(requireName) ? requireName : 'paper';\nvar jsdom, self;\n\ntry {\n  jsdom = require('jsdom');\n} catch (e) {\n  // Check the required module's name to see if it contains jsdom, and only\n  // complain about its lack if the module requires it.\n  if (/\\bjsdom\\b/.test(requireName)) {\n    throw new Error('Unable to load jsdom module.');\n  }\n}\n\nif (jsdom) {\n  // Create our document and window objects through jsdom.\n\n  /* global document:true, window:true */\n  var document = jsdom.jsdom('<html><body></body></html>', {\n    // Use the current working directory as the document's origin, so\n    // requests to local files work correctly with CORS.\n    url: 'file://' + process.cwd() + '/',\n    features: {\n      FetchExternalResources: ['img', 'script']\n    }\n  });\n  self = document.defaultView;\n\n  require('./canvas.js')(self, requireName);\n\n  require('./xml.js')(self);\n} else {\n  self = {\n    navigator: {\n      userAgent: 'Node.js (' + process.platform + '; U; rv:' + process.version + ')'\n    }\n  };\n}\n\nmodule.exports = self;",{"version":3,"sources":["D:\\GitHub\\Vectory\\vectory\\src\\libraries\\node\\self.js"],"names":["path","require","parent","module","requireName","basename","dirname","filename","test","jsdom","self","e","Error","document","url","process","cwd","features","FetchExternalResources","defaultView","navigator","userAgent","platform","version","exports"],"mappings":"AAAA;;;;;;;;;;;AAYA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,C,CACA;AACA;AACA;;;AACA,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAAP,IAAiBC,MAAM,CAACD,MAAP,CAAcA,MAA5C;AAAA,IACIE,WAAW,GAAGF,MAAM,IAAIF,IAAI,CAACK,QAAL,CAAcL,IAAI,CAACM,OAAL,CAAaJ,MAAM,CAACK,QAApB,CAAd,CAD5B;AAEAH,WAAW,GAAG,SAASI,IAAT,CAAcJ,WAAd,IAA6BA,WAA7B,GAA2C,OAAzD;AAEA,IAAIK,KAAJ,EACIC,IADJ;;AAGA,IAAI;AACAD,EAAAA,KAAK,GAAGR,OAAO,CAAC,OAAD,CAAf;AACH,CAFD,CAEE,OAAMU,CAAN,EAAS;AACP;AACA;AACA,MAAI,YAAYH,IAAZ,CAAiBJ,WAAjB,CAAJ,EAAmC;AAC/B,UAAM,IAAIQ,KAAJ,CAAU,8BAAV,CAAN;AACH;AACJ;;AAED,IAAIH,KAAJ,EAAW;AACP;;AACA;AACA,MAAII,QAAQ,GAAGJ,KAAK,CAACA,KAAN,CAAY,4BAAZ,EAA0C;AACrD;AACA;AACAK,IAAAA,GAAG,EAAE,YAAYC,OAAO,CAACC,GAAR,EAAZ,GAA4B,GAHoB;AAIrDC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,sBAAsB,EAAE,CAAC,KAAD,EAAQ,QAAR;AADlB;AAJ2C,GAA1C,CAAf;AAQAR,EAAAA,IAAI,GAAGG,QAAQ,CAACM,WAAhB;;AACAlB,EAAAA,OAAO,CAAC,aAAD,CAAP,CAAuBS,IAAvB,EAA6BN,WAA7B;;AACAH,EAAAA,OAAO,CAAC,UAAD,CAAP,CAAoBS,IAApB;AACH,CAdD,MAcO;AACHA,EAAAA,IAAI,GAAG;AACHU,IAAAA,SAAS,EAAE;AACPC,MAAAA,SAAS,EAAE,cAAcN,OAAO,CAACO,QAAtB,GAAiC,UAAjC,GACHP,OAAO,CAACQ,OADL,GACe;AAFnB;AADR,GAAP;AAMH;;AAEDpB,MAAM,CAACqB,OAAP,GAAiBd,IAAjB","sourcesContent":["/*\n * Paper.js - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n */\n\n// Node.js emulation layer of browser environment, based on jsdom with node-\n// canvas integration.\n\nvar path = require('path');\n// Determine the name by which name the module was required (either 'paper',\n// 'paper-jsdom' or 'paper-jsdom-canvas'), and use this to determine if error\n// exceptions should be thrown or if loading should fail silently.\nvar parent = module.parent && module.parent.parent,\n    requireName = parent && path.basename(path.dirname(parent.filename));\nrequireName = /^paper/.test(requireName) ? requireName : 'paper';\n\nvar jsdom,\n    self;\n\ntry {\n    jsdom = require('jsdom');\n} catch(e) {\n    // Check the required module's name to see if it contains jsdom, and only\n    // complain about its lack if the module requires it.\n    if (/\\bjsdom\\b/.test(requireName)) {\n        throw new Error('Unable to load jsdom module.');\n    }\n}\n\nif (jsdom) {\n    // Create our document and window objects through jsdom.\n    /* global document:true, window:true */\n    var document = jsdom.jsdom('<html><body></body></html>', {\n        // Use the current working directory as the document's origin, so\n        // requests to local files work correctly with CORS.\n        url: 'file://' + process.cwd() + '/',\n        features: {\n            FetchExternalResources: ['img', 'script']\n        }\n    });\n    self = document.defaultView;\n    require('./canvas.js')(self, requireName);\n    require('./xml.js')(self);\n} else {\n    self = {\n        navigator: {\n            userAgent: 'Node.js (' + process.platform + '; U; rv:' +\n                    process.version + ')'\n        }\n    };\n}\n\nmodule.exports = self;\n"]}]}