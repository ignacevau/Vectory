{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\Layer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\Layer.vue","mtime":1569659680351},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\GitHub\\\\Vectory\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\n\nvar images = require.context('../assets/', false, /\\.png$/);\n\nexport default {\n  name: 'Layer',\n  props: {\n    number: Number,\n    name: String\n  },\n  data: function data() {\n    return {\n      eyeState: 'visible',\n      selectState: 'stroke'\n    };\n  },\n  computed: _objectSpread({}, mapState(['SELECTED_LAYER_INDEX', 'LAYERS']), {\n    isLayerSelected: function isLayerSelected() {\n      return this.SELECTED_LAYER_INDEX == this.number;\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['SELECT_LAYER']), {\n    imgUrlEye: function imgUrlEye() {\n      return images('./eye-' + this.eyeState + '.png');\n    },\n    imgUrlSelect: function imgUrlSelect() {\n      return images('./select-' + this.selectState + '.png');\n    },\n    selectLayer: function selectLayer() {\n      this.SELECT_LAYER(this.number);\n    },\n    triggerEye: function triggerEye() {\n      this.eyeState = this.eyeState == 'visible' ? 'invisible' : 'visible';\n    },\n    triggerSelect: function triggerSelect() {\n      this.selectState = this.selectState == 'fill' ? 'stroke' : 'fill';\n    }\n  })\n};",{"version":3,"sources":["Layer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA,YAAA,EAAA,KAAA,EAAA,QAAA,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,IAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,SADA;AAEA,MAAA,WAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,QAAA,oBACA,QAAA,CAAA,CACA,sBADA,EAEA,QAFA,CAAA,CADA;AAKA,IAAA,eAAA,EAAA,2BAAA;AACA,aAAA,KAAA,oBAAA,IAAA,KAAA,MAAA;AACA;AAPA,IAZA;AAqBA,EAAA,OAAA,oBACA,YAAA,CAAA,CACA,cADA,CAAA,CADA;AAIA,IAAA,SAAA,EAAA,qBAAA;AACA,aAAA,MAAA,CAAA,WAAA,KAAA,QAAA,GAAA,MAAA,CAAA;AACA,KANA;AAOA,IAAA,YAAA,EAAA,wBAAA;AACA,aAAA,MAAA,CAAA,cAAA,KAAA,WAAA,GAAA,MAAA,CAAA;AACA,KATA;AAUA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,YAAA,CAAA,KAAA,MAAA;AACA,KAZA;AAaA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,QAAA,GAAA,KAAA,QAAA,IAAA,SAAA,GAAA,WAAA,GAAA,SAAA;AACA,KAfA;AAgBA,IAAA,aAAA,EAAA,yBAAA;AACA,WAAA,WAAA,GAAA,KAAA,WAAA,IAAA,MAAA,GAAA,QAAA,GAAA,MAAA;AACA;AAlBA;AArBA,CAAA","sourcesContent":["<template>\r\n  <div class=\"layer\">\r\n    <label>\r\n      <input type=\"radio\" name=\"layers\" v-on:click.prevent=\"\" v-bind:checked=\"isLayerSelected\" />\r\n      <div>\r\n        <div class=\"eye\">\r\n          <img v-bind:src=\"imgUrlEye()\" v-on:click=\"triggerEye\" />\r\n        </div>\r\n\r\n        <div class=\"name\" v-on:mousedown=\"selectLayer\">\r\n          <span>{{ name }}</span>\r\n        </div>\r\n        \r\n        <div class=\"selectall\">\r\n          <img v-bind:src=\"imgUrlSelect()\" v-on:click=\"triggerSelect\" />\r\n        </div>\r\n      </div>\r\n    </label>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapMutations } from 'vuex';\r\n\r\nvar images = require.context('../assets/', false, /\\.png$/)\r\n\r\nexport default {\r\n  name: 'Layer',\r\n  props: {\r\n    number: Number,\r\n    name: String\r\n  },\r\n  data: function() {\r\n    return {\r\n      eyeState: 'visible',\r\n      selectState: 'stroke'\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'SELECTED_LAYER_INDEX',\r\n      'LAYERS'\r\n    ]),\r\n    isLayerSelected: function() {\r\n      return this.SELECTED_LAYER_INDEX == this.number;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'SELECT_LAYER'\r\n    ]),\r\n    imgUrlEye: function() {\r\n      return images('./eye-' + this.eyeState + '.png')\r\n    },\r\n    imgUrlSelect: function() {\r\n      return images('./select-' + this.selectState + '.png')\r\n    },\r\n    selectLayer: function() {\r\n      this.SELECT_LAYER(this.number);\r\n    },\r\n    triggerEye: function() {\r\n      this.eyeState = this.eyeState == 'visible' ? 'invisible' : 'visible'\r\n    },\r\n    triggerSelect: function() {\r\n      this.selectState = this.selectState == 'fill' ? 'stroke' : 'fill'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.layer {\r\n  width: 100%;\r\n  height: 1.8em;\r\n  color: white;\r\n  font-family: Montserrat;\r\n  flex: 0 0 auto;\r\n\r\n  label {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    \r\n    >div {\r\n      width: 100%;\r\n      height: 100%;\r\n      background-color: rgb(90, 90, 90);\r\n      border-bottom: 1px solid rgb(126, 125, 125);\r\n      display: flex;\r\n\r\n      .eye {\r\n        width: 10%;\r\n        height: 100%;\r\n        border-right: 1px solid rgb(126, 125, 125);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        img {\r\n          max-height: 1.1em;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .name {\r\n        width: 75%;\r\n        height: 100%;\r\n        font-size: 0.9em;\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n\r\n      .selectall {\r\n        width: 15%;\r\n        height: 100%;\r\n        border-left: 1px solid rgb(126, 125, 125);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        img {\r\n          max-height: 0.9em;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n    input:checked~div {\r\n      background-color: rgb(80, 147, 248);\r\n      border-bottom: 1px solid rgb(169, 204, 255);\r\n    }\r\n\r\n    input {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}