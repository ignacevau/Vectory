{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\sidebar-right\\StrokeGrid.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\sidebar-right\\StrokeGrid.vue","mtime":1556118081763},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapMutations, mapState } from 'vuex'\r\nimport ColorTrigger from '@/components/sidebar-right/stroke-grid/ColorTrigger.vue'\r\nimport WidthInput from '@/components/sidebar-right/stroke-grid/WidthInput.vue'\r\nimport CapStyle from '@/components/sidebar-right/stroke-grid/CapStyle.vue'\r\n\r\nexport default {\r\n  name: 'StrokeGrid',\r\n  components: {\r\n    ColorTrigger,\r\n    WidthInput,\r\n    CapStyle\r\n  },\r\n  props: [\r\n    'showText'\r\n  ],\r\n  data: function() {\r\n    return: {\r\n      strokeColor: 'transparent'\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'SELECTED'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'SELECTION_SET_STROKECOLOR'\r\n    ]),\r\n    colorChange: function(value) {\r\n      this.strokeColor = value\r\n      this.SELECTION_SET_STROKECOLOR(value)\r\n    }\r\n  },\r\n  watch: {\r\n    SELECTED: function(_new, _old) {\r\n      if(_new.length == 0) {\r\n        this.strokeColor = 'rgb(94, 94, 94)'\r\n        // this.oldColor = this.color\r\n        return\r\n      }\r\n      else if(!_new[0][\"strokeColor\"]) {\r\n        this.strokeColor = 'rgb(94, 94, 94)'\r\n        // this.oldColor = this.color\r\n        return\r\n      }\r\n      else {\r\n        var sw = _new[0][\"strokeColor\"]._canvasStyle\r\n\r\n        for(var i=0; i<_new.length; i++) {\r\n          if(!_new[i][\"strokeColor\"]._canvasStyle || _new[i][\"strokeColor\"]._canvasStyle != sw) {\r\n            this.strokeColor = 'none'\r\n            // this.oldColor = this.color\r\n            return\r\n          }\r\n        }\r\n      }\r\n\r\n      this.strokeColor = _new[0][\"strokeColor\"]._canvasStyle\r\n      // this.oldColor = this.color\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["StrokeGrid.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"StrokeGrid.vue","sourceRoot":"src/components/sidebar-right","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"title\">\r\n      <img class=\"img-stroke\" src=\"@/assets/stroke.png\" />\r\n      <div>STROKE</div>\r\n    </div>\r\n\r\n    <div v-bind:class=\"{ 'large-grid': showText, 'small-grid': !showText, 'grid-container': true }\">\r\n      <div class=\"pr-left\"></div>\r\n      <div v-if=\"showText\" class=\"pr-middle\">COLOR</div>\r\n      <div class=\"pr-right\">\r\n        <color-trigger v-bind:parentColor=\"strokeColor\" @value-change=\"colorChange\" />\r\n      </div>\r\n\r\n      <div class=\"border\"></div>\r\n      <div class=\"border\" v-if=\"showText\"></div>\r\n      <div class=\"border\"></div>\r\n\r\n      <div class=\"pr-left\"></div>\r\n      <div v-if=\"showText\" class=\"pr-middle\">WIDTH</div>\r\n      <div class=\"pr-right\">\r\n        <width-input />\r\n      </div>\r\n\r\n      <div class=\"border\"></div>\r\n      <div class=\"border\" v-if=\"showText\"></div>\r\n      <div class=\"border\"></div>\r\n\r\n      <div class=\"pr-left\"></div>\r\n      <div v-if=\"showText\" class=\"pr-middle\">TYPE</div>\r\n      <div class=\"pr-right\">\r\n        <cap-style />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from 'vuex'\r\nimport ColorTrigger from '@/components/sidebar-right/stroke-grid/ColorTrigger.vue'\r\nimport WidthInput from '@/components/sidebar-right/stroke-grid/WidthInput.vue'\r\nimport CapStyle from '@/components/sidebar-right/stroke-grid/CapStyle.vue'\r\n\r\nexport default {\r\n  name: 'StrokeGrid',\r\n  components: {\r\n    ColorTrigger,\r\n    WidthInput,\r\n    CapStyle\r\n  },\r\n  props: [\r\n    'showText'\r\n  ],\r\n  data: function() {\r\n    return: {\r\n      strokeColor: 'transparent'\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'SELECTED'\r\n    ])\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'SELECTION_SET_STROKECOLOR'\r\n    ]),\r\n    colorChange: function(value) {\r\n      this.strokeColor = value\r\n      this.SELECTION_SET_STROKECOLOR(value)\r\n    }\r\n  },\r\n  watch: {\r\n    SELECTED: function(_new, _old) {\r\n      if(_new.length == 0) {\r\n        this.strokeColor = 'rgb(94, 94, 94)'\r\n        // this.oldColor = this.color\r\n        return\r\n      }\r\n      else if(!_new[0][\"strokeColor\"]) {\r\n        this.strokeColor = 'rgb(94, 94, 94)'\r\n        // this.oldColor = this.color\r\n        return\r\n      }\r\n      else {\r\n        var sw = _new[0][\"strokeColor\"]._canvasStyle\r\n\r\n        for(var i=0; i<_new.length; i++) {\r\n          if(!_new[i][\"strokeColor\"]._canvasStyle || _new[i][\"strokeColor\"]._canvasStyle != sw) {\r\n            this.strokeColor = 'none'\r\n            // this.oldColor = this.color\r\n            return\r\n          }\r\n        }\r\n      }\r\n\r\n      this.strokeColor = _new[0][\"strokeColor\"]._canvasStyle\r\n      // this.oldColor = this.color\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style lang=\"scss\" scoped>\r\n.title {\r\n  margin-top: 10px;\r\n  margin-left: 5px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n.title div {\r\n  color: rgb(123, 175, 253); \r\n  border-bottom: 1px solid rgb(123, 175, 253);\r\n  width: 100%;\r\n  margin-left: 10px;\r\n  font-size: 0.8em;\r\n}\r\n\r\n.large-grid {\r\n  margin-top: 10px;\r\n  height: 11vh;\r\n  display: grid;\r\n  grid-template-columns: 0.1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 0.1fr 1fr 0.1fr 1fr;\r\n  grid-template-areas: \". . .\" \". . .\" \". . .\";\r\n}\r\n.small-grid {\r\n  margin-top: 10px;\r\n  height: 11vh;\r\n  display: grid;\r\n  grid-template-columns: 0.1fr 1fr;\r\n  grid-template-rows: 1fr 0.1fr 1fr 0.1fr 1fr;\r\n  grid-template-areas: \". .\" \". .\" \". .\";\r\n}\r\n.img-stroke {\r\n  width: 25px;\r\n  height: 18px;\r\n}\r\n.grid-container > div {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.grid-container .pr-left {\r\n  width: 30px;\r\n}\r\n.grid-container .pr-middle {\r\n  justify-content: flex-end;\r\n  font-size: 0.7em;\r\n}\r\n.grid-container .pr-right {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.border {\r\n  height: 0.05em;\r\n  background-color: rgb(116, 116, 116);\r\n}\r\n</style>"]}]}