{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\header-bar\\WidthInput2.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\header-bar\\WidthInput2.vue","mtime":1564858542917},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: 'WidthInput2',\r\n  props: [\r\n    'parentWidth'\r\n  ],\r\n  data: function() {\r\n    return {\r\n      input: 1,\r\n      old: 1\r\n    }\r\n  },\r\n  watch: {\r\n    input: function(_new, _old) {\r\n      if(this.checkNumber(_new)) {\r\n        this.$emit('value-change', _new)\r\n        this.old = _old\r\n      }\r\n    },\r\n    parentWidth: function(_new, _old) {\r\n      this.input = _new\r\n    }\r\n  },\r\n  methods: {\r\n    checkNumber: function(n) {\r\n      return Number(n)\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var input = this.$refs[\"input\"]\r\n\r\n    document.addEventListener('click', (e) => {\r\n      if(!input.contains(e.target)) {\r\n        resetFocus();\r\n\r\n      if(!this.checkNumber(this.input)) {\r\n        this.input = this.old\r\n        this.$emit('value-change', this.input)\r\n      }\r\n      }\r\n    })\r\n\r\n    let resetFocus = () => {\r\n      input.blur()\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["WidthInput2.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"WidthInput2.vue","sourceRoot":"src/components/header-bar","sourcesContent":["<template>\r\n  <div class=\"width-input\">\r\n    <input v-model=\"input\" type=\"text\" class=\"input-width-text\" ref=\"input\" />\r\n    <div class=\"value-steps\">\r\n      <div class=\"top\">-</div>\r\n      <div class=\"bottom\">-</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'WidthInput2',\r\n  props: [\r\n    'parentWidth'\r\n  ],\r\n  data: function() {\r\n    return {\r\n      input: 1,\r\n      old: 1\r\n    }\r\n  },\r\n  watch: {\r\n    input: function(_new, _old) {\r\n      if(this.checkNumber(_new)) {\r\n        this.$emit('value-change', _new)\r\n        this.old = _old\r\n      }\r\n    },\r\n    parentWidth: function(_new, _old) {\r\n      this.input = _new\r\n    }\r\n  },\r\n  methods: {\r\n    checkNumber: function(n) {\r\n      return Number(n)\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var input = this.$refs[\"input\"]\r\n\r\n    document.addEventListener('click', (e) => {\r\n      if(!input.contains(e.target)) {\r\n        resetFocus();\r\n\r\n      if(!this.checkNumber(this.input)) {\r\n        this.input = this.old\r\n        this.$emit('value-change', this.input)\r\n      }\r\n      }\r\n    })\r\n\r\n    let resetFocus = () => {\r\n      input.blur()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"scss\">\r\n@import '@/library.scss';\r\n\r\n.width-input {\r\n  display: flex;\r\n  margin-left: 5px;\r\n  width: 51.8px;\r\n  height: 18px;\r\n\r\n  input {\r\n    width: 70%;\r\n    height: 100%;\r\n    border-width: 0px;\r\n    color: white;\r\n    font-family: Montserrat;\r\n    font-size: 13px;\r\n    background-color: rgb(139, 139, 139);\r\n    text-align: center;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n  }\r\n\r\n  .value-steps {\r\n    width: 30%;\r\n    height: 100%;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    div {\r\n      font-size: 12px;\r\n      line-height: 0.8em;\r\n      height: 50%;\r\n      width: 100%;\r\n      color: white;\r\n      text-align: center;\r\n      background-color: $DarkGray;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background-color: rgb(94, 94, 94);\r\n      }\r\n    }\r\n\r\n    .top {\r\n      border-top-right-radius: 3px;\r\n    }\r\n    .bottom {\r\n      border-bottom-right-radius: 3px;\r\n    }\r\n  }\r\n}\r\n\r\n</style>"]}]}