{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\header-bar\\ClickSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\header-bar\\ClickSlider.vue","mtime":1555882416912},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ClickSlider',\r\n  props: [\r\n    'parentOpacity'\r\n  ],\r\n  data: function() {\r\n    return {\r\n      sliderActive: false,\r\n      value: 100\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'clamp'\r\n    ]),\r\n    showSlider: function() {\r\n      sliderActive: true\r\n      this.$refs['slider'].style.display = ''\r\n    }\r\n  },\r\n  watch: {\r\n    parentOpacity: function(_new, _old) {\r\n      this.value = _new\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var sliderDown = false;\r\n    var sliderTrigger = this.$refs['sliderTrigger']\r\n    var slider = this.$refs['slider']\r\n    var height = slider.clientHeight;\r\n    var offsetTop = slider.getBoundingClientRect().y;\r\n\r\n    slider.style.display = 'none'\r\n    \r\n\r\n    sliderTrigger.addEventListener('mousedown', (e) => {\r\n      sliderTrigger.style.pointerEvents = 'none'\r\n      sliderDown = true\r\n      this.$refs['slider'].style.display = ''\r\n      slider.firstChild.style.top = '0%'\r\n    });\r\n\r\n    window.addEventListener('mouseup', (e) => {\r\n      if(sliderDown) {\r\n        sliderDown = false\r\n        this.$refs['slider'].style.display = 'none'\r\n        sliderTrigger.style.pointerEvents = ''\r\n      }\r\n    });\r\n\r\n    window.addEventListener('mousemove', (e) => {\r\n      if(sliderDown) {\r\n        var rel = (e.clientY - offsetTop) / height\r\n        var value = this.clamp(rel, 0, 1) * 100\r\n\r\n        slider.firstChild.style.top = value + '%'\r\n        this.value = Math.round(value)\r\n        this.$emit('value-change', this.value)\r\n      }\r\n    });\r\n  }\r\n}\r\n",{"version":3,"sources":["ClickSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClickSlider.vue","sourceRoot":"src/components/header-bar","sourcesContent":["<template>\r\n  <div class=\"click-slider\">\r\n    <input type=\"text\" v-model=\"value\" />\r\n\r\n    <div class=\"slider\">\r\n      <div class=\"sliderTrigger\" ref=\"sliderTrigger\">\r\n        <div>o</div>\r\n      </div>\r\n\r\n      <div class=\"input\" ref=\"slider\">\r\n        <div class=\"handle\"></div>\r\n        <div class=\"track\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ClickSlider',\r\n  props: [\r\n    'parentOpacity'\r\n  ],\r\n  data: function() {\r\n    return {\r\n      sliderActive: false,\r\n      value: 100\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'clamp'\r\n    ]),\r\n    showSlider: function() {\r\n      sliderActive: true\r\n      this.$refs['slider'].style.display = ''\r\n    }\r\n  },\r\n  watch: {\r\n    parentOpacity: function(_new, _old) {\r\n      this.value = _new\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var sliderDown = false;\r\n    var sliderTrigger = this.$refs['sliderTrigger']\r\n    var slider = this.$refs['slider']\r\n    var height = slider.clientHeight;\r\n    var offsetTop = slider.getBoundingClientRect().y;\r\n\r\n    slider.style.display = 'none'\r\n    \r\n\r\n    sliderTrigger.addEventListener('mousedown', (e) => {\r\n      sliderTrigger.style.pointerEvents = 'none'\r\n      sliderDown = true\r\n      this.$refs['slider'].style.display = ''\r\n      slider.firstChild.style.top = '0%'\r\n    });\r\n\r\n    window.addEventListener('mouseup', (e) => {\r\n      if(sliderDown) {\r\n        sliderDown = false\r\n        this.$refs['slider'].style.display = 'none'\r\n        sliderTrigger.style.pointerEvents = ''\r\n      }\r\n    });\r\n\r\n    window.addEventListener('mousemove', (e) => {\r\n      if(sliderDown) {\r\n        var rel = (e.clientY - offsetTop) / height\r\n        var value = this.clamp(rel, 0, 1) * 100\r\n\r\n        slider.firstChild.style.top = value + '%'\r\n        this.value = Math.round(value)\r\n        this.$emit('value-change', this.value)\r\n      }\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style lang=\"scss\" scoped>\r\n$track-w: 10em;\r\n$track-h: .25em;\r\n$thumb-d: 1.5em;\r\n\r\n.click-slider {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n}\r\n\r\n.click-slider > input {\r\n  margin-bottom: 3px;\r\n  width: 35px;\r\n  height: 18px;\r\n  background-color: rgb(94, 94, 94);\r\n  border: 0px solid black;\r\n  color: rgb(221, 221, 221);\r\n  font-family: Comfortaa;\r\n  background-color: rgb(112, 112, 112);\r\n  text-align: center;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  margin-right: 0;\r\n}\r\n\r\n.slider {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.slider .sliderTrigger {\r\n  background-color: rgb(82, 82, 82);\r\n  width: 17px;\r\n  height: 17px;\r\n  margin-bottom: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  border-top-right-radius: 3px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  user-select: none;\r\n  -moz-user-select: none;\r\n\r\n  &:hover {\r\n    background-color: rgb(71, 71, 71);\r\n  }\r\n}\r\n\r\n.input {\r\n  height: 70px;\r\n  position: absolute;\r\n  top: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  & .handle {\r\n    margin-top: -6px;\r\n    width: 12px;\r\n    height: 12px;\r\n    top: 0%;\r\n    border-radius: 10px;\r\n    background-color: rgb(94, 158, 255);\r\n    position: absolute;\r\n  }\r\n\r\n  & .track {\r\n    height: 100%;\r\n    width: 4px;\r\n    background-color: rgb(221, 221, 221);\r\n    border-radius: 10px;\r\n  }\r\n}\r\n\r\ninput:active {\r\n  outline-width: 1px;\r\n}\r\n</style>\r\n"]}]}