{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\tools\\ToolPen.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\tools\\ToolPen.vue","mtime":1555177307597},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport paper from 'paper'\r\nimport Tool from '../Tool.vue'\r\nimport { mapMutations, mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ToolPen',\r\n  computed: {\r\n    ...mapState([\r\n      'ACTIVE',\r\n      'TOOLPEN'\r\n    ])\r\n  },\r\n  components: {\r\n    Tool\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'SET_ACTIVE',\r\n      'ADD_SHAPE',\r\n      'ADD_SELECT'\r\n    ]),\r\n    setActive: function() {\r\n      this.SET_ACTIVE(\"pen\")\r\n\r\n      this.TOOLPEN.activate();\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var self = this;\r\n\r\n    var oldPath;\r\n    var newPath;\r\n    var delta = 0;\r\n\r\n    self.TOOLPEN.onMouseDown = function(e) {\r\n        newPath = new Path();\r\n        newPath.strokeColor = 'black';\r\n\r\n        delta = 0;\r\n\r\n        project.activeLayer.selected = false;\r\n    }\r\n\r\n    self.TOOLPEN.onMouseDrag = function(e) {\r\n        newPath.add(e.point);\r\n        delta += e.delta.length;\r\n    }\r\n\r\n    self.TOOLPEN.onMouseUp = function(e) {\r\n        // Don't create an object for a click\r\n        if (delta < 3) {\r\n            newPath.remove();\r\n            return;\r\n        }\r\n\r\n        newPath.smooth();\r\n        newPath.simplify();\r\n        newPath.selected = true;\r\n\r\n        oldPath = newPath;\r\n        newPath.selectable = true;\r\n\r\n        self.ADD_SELECT(newPath);\r\n        self.ADD_SHAPE(newPath);\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["ToolPen.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ToolPen.vue","sourceRoot":"src/components/tools","sourcesContent":["<template>\r\n  <tool imgSource=\"tool-pen.png\" @isActive=\"setActive\" />  \r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport paper from 'paper'\r\nimport Tool from '../Tool.vue'\r\nimport { mapMutations, mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ToolPen',\r\n  computed: {\r\n    ...mapState([\r\n      'ACTIVE',\r\n      'TOOLPEN'\r\n    ])\r\n  },\r\n  components: {\r\n    Tool\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'SET_ACTIVE',\r\n      'ADD_SHAPE',\r\n      'ADD_SELECT'\r\n    ]),\r\n    setActive: function() {\r\n      this.SET_ACTIVE(\"pen\")\r\n\r\n      this.TOOLPEN.activate();\r\n    }\r\n  },\r\n  mounted: function() {\r\n    var self = this;\r\n\r\n    var oldPath;\r\n    var newPath;\r\n    var delta = 0;\r\n\r\n    self.TOOLPEN.onMouseDown = function(e) {\r\n        newPath = new Path();\r\n        newPath.strokeColor = 'black';\r\n\r\n        delta = 0;\r\n\r\n        project.activeLayer.selected = false;\r\n    }\r\n\r\n    self.TOOLPEN.onMouseDrag = function(e) {\r\n        newPath.add(e.point);\r\n        delta += e.delta.length;\r\n    }\r\n\r\n    self.TOOLPEN.onMouseUp = function(e) {\r\n        // Don't create an object for a click\r\n        if (delta < 3) {\r\n            newPath.remove();\r\n            return;\r\n        }\r\n\r\n        newPath.smooth();\r\n        newPath.simplify();\r\n        newPath.selected = true;\r\n\r\n        oldPath = newPath;\r\n        newPath.selectable = true;\r\n\r\n        self.ADD_SELECT(newPath);\r\n        self.ADD_SHAPE(newPath);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n</style>"]}]}