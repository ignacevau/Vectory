{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\sidebar-right\\stroke-grid\\ColorTrigger.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\sidebar-right\\stroke-grid\\ColorTrigger.vue","mtime":1555880376801},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapMutations, mapState } from 'vuex'\r\nimport { bus } from '@/main.js'\r\n\r\nexport default {\r\n  name: 'ColorTrigger',\r\n  data: function() {\r\n    return {\r\n      oldColor: 'rgb(94, 94, 94)',\r\n      color: 'rgb(94, 94, 94)',\r\n      changingColor: false\r\n    }\r\n  },\r\n  props: [\r\n    'parentColor'\r\n  ],\r\n  methods: {\r\n    ...mapMutations([\r\n      'SHOW_COLORPICKER'\r\n    ]),\r\n    showColorpicker: function() {\r\n      this.changingColor = true;\r\n      this.SHOW_COLORPICKER();\r\n    }\r\n  },\r\n  watch: {\r\n    parentColor: function(_new, _old) {\r\n      if(_new == 'none') {\r\n        this.color = 'rgb(94, 94, 94)'\r\n      }\r\n      else {\r\n        this.color = _new\r\n      }\r\n    }\r\n  },\r\n  mounted: function() {\r\n    bus.$on('color_change', (color) => {\r\n      if(this.changingColor) {\r\n        this.color = color.hex;\r\n      }\r\n    });\r\n\r\n    bus.$on('hide_colorpicker', () => {\r\n      if(this.changingColor) {\r\n        this.color = this.oldColor\r\n        this.changingColor = false\r\n      }\r\n    });\r\n\r\n    bus.$on('set_color', () => {\r\n      if(this.changingColor) {\r\n        this.$emit('value-change', this.color);\r\n        this.changingColor = false;\r\n        this.oldColor = this.color\r\n      }\r\n    });\r\n  }\r\n}\r\n",{"version":3,"sources":["ColorTrigger.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ColorTrigger.vue","sourceRoot":"src/components/sidebar-right/stroke-grid","sourcesContent":["<template>\r\n  <div class=\"color-trigger\">\r\n    <div class=\"box\" v-bind:style=\"{ 'background-color': color }\" @click=\"showColorpicker()\">\r\n      <img src=\"@/assets/color-undefined.png\" v-if=\"parentColor == 'none' ? true : false\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from 'vuex'\r\nimport { bus } from '@/main.js'\r\n\r\nexport default {\r\n  name: 'ColorTrigger',\r\n  data: function() {\r\n    return {\r\n      oldColor: 'rgb(94, 94, 94)',\r\n      color: 'rgb(94, 94, 94)',\r\n      changingColor: false\r\n    }\r\n  },\r\n  props: [\r\n    'parentColor'\r\n  ],\r\n  methods: {\r\n    ...mapMutations([\r\n      'SHOW_COLORPICKER'\r\n    ]),\r\n    showColorpicker: function() {\r\n      this.changingColor = true;\r\n      this.SHOW_COLORPICKER();\r\n    }\r\n  },\r\n  watch: {\r\n    parentColor: function(_new, _old) {\r\n      if(_new == 'none') {\r\n        this.color = 'rgb(94, 94, 94)'\r\n      }\r\n      else {\r\n        this.color = _new\r\n      }\r\n    }\r\n  },\r\n  mounted: function() {\r\n    bus.$on('color_change', (color) => {\r\n      if(this.changingColor) {\r\n        this.color = color.hex;\r\n      }\r\n    });\r\n\r\n    bus.$on('hide_colorpicker', () => {\r\n      if(this.changingColor) {\r\n        this.color = this.oldColor\r\n        this.changingColor = false\r\n      }\r\n    });\r\n\r\n    bus.$on('set_color', () => {\r\n      if(this.changingColor) {\r\n        this.$emit('value-change', this.color);\r\n        this.changingColor = false;\r\n        this.oldColor = this.color\r\n      }\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.box {\r\n  width: 17px;\r\n  height: 17px;\r\n  border: 1.5px solid rgb(226, 226, 226);\r\n  background-color: red;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.box:hover {\r\n  border: 1px solid white;\r\n  border-radius: 1px;\r\n}\r\n.box:active {\r\n  border: 2px solid white;\r\n}\r\n.box img {\r\n  max-height: 40%;\r\n  max-width: 40%;\r\n}\r\n</style>"]}]}