{"remainingRequest":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\Vectory\\src\\components\\Tool.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\Vectory\\src\\components\\Tool.vue","mtime":1554805756291},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub\\Vectory\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { bus } from '@/main.js'\r\n\r\nvar images = require.context('../assets/', false, /\\.png$/)\r\n\r\nexport default {\r\n  name: 'Tool',\r\n  mounted: function() {\r\n    this.active = this.propsActive\r\n\r\n    bus.$on(\"deselect\", data => {\r\n      if(data.element != this) {\r\n        this.active = false\r\n      }\r\n    });\r\n  },\r\n  data: function() {\r\n    return {\r\n      active: false\r\n    }\r\n  },\r\n  props: [\r\n    'imgSource',\r\n    'propsActive'\r\n  ],\r\n  methods: {\r\n    imgUrl: function() {\r\n      return images(\"./\" + this.imgSource)\r\n    },\r\n    select: function() {\r\n      bus.$emit(\"deselect\", { element: this })\r\n      this.active = true\r\n      this.$emit(\"isActive\")\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Tool.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tool.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"toolDiv\">\r\n    <span v-bind:class=\"{ 'tool': true, 'tools-active': active }\" id=\"tool-select\" @click=\"select()\">\r\n      <img v-bind:src=\"imgUrl()\" class=\"tool-img\" ondragstart=\"return false;\" />\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { bus } from '@/main.js'\r\n\r\nvar images = require.context('../assets/', false, /\\.png$/)\r\n\r\nexport default {\r\n  name: 'Tool',\r\n  mounted: function() {\r\n    this.active = this.propsActive\r\n\r\n    bus.$on(\"deselect\", data => {\r\n      if(data.element != this) {\r\n        this.active = false\r\n      }\r\n    });\r\n  },\r\n  data: function() {\r\n    return {\r\n      active: false\r\n    }\r\n  },\r\n  props: [\r\n    'imgSource',\r\n    'propsActive'\r\n  ],\r\n  methods: {\r\n    imgUrl: function() {\r\n      return images(\"./\" + this.imgSource)\r\n    },\r\n    select: function() {\r\n      bus.$emit(\"deselect\", { element: this })\r\n      this.active = true\r\n      this.$emit(\"isActive\")\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.toolDiv {\r\n    margin: 8px 4px 0px 4px;\r\n    -moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n}\r\n.tool {\r\n    background-color: rgb(102, 102, 102);\r\n    width: 35px;\r\n    height: 35px;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    flex-shrink: 0;\r\n    flex-grow: 0;\r\n    justify-content: center;\r\n    align-content: center;\r\n    -moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\n.tool:hover {\r\n    background-color: rgb(77, 77, 77);\r\n}\r\n\r\n.tool:active {\r\n    background-color: rgb(63, 63, 63);\r\n}\r\n\r\n.tools-active {\r\n    background-color: rgb(63, 63, 63);\r\n}\r\n\r\n.tools-active:hover {\r\n    background-color: rgb(63, 63, 63);\r\n}\r\n\r\n.tool-img {\r\n    margin: 15%;\r\n    width: 70%;\r\n    height: 70%;\r\n    flex: 0 0 auto;\r\n    -moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    -webkit-user-drag: none;\r\n}\r\n</style>\r\n"]}]}